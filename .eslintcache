[{"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\index.js":"1","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\App.js":"2","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\index.js":"4","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Main.jsx":"5","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Router\\Router.jsx":"6","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\verify.js":"7","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\getDataReducer.js":"8","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\signup.js":"9","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\updateModal.js":"10","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\signedup.js":"11","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Notifications\\SessionDetailUser.jsx":"12","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\signupCategories.js":"13","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\notification.js":"14","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\profileFace.js":"15","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\signUpProfle.js":"16","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\profileForm.js":"17","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\addSession.js":"18","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\addedSession.js":"19","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\signupBank.js":"20","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\connectBank.js":"21","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\sessionDetails.js":"22","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\sessionModal.js":"23","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\cancelPolicy.js":"24","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\ratingReview.js":"25","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\earnings.js":"26","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\header.js":"27","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\earningDetails.js":"28","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\userProfile.js":"29","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\uploadFile.js":"30","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\settingsSidebar.js":"31","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\settings.js":"32","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\payouts.js":"33","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\sessionDetailUserPop.js":"34","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\postFetch.js":"35","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\patchApi.js":"36","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\getApi.js":"37","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\fetchLocalData.js":"38","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\Main.js":"39","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\AudioVideo.jsx":"40","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Notifications\\Notification.jsx":"41","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Login\\Login.jsx":"42","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Signup\\Verify.jsx":"43","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Signup\\Bank.jsx":"44","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Signup\\Signup.jsx":"45","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Signup\\Face.jsx":"46","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Signup\\CreateAccount.jsx":"47","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Signup\\Profile.jsx":"48","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Session\\CancelPolicy.jsx":"49","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Signup\\ConnectBank.jsx":"50","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Payouts\\Payouts.jsx":"51","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Ratings\\Ratings.jsx":"52","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\MyEarnings\\Earnings.jsx":"53","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\MyEarnings\\EarningDetails.jsx":"54","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Session\\NewSession.jsx":"55","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Session\\SessionDetails.jsx":"56","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Profile\\UserProfile.jsx":"57","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Settings\\Contacts.jsx":"58","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Settings\\Terms.jsx":"59","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Profile\\EditUserProfile.jsx":"60","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Settings\\About.jsx":"61","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Settings\\Privacy.jsx":"62","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Settings\\BankDetails.jsx":"63","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Settings\\Faqs.jsx":"64","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\sessionDetailUserPop.js":"65","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\constants\\constants.js":"66","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Notifications\\Sliders.jsx":"67","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Notifications\\Popup.jsx":"68","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Header\\Header.jsx":"69","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\Components.js":"70","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\earnings.js":"71","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\getFetchParam.js":"72","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\App.js":"73","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\patchApi.js":"74","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\notification.js":"75","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\postFetch.js":"76","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\verify.js":"77","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\signedUp.js":"78","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\getFetch.js":"79","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\settings.js":"80","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\toggleCollapse.js":"81","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\WebCam.jsx":"82","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\Mic.jsx":"83","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Login\\LoginForm.jsx":"84","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Settings\\Sidebar.jsx":"85","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\userProfile.js":"86","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Sidebar\\Sidebar.jsx":"87","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\sessionModal.js":"88","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\addedSession.js":"89","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\postFetchParam.js":"90","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\addSession.js":"91","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\sessionDetail.js":"92","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\Card.js":"93","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\Toogle.js":"94","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\header.js":"95","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\constants\\api_env.js":"96","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Session\\Popup.jsx":"97","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\earningDetails.js":"98","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\ratingReview.js":"99","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\connectBank.js":"100","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\payouts.js":"101","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\Call.js":"102","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\cancelPolicy.js":"103","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\signupProfile.js":"104","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\updateModal.js":"105","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\uploadedFile.js":"106","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\profileFace.js":"107","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\Signup.js":"108","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\signupBank.js":"109","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\settingSidebar.js":"110","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\sidebarList.js":"111","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Login\\ModalPopup.jsx":"112"},{"size":754,"mtime":1632313996384,"results":"113","hashOfConfig":"114"},{"size":603,"mtime":1632313996280,"results":"115","hashOfConfig":"114"},{"size":375,"mtime":1632313996413,"results":"116","hashOfConfig":"114"},{"size":1899,"mtime":1632313996394,"results":"117","hashOfConfig":"114"},{"size":1176,"mtime":1632313996319,"results":"118","hashOfConfig":"114"},{"size":5464,"mtime":1632313996331,"results":"119","hashOfConfig":"114"},{"size":425,"mtime":1632313996412,"results":"120","hashOfConfig":"114"},{"size":382,"mtime":1632313996393,"results":"121","hashOfConfig":"114"},{"size":413,"mtime":1632313996408,"results":"122","hashOfConfig":"114"},{"size":815,"mtime":1632313996410,"results":"123","hashOfConfig":"114"},{"size":429,"mtime":1632313996407,"results":"124","hashOfConfig":"114"},{"size":4862,"mtime":1632313996324,"results":"125","hashOfConfig":"114"},{"size":461,"mtime":1632313996409,"results":"126","hashOfConfig":"114"},{"size":465,"mtime":1632313996395,"results":"127","hashOfConfig":"114"},{"size":443,"mtime":1632313996399,"results":"128","hashOfConfig":"114"},{"size":647,"mtime":1632313996406,"results":"129","hashOfConfig":"114"},{"size":443,"mtime":1632313996400,"results":"130","hashOfConfig":"114"},{"size":443,"mtime":1632313996387,"results":"131","hashOfConfig":"114"},{"size":538,"mtime":1632313996388,"results":"132","hashOfConfig":"114"},{"size":603,"mtime":1632313996409,"results":"133","hashOfConfig":"114"},{"size":640,"mtime":1632313996390,"results":"134","hashOfConfig":"114"},{"size":461,"mtime":1632313996402,"results":"135","hashOfConfig":"114"},{"size":1069,"mtime":1632313996403,"results":"136","hashOfConfig":"114"},{"size":449,"mtime":1632313996389,"results":"137","hashOfConfig":"114"},{"size":439,"mtime":1632313996400,"results":"138","hashOfConfig":"114"},{"size":429,"mtime":1632313996391,"results":"139","hashOfConfig":"114"},{"size":423,"mtime":1632313996394,"results":"140","hashOfConfig":"114"},{"size":463,"mtime":1632313996391,"results":"141","hashOfConfig":"114"},{"size":608,"mtime":1632313996412,"results":"142","hashOfConfig":"114"},{"size":441,"mtime":1632313996411,"results":"143","hashOfConfig":"114"},{"size":468,"mtime":1632313996405,"results":"144","hashOfConfig":"114"},{"size":1440,"mtime":1632313996404,"results":"145","hashOfConfig":"114"},{"size":421,"mtime":1632313996397,"results":"146","hashOfConfig":"114"},{"size":863,"mtime":1632313996401,"results":"147","hashOfConfig":"114"},{"size":2247,"mtime":1632313996398,"results":"148","hashOfConfig":"114"},{"size":399,"mtime":1632313996396,"results":"149","hashOfConfig":"114"},{"size":3533,"mtime":1632313996392,"results":"150","hashOfConfig":"114"},{"size":297,"mtime":1632313996288,"results":"151","hashOfConfig":"114"},{"size":285,"mtime":1632313996311,"results":"152","hashOfConfig":"114"},{"size":6237,"mtime":1632313996308,"results":"153","hashOfConfig":"114"},{"size":13415,"mtime":1632496944597,"results":"154","hashOfConfig":"114"},{"size":1362,"mtime":1632313996317,"results":"155","hashOfConfig":"114"},{"size":3701,"mtime":1632313996350,"results":"156","hashOfConfig":"114"},{"size":2740,"mtime":1632313996345,"results":"157","hashOfConfig":"114"},{"size":11088,"mtime":1632313996349,"results":"158","hashOfConfig":"114"},{"size":3588,"mtime":1632313996347,"results":"159","hashOfConfig":"114"},{"size":2632,"mtime":1632313996346,"results":"160","hashOfConfig":"114"},{"size":8502,"mtime":1632315913340,"results":"161","hashOfConfig":"114"},{"size":2662,"mtime":1632313996332,"results":"162","hashOfConfig":"114"},{"size":4481,"mtime":1632313996345,"results":"163","hashOfConfig":"114"},{"size":5394,"mtime":1632313996326,"results":"164","hashOfConfig":"114"},{"size":9061,"mtime":1632496663674,"results":"165","hashOfConfig":"114"},{"size":7106,"mtime":1632313996321,"results":"166","hashOfConfig":"114"},{"size":7487,"mtime":1632313996320,"results":"167","hashOfConfig":"114"},{"size":33825,"mtime":1632317682714,"results":"168","hashOfConfig":"114"},{"size":17273,"mtime":1632497175038,"results":"169","hashOfConfig":"114"},{"size":11691,"mtime":1632313996327,"results":"170","hashOfConfig":"114"},{"size":3784,"mtime":1632313996339,"results":"171","hashOfConfig":"114"},{"size":27953,"mtime":1632313996342,"results":"172","hashOfConfig":"114"},{"size":16234,"mtime":1632313996327,"results":"173","hashOfConfig":"114"},{"size":2672,"mtime":1632313996337,"results":"174","hashOfConfig":"114"},{"size":4237,"mtime":1632313996340,"results":"175","hashOfConfig":"114"},{"size":14216,"mtime":1632313996338,"results":"176","hashOfConfig":"114"},{"size":3747,"mtime":1632313996339,"results":"177","hashOfConfig":"114"},{"size":629,"mtime":1632313996297,"results":"178","hashOfConfig":"114"},{"size":4106,"mtime":1632313996351,"results":"179","hashOfConfig":"114"},{"size":692,"mtime":1632313996325,"results":"180","hashOfConfig":"114"},{"size":2424,"mtime":1632313996323,"results":"181","hashOfConfig":"114"},{"size":9820,"mtime":1632313996315,"results":"182","hashOfConfig":"114"},{"size":1735,"mtime":1632313996310,"results":"183","hashOfConfig":"114"},{"size":240,"mtime":1632313996288,"results":"184","hashOfConfig":"114"},{"size":1895,"mtime":1632313996290,"results":"185","hashOfConfig":"114"},{"size":1160,"mtime":1632313996307,"results":"186","hashOfConfig":"114"},{"size":849,"mtime":1632313996291,"results":"187","hashOfConfig":"114"},{"size":2081,"mtime":1632313996291,"results":"188","hashOfConfig":"114"},{"size":1518,"mtime":1632313996293,"results":"189","hashOfConfig":"114"},{"size":237,"mtime":1632313996305,"results":"190","hashOfConfig":"114"},{"size":190,"mtime":1632313996300,"results":"191","hashOfConfig":"114"},{"size":741,"mtime":1632313996289,"results":"192","hashOfConfig":"114"},{"size":1863,"mtime":1632313996299,"results":"193","hashOfConfig":"114"},{"size":477,"mtime":1632313996302,"results":"194","hashOfConfig":"114"},{"size":479,"mtime":1632313996314,"results":"195","hashOfConfig":"114"},{"size":580,"mtime":1632313996312,"results":"196","hashOfConfig":"114"},{"size":7083,"mtime":1632313996318,"results":"197","hashOfConfig":"114"},{"size":1592,"mtime":1632313996341,"results":"198","hashOfConfig":"114"},{"size":822,"mtime":1632313996304,"results":"199","hashOfConfig":"114"},{"size":2614,"mtime":1632313996343,"results":"200","hashOfConfig":"114"},{"size":1072,"mtime":1632313996298,"results":"201","hashOfConfig":"114"},{"size":262,"mtime":1632313996285,"results":"202","hashOfConfig":"114"},{"size":1253,"mtime":1632313996293,"results":"203","hashOfConfig":"114"},{"size":244,"mtime":1632313996284,"results":"204","hashOfConfig":"114"},{"size":666,"mtime":1632313996296,"results":"205","hashOfConfig":"114"},{"size":1804,"mtime":1632313996309,"results":"206","hashOfConfig":"114"},{"size":1878,"mtime":1632313996313,"results":"207","hashOfConfig":"114"},{"size":231,"mtime":1632313996290,"results":"208","hashOfConfig":"114"},{"size":80,"mtime":1632313996351,"results":"209","hashOfConfig":"114"},{"size":4056,"mtime":1632313996334,"results":"210","hashOfConfig":"114"},{"size":260,"mtime":1632313996287,"results":"211","hashOfConfig":"114"},{"size":241,"mtime":1632313996295,"results":"212","hashOfConfig":"114"},{"size":479,"mtime":1632313996287,"results":"213","hashOfConfig":"114"},{"size":234,"mtime":1632313996292,"results":"214","hashOfConfig":"114"},{"size":8295,"mtime":1632313996308,"results":"215","hashOfConfig":"114"},{"size":257,"mtime":1632313996286,"results":"216","hashOfConfig":"114"},{"size":491,"mtime":1632313996301,"results":"217","hashOfConfig":"114"},{"size":619,"mtime":1632313996303,"results":"218","hashOfConfig":"114"},{"size":189,"mtime":1632313996303,"results":"219","hashOfConfig":"114"},{"size":241,"mtime":1632313996294,"results":"220","hashOfConfig":"114"},{"size":359,"mtime":1632313996284,"results":"221","hashOfConfig":"114"},{"size":459,"mtime":1632313996301,"results":"222","hashOfConfig":"114"},{"size":256,"mtime":1632313996298,"results":"223","hashOfConfig":"114"},{"size":422,"mtime":1632313996299,"results":"224","hashOfConfig":"114"},{"size":3410,"mtime":1632313996318,"results":"225","hashOfConfig":"114"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},"2cbi40",{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"228"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"228"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"228"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"228"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"228"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"228"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"228"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"228"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"228"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"228"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"228"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"228"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"228"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"228"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"228"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"228"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"228"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"228"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"228"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"228"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"228"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"228"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"228"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"228"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"228"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"228"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"228"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"228"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"228"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"228"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"228"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"228"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"228"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"228"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"228"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"228"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"228"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"228"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"228"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"228"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"228"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"228"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"228"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"228"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"228"},"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\index.js",[],["496","497"],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\App.js",["498"],"import React from 'react';\r\n\r\n// Components\r\nimport Main from './components/Main';\r\n\r\n// Redux\r\nimport {applyMiddleware, createStore} from 'redux';\r\nimport {logger} from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport {Provider} from 'react-redux';\r\n// Redux Components\r\nimport rootReducer from './reducer/index';\r\n\r\n\r\n// Router\r\nimport Router from './components/Router/Router';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(logger, thunk)\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\index.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Main.jsx",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Router\\Router.jsx",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\verify.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\getDataReducer.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\signup.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\updateModal.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\signedup.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Notifications\\SessionDetailUser.jsx",["499","500","501","502","503","504","505","506","507","508"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button, Row, Col, Card, CardText, CardTitle\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { sessionPopup } from '../../actions/sessionDetailUserPop';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Styles\r\nimport '../../styles/notifications.scss';\r\n\r\n// Constants\r\nimport { cancel_session } from '../../constants/constants';\r\n\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport Sliders from './Sliders';\r\nimport CancelledPolicy from '../Session/CancelPolicy';\r\nimport Popup from './Popup';\r\n\r\nfunction SessionDetailUser(props) {\r\n\r\n    let data = props.location.state;\r\n    const [cancelPop, setCancelPop] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const [popUpData, setPopupData] = useState({});\r\n\r\n    \r\n    const getDetails=()=> {\r\n        return(\r\n            <Row className=\"session-detail-wrapper\">\r\n                <Col sm=\"3\">\r\n                    <p className=\"session-heading\">\r\n                        {data.heading}\r\n                    </p>\r\n                    <p className=\"session-type\">\r\n                        {data.cName}\r\n                    </p>\r\n                    <p className=\"session-date-time\">\r\n                    <i className=\"icon-ic_clock pr-2\"></i>\r\n                        {data.time}\r\n                    </p>\r\n                    <p className=\"session-date-time\">\r\n                        <i className=\"icon-ic_calendar  pr-2\"></i>\r\n                        {data.date}\r\n                    </p>\r\n                </Col>\r\n                <Col  sm=\"3\">\r\n                    <p className=\"session-info-heading\">\r\n                        {data.need}\r\n                    </p>\r\n                    <p className=\"session-info-content\">\r\n                        {data.needContent}\r\n                    </p>\r\n                </Col>\r\n                <Col  sm=\"3\">\r\n                    <p className=\"session-info-heading\">\r\n                        {data.about}\r\n                    </p>\r\n                    <p className=\"session-info-content\">\r\n                        {data.aboutContent}\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    const seeCancelPolicy=()=> {\r\n        props.history.push('/cancellation-policy');\r\n    }\r\n\r\n    const cancelSession=()=> {\r\n        setCancelPop(!cancelPop);\r\n    }\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <div className=\"session-user-right-container\">\r\n                    <Row className=\"mb-5\">\r\n                        <Col className=\"d-flex align-items-center col-sm-3 pl-5\">\r\n                            <h6 className=\"title m-0\">\r\n                                <i className=\"icon-chevron-left\" onClick={()=>props.history.goBack()}></i>\r\n                                    Sessions Details\r\n                            </h6>\r\n                        </Col>\r\n                        {data.statusDetail === \"Booked\" ?\r\n                        <Col className=\"add-btn-wrapper col-sm-9\">\r\n                            <span>\r\n                                <Button className=\"addBtn\" onClick={()=>{cancelSession()}}>\r\n                                    Cancel Session\r\n                                </Button>\r\n                            </span>\r\n                        </Col>: '' }\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Sliders />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div className=\"session-info\">\r\n                                <span className=\"session-status\">\r\n                                   <span className={data.statusDetail}>\r\n                                    <i className={data.statusIcon}></i>\r\n                                   </span>\r\n                                    {data.statusDetail}\r\n                                </span>\r\n                                <span className=\"session-amount\">\r\n                                    {data.amount}\r\n                                </span>\r\n                                <span className=\"cancel-policy-link\" onClick={()=>seeCancelPolicy()}>\r\n                                    {data.cancelPolicy}\r\n                                </span>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    {getDetails()}\r\n                    {cancelPop ? <Popup modalState={cancelPop} action_type={cancel_session} /> : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SessionDetailUser);","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\signupCategories.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\notification.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\profileFace.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\signUpProfle.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\profileForm.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\addSession.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\addedSession.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\signupBank.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\connectBank.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\sessionDetails.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\sessionModal.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\cancelPolicy.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\ratingReview.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\earnings.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\header.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\earningDetails.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\userProfile.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\uploadFile.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\settingsSidebar.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\settings.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\payouts.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\sessionDetailUserPop.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\postFetch.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\patchApi.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\reducer\\getApi.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\fetchLocalData.js",["509"],"import axios from 'axios';\r\nimport localData from '../Data/Data.json';\r\n\r\nexport const getLocal = () => {\r\n    return (dispatch) => {\r\n        if (localData) {\r\n            dispatch({\r\n                type: 'fetchLocalData',\r\n                payload: localData\r\n            })\r\n        }\r\n    }\r\n}","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\Main.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\AudioVideo.jsx",["510","511","512","513"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col } from \"reactstrap\";\r\n\r\nimport Comments from \"./Components\";\r\nimport \"./style.css\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { fetchEarning } from \"../../actions/earnings\";\r\nimport { patchFetch } from \"../../actions/patchApi\";\r\nimport { getFetchParam } from \"../../actions/getFetchParam\";\r\n\r\n// Router\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// Styles\r\nimport \"../../styles/notifications.scss\";\r\n\r\n// Components\r\nimport WebcamComponent from \"./WebCam\";\r\nimport Mic from \"./Mic\";\r\nimport Header from \"../Header/Header\";\r\nimport App from \"../Agora/App\";\r\n\r\n// image\r\nimport start_session_img from \"../../images/start-session-img.png\";\r\nimport { complete_session } from \"../../constants/constants\";\r\n\r\nasync function getComments(id) {\r\n    var formdata = new FormData();\r\n\r\n    var requestOptions = {\r\n        method: \"GET\",\r\n        body: formdata,\r\n        redirect: \"follow\",\r\n    };\r\n    let comments = [];\r\n\r\n    fetch(\"https://api.tunnin.io/comments/get_comments/\" + id, requestOptions)\r\n        .then((result) => (comments = result))\r\n        .catch((error) => console.log(\"error\", error));\r\n    // .then((response) => response.text())\r\n\r\n    console.log(\"********call*****************\");\r\n    console.log(comments);\r\n    console.log(\"********call*****************\");\r\n    return comments;\r\n}\r\n\r\nfunction AudioVideo(props) {\r\n    const dispatch = useDispatch();\r\n    const [comments, setComments] = useState([]);\r\n    const [status, setStatus] = useState(false);\r\n    const [videoStatus, setVideoStatus] = useState(true);\r\n\r\n    const userInfo = useSelector((state) => state.postFetch);\r\n\r\n    let userId;\r\n\r\n    if (userInfo.hasOwnProperty(\"userLogged\")) {\r\n        if (userInfo.userLogged) {\r\n            userId = userInfo.userLogged._id;\r\n        }\r\n    }\r\n\r\n    let sessionId = props.location.sessionRes._id;\r\n\r\n    useEffect(() => {\r\n        console.log(\"inside audiovider useeffect\");\r\n        getComments(sessionId).then((data) => {\r\n            setComments(data);\r\n        });\r\n    }, [comments.length, sessionId]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"+++++++++++++comments updated\");\r\n        console.log(comments);\r\n        console.log(\"comments updated+++++++++++++\");\r\n    }, [comments, comments.length]);\r\n\r\n    const startSession = () => {\r\n        setStatus(!status);\r\n        if (status) {\r\n            completeSession();\r\n        }\r\n    };\r\n\r\n    const completeSession = () => {\r\n        dispatch(getFetchParam(complete_session, sessionId + \"/\" + userId));\r\n    };\r\n\r\n    const disableSession = () => {\r\n        setVideoStatus(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <div className=\"main\">\r\n                    <div className=\"left\">\r\n                        <Row>\r\n                            <Col\r\n                                sm=\"12\"\r\n                                className={\r\n                                    status\r\n                                        ? \"session-user-right-container audio-video-container session-started\"\r\n                                        : \"session-user-right-container audio-video-container\"\r\n                                }\r\n                            >\r\n                                <p className=\"title\">\r\n                                    <i\r\n                                        className=\"icon-chevron-left\"\r\n                                        onClick={() => props.history.goBack()}\r\n                                    ></i>\r\n                                    Test Audio & Video\r\n                                </p>\r\n                                {status ? (\r\n                                    <App\r\n                                        sessionId={sessionId}\r\n                                        videoStatus={videoStatus}\r\n                                    />\r\n                                ) : (\r\n                                    <div>\r\n                                        <WebcamComponent />\r\n                                        <Mic />\r\n                                        {/* <h1>Hello</h1> */}\r\n                                    </div>\r\n                                )}\r\n                                <div className=\"start-session-btn-wrapper\">\r\n                                    {status ? (\r\n                                        <div>\r\n                                            <Button\r\n                                                className=\"start-session-btn\"\r\n                                                onClick={() => startSession()}\r\n                                            >\r\n                                                End Session\r\n                                            </Button>\r\n                                            <Button\r\n                                                className=\"start-session-btn\"\r\n                                                onClick={() => startSession()}\r\n                                            >\r\n                                                Disable Video\r\n                                            </Button>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <Button\r\n                                            className=\"start-session-btn\"\r\n                                            onClick={() => startSession()}\r\n                                        >\r\n                                            Start Session\r\n                                        </Button>\r\n                                    )}\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    {status ? (\r\n                        <div className=\"right\">\r\n                            <Comments comments={comments} />\r\n                        </div>\r\n                    ) : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(AudioVideo);\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Notifications\\Notification.jsx",["514","515","516","517","518","519"],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Login\\Login.jsx",["520","521"],"import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport logo from \"../../images/tunnin-logo.png\";\r\nimport \"../../styles/login.scss\";\r\n\r\n// Components\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nfunction Login(props) {\r\n    const [heading, loginHeading] = useState(\"\");\r\n    const [loginform, loginData] = useState({});\r\n\r\n    useEffect(() => {\r\n        setHeading();\r\n        setLoginForm();\r\n    }, []);\r\n\r\n    const setHeading = () => {\r\n        loginHeading(props.loginDetails.dataState.login.heading);\r\n    };\r\n\r\n    const setLoginForm = () => {\r\n        loginData(props.loginDetails.dataState.loginForm);\r\n    };\r\n\r\n    const getLoginForm = () => {\r\n        if (Object.keys(loginform).length > 0) {\r\n            console.log(\"Login Form: \", loginform);\r\n            return <LoginForm formData={loginform} />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <Row>\r\n                <Col md=\"6\" sm=\"4\" className=\"left-login\">\r\n                    <h1 className=\"login-logo\">\r\n                        <img src={logo} alt=\"Logo\" />\r\n                    </h1>\r\n                </Col>\r\n                <Col md=\"6\" sm=\"4\" className=\"right-login\">\r\n                    {getLoginForm()}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Signup\\Verify.jsx",["522","523"],"import React, { useEffect } from \"react\";\r\n\r\nimport { Button } from \"reactstrap\";\r\n\r\nimport { useState } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nimport logo from \"../../images/tunnin-logo.png\";\r\nimport verify from \"../../images/verify-email-2.png\";\r\n// Constants\r\nimport { signed_up } from \"../../constants/constants\";\r\nimport { verify_type } from \"../../constants/constants\";\r\n\r\n// Router\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// Actions\r\nimport { SignedUp } from \"../../actions/signedUp\";\r\nimport { VerifyAction } from \"../../actions/verify\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Router\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// Style\r\nimport \"../../styles/verified.scss\";\r\n\r\nfunction Verify(props) {\r\n  const cookies = new Cookies();\r\n\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [auth, setAuth] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatchSignedupAction();\r\n    dispatchVerify();\r\n    authenticator();\r\n  }, []);\r\n\r\n  const authenticator = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({\r\n      username: cookies.get(\"username\"),\r\n      password: cookies.get(\"password\"),\r\n    });\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\"https://api.tunnin.io/users/auth\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => setUserId(result.data._id))\r\n      .catch((error) => console.log(\"error\", error));\r\n\r\n    if (userId) {\r\n      var raw1 = { id: userId };\r\n\r\n      var requestOptions = {\r\n        method: \"POST\",\r\n        body: raw1,\r\n        redirect: \"follow\",\r\n      };\r\n\r\n      fetch(\"https://api.tunnin.io/users/getEmail_status\", requestOptions)\r\n        .then((response) => response.json())\r\n        .then((result) => setAuth(result.emailStatus))\r\n        .catch((error) => console.log(\"error\", error));\r\n    }\r\n  };\r\n\r\n  const dispatchSignedupAction = () => {\r\n    dispatch(SignedUp(signed_up, location));\r\n  };\r\n\r\n  const dispatchVerify = () => {\r\n    dispatch(VerifyAction(verify_type));\r\n  };\r\n\r\n  const verifiedData = useSelector((state) => state.verify);\r\n\r\n  const routeToForm = (routeTo) => {\r\n    props.history.push(routeTo);\r\n  };\r\n\r\n  const getVerified = () => {\r\n    if (verifiedData.hasOwnProperty(\"data\")) {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"page-logo-wrapper\">\r\n            <img src={logo} alt=\"Logo\" />\r\n          </div>\r\n          <div className=\"verify-img\">\r\n            <img src={verify} alt=\"Reset Password\" />\r\n          </div>\r\n\r\n          <h3 className=\"heading\">{verifiedData.data.heading}</h3>\r\n          <p className=\"text\">{verifiedData.data.msg}</p>\r\n          <div className=\"next-btn-wrapper\">\r\n            {auth ? (\r\n              <Button\r\n                color=\"primary\"\r\n                size=\"lg\"\r\n                onClick={() => routeToForm(verifiedData.data.route)}\r\n              >\r\n                {verifiedData.data.btnText}\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                disabled\r\n                color=\"primary\"\r\n                size=\"lg\"\r\n                onClick={() => routeToForm(verifiedData.data.route)}\r\n              >\r\n                {verifiedData.data.btnText}\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <div className=\"verify\">{getVerified()}</div>;\r\n}\r\n\r\nexport default withRouter(Verify);\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Signup\\Bank.jsx",["524","525","526","527","528"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Row, Col, Label, Input, Button } from 'reactstrap';\r\n\r\nimport logo from '../../images/tunnin-logo.png';\r\n\r\n// Constants\r\nimport { signup_bank, signed_bank } from '../../constants/constants';\r\n\r\n// Style\r\nimport '../../styles/signupBank.scss';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { signUpBank } from '../../actions/signupBank';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction Bank(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchSignupBank();\r\n    }, [])\r\n\r\n    const dispatchSignupBank=()=> {\r\n        dispatch(signUpBank(signup_bank, null));\r\n    }\r\n\r\n    const signupbank = useSelector(state => state.signupBank);\r\n\r\n    const getSignUpBank=()=> {\r\n        if(signupbank.hasOwnProperty('data')) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <h5 className=\"heading\">\r\n                        {signupbank.data.heading}\r\n                        <img src={logo} alt=\"Logo\" />\r\n                    </h5>\r\n                    <h6 className=\"subheading\">\r\n                        {signupbank.data.subHeading}\r\n                    </h6>\r\n                    <div>\r\n                        <div className=\"country-heading\">\r\n                            <Label for=\"countries\">{signupbank.data.country}</Label>\r\n                            <select className=\"form-control\" name=\"select\" id=\"countries\" onChange={(event)=>selectedValue(event)}>\r\n                                {getSelection(signupbank.data)}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"next-btn-wrapper\">\r\n                        <Button color=\"primary\" size=\"lg\" onClick={()=>routeTo(signupbank.data.route)}>\r\n                            {signupbank.data.btnText}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const routeTo=(data)=> {\r\n        dispatch(signUpBank(signed_bank, country));\r\n        props.history.push(data);\r\n    }\r\n\r\n    let country;\r\n\r\n    const selectedValue=(event)=> {\r\n        country = event.target.value;\r\n    }\r\n\r\n    const getSelection=(data)=> {\r\n        let dropDown = data.countryList.map((item, index)=> {\r\n            return(\r\n                <option key={index} value={item.value}>\r\n                    {item.name}\r\n                </option>\r\n            )\r\n        })\r\n        return dropDown;\r\n    }\r\n\r\n    return(\r\n        <div className=\"signup-bank\">\r\n            {getSignUpBank()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Bank);","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Signup\\Signup.jsx",["529","530","531"],"import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Label, Button, FormGroup } from \"reactstrap\";\r\nimport Checkbox from \"react-custom-checkbox\";\r\nimport logo from \"../../images/tunnin-logo.png\";\r\n// Constants\r\nimport { sign_up, signed_up, reg_step_1 } from \"../../constants/constants\";\r\n// Actions\r\nimport { Signup } from \"../../actions/Signup\";\r\nimport { SignedUp } from \"../../actions/signedUp\";\r\nimport { postFetch } from \"../../actions/postFetch\";\r\n\r\n// Material UI\r\n\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\n//Cookies\r\n\r\nimport Cookies from \"universal-cookie\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// Router\r\nimport { withRouter } from \"react-router-dom\";\r\n// Styles\r\nimport \"../../styles/signup.scss\";\r\nimport { fine_res } from \"../../constants/api_env\";\r\nfunction SignUp(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const cookies = new Cookies();\r\n\r\n  // State\r\n  const [formVal, setForm] = useState(\"\");\r\n  const [viewPass, setViewPass] = useState(false);\r\n  const [selected, setSelected] = useState(\"\");\r\n  const [routeLoc, setRouteLoc] = useState(\"\");\r\n  const [fullName, setF_Name] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [dob, setDob] = useState(\"\");\r\n  const [password, setPass] = useState(\"\");\r\n  const [c_pass, setC_Pass] = useState(\"\");\r\n  const [newsletter, setSubscribe] = useState(0);\r\n  let checkValue = false;\r\n  useEffect(() => {\r\n    dispatchSignupAction();\r\n  }, []);\r\n  const dispatchSignupAction = () => {\r\n    dispatch(Signup(sign_up, null));\r\n  };\r\n\r\n  // let passwordValid = document.getElementById(\"password\");\r\n  // let confirm_password = document.getElementById(\"confirm_password\");\r\n\r\n  // function validatePassword() {\r\n  //   if (passwordValid.value != confirm_password.value) {\r\n  //     confirm_password.setCustomValidity(\"Passwords Don't Match\");\r\n  //   } else {\r\n  //     confirm_password.setCustomValidity(\"\");\r\n  //   }\r\n  // }\r\n\r\n  const signupState = useSelector((state) => state.signup);\r\n  const postApi = useSelector((state) => state.postFetch);\r\n  const getSignUp = () => {\r\n    if (signupState.hasOwnProperty(\"data\")) {\r\n      return (\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            if (password !== c_pass) {\r\n              alert(\"Passwords don't match\");\r\n              // prompt(\"Passwords don't match\");\r\n              // console.log(confirm_password);\r\n            } else {\r\n              dispatch(\r\n                postFetch(reg_step_1, {\r\n                  fullName,\r\n                  email,\r\n                  password,\r\n                  dob,\r\n                  newsletter,\r\n                })\r\n              );\r\n\r\n              cookies.set(\"username\", email);\r\n              cookies.set(\"password\", password);\r\n            }\r\n\r\n            console.log({\r\n              fullName,\r\n              email,\r\n              password,\r\n              dob,\r\n              newsletter,\r\n            });\r\n            formValue(signupState.data);\r\n          }}\r\n          className=\"container-fluid\"\r\n        >\r\n          <h2 className=\"heading\">\r\n            {signupState.data.heading}\r\n            <img src={logo} alt=\"Logo\" />\r\n          </h2>\r\n          <p className=\"subheading\">{signupState.data.subHeading}</p>\r\n          <Row className=\"signup-first-form-wrapper\">\r\n            {/* {formDetail(signupState.data)} */}\r\n            <Col xs=\"12\" sm=\"5\" md=\"5\" lg=\"5\">\r\n              <FormGroup className=\"custom-input-wrapper\">\r\n                <Label className=\"formheading\">\r\n                  <p>Full Name</p>\r\n                </Label>\r\n                <input\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"Elias Manik\"\r\n                  className=\"form-control\"\r\n                  onChange={(e) => {\r\n                    setF_Name(e.target.value);\r\n                  }}\r\n                />\r\n                <span className=\"input-icons secondary\">\r\n                  <i className=\"icon-person\"></i>\r\n                </span>\r\n                <span className=\"input-icons password\">\r\n                  <i\r\n                    className=\"\"\r\n                    // onClick={() => togglePass(item, index)}\r\n                  ></i>\r\n                </span>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"5\" md=\"5\" lg=\"5\">\r\n              <FormGroup\r\n                style={{ marginBottom: 2 }}\r\n                className=\"custom-input-wrapper\"\r\n              >\r\n                <Label className=\"formheading\">\r\n                  <p>Password</p>\r\n                </Label>\r\n                <input\r\n                  required\r\n                  id=\"password\"\r\n                  type={viewPass && selected === \"pass\" ? \"text\" : \"password\"}\r\n                  // pattern=\".{8,}\"\r\n                  minLength=\"8\"\r\n                  placeholder=\"***************\"\r\n                  className=\"form-control\"\r\n                  onChange={(e) => {\r\n                    setPass(e.target.value);\r\n                  }}\r\n                />\r\n                <span className=\"input-icons secondary\">\r\n                  <i className=\"icon-lock-unlock\"></i>\r\n                </span>\r\n                <span className=\"input-icons password\">\r\n                  <i\r\n                    className=\"icon-outline-visibility_off-24px\"\r\n                    onClick={() => togglePass(\"pass\")}\r\n                  ></i>\r\n                </span>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"5\" md=\"5\" lg=\"5\">\r\n              <FormGroup className=\"custom-input-wrapper\">\r\n                <Label className=\"formheading\">\r\n                  <p>Email Address</p>\r\n                </Label>\r\n                <input\r\n                  required\r\n                  type=\"email\"\r\n                  placeholder=\"dodgeui2020@gmail.com\"\r\n                  className=\"form-control\"\r\n                  onChange={(e) => {\r\n                    setEmail(e.target.value);\r\n                  }}\r\n                />\r\n                <span className=\"input-icons secondary\">\r\n                  <i className=\"icon-mail\"></i>\r\n                </span>\r\n                <span className=\"input-icons password\">\r\n                  <i\r\n                    className=\"\"\r\n                    // onClick={() => togglePass(item, index)}\r\n                  ></i>\r\n                </span>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"5\" md=\"5\" lg=\"5\">\r\n              <FormGroup className=\"custom-input-wrapper\">\r\n                <Label className=\"formheading\">\r\n                  <p>Confirm Password</p>\r\n                </Label>\r\n                <input\r\n                  id=\"confirm_password\"\r\n                  required\r\n                  type={viewPass && selected === \"c_pass\" ? \"text\" : \"password\"}\r\n                  placeholder=\"***************\"\r\n                  className=\"form-control\"\r\n                  onChange={(e) => {\r\n                    setC_Pass(e.target.value);\r\n                  }}\r\n                />\r\n                <span className=\"input-icons secondary\">\r\n                  <i className=\"icon-lock-unlock\"></i>\r\n                </span>\r\n                <span className=\"input-icons password\">\r\n                  <i\r\n                    className=\"icon-outline-visibility_off-24px\"\r\n                    onClick={() => togglePass(\"c_pass\")}\r\n                  ></i>\r\n                </span>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"5\" md=\"5\" lg=\"5\">\r\n              <FormGroup className=\"custom-input-wrapper\">\r\n                <Label className=\"formheading\">\r\n                  <p>Date of Birth</p>\r\n                </Label>\r\n\r\n                <input\r\n                style={{ width: \"auto\"}}\r\n                  required\r\n                  type=\"date\"\r\n                  placeholder=\"15-July-1996\"\r\n                  className=\"form-control\"\r\n                  onChange={(e) => {\r\n                    setDob(e.target.value);\r\n                  }}\r\n                />\r\n\r\n                <span className=\"input-icons secondary\">\r\n                  <i className=\"icon-calender\"></i>\r\n                </span>\r\n                <span className=\"input-icons password\">\r\n                  <i\r\n                    className=\"\"\r\n                    // onClick={() => togglePass(item, index)}\r\n                  ></i>\r\n                </span>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"5\" md=\"5\" lg=\"5\">\r\n              <FormGroup className=\"subscription-checkbox-wrapper \">\r\n                <Checkbox\r\n                  name=\"subscription-checkbox\"\r\n                  onChange={() => {\r\n                    handleChange(\"subscribe\");\r\n                  }}\r\n                  borderColor=\"#fff\"\r\n                  borderWidth={3}\r\n                  borderRadius={3}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  labelStyle={{\r\n                    marginLeft: 5,\r\n                    userSelect: \"none\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  label={signupState.data.subscribe}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col className=\"d-flex justify-content-center\" xs=\"12\">\r\n              {password === c_pass ? (\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  size=\"lg\"\r\n                  // onClick={() => formValue(signupState.data)}\r\n                >\r\n                  {signupState.data.btnText}\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  // disabled\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  size=\"lg\"\r\n                  // onClick={() => formValue(signupState.data)}\r\n                >\r\n                  {signupState.data.btnText}\r\n                </Button>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </form>\r\n      );\r\n    }\r\n  };\r\n  let form = {};\r\n  const handleChange = (key, data = \"\") => {\r\n    if (key === \"subscribe\") {\r\n      checkValue = !checkValue;\r\n      if (checkValue) {\r\n        checkValue = 1;\r\n        setSubscribe(1);\r\n      } else {\r\n        checkValue = 0;\r\n        setSubscribe(0);\r\n      }\r\n    }\r\n    console.log(form);\r\n    console.log({ fullName, email, password, dob, newsletter });\r\n  };\r\n  const formValue = (data) => {\r\n    setForm(form);\r\n    dispatch(SignedUp(signed_up, form));\r\n    // dispatch(postFetch(reg_step_1, form_params));\r\n    setRouteLoc(data.route);\r\n    //props.history.push(data.route);\r\n  };\r\n  // console.log(\"SignUp:\", postApi);\r\n  if (postApi.hasOwnProperty(\"regStep1Status\")) {\r\n    let resStatus = postApi.regStep1Status;\r\n    if (resStatus === fine_res) {\r\n      props.history.push(routeLoc);\r\n    }\r\n  }\r\n  const togglePass = (field) => {\r\n    setSelected(field);\r\n    setViewPass(!viewPass);\r\n  };\r\n  return <div className=\"signup\">{getSignUp()}</div>;\r\n}\r\nexport default withRouter(SignUp);\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Signup\\Face.jsx",["532"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Button } from 'reactstrap';\r\n\r\nimport logo from '../../images/tunnin-logo.png';\r\n\r\n// Constants\r\nimport { profile_face } from '../../constants/constants';\r\n\r\n// Style\r\nimport '../../styles/signupface.scss';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { profileFace } from '../../actions/profileFace';\r\nimport { uploadFile } from '../../actions/uploadedFile';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction Face(props) {\r\n   \r\n    const [uploaded_image, setImage] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const signUpFace = useSelector(state => state.profileFace);\r\n\r\n    useEffect(() => {\r\n        dispatchProfileFace();\r\n    }, [])\r\n\r\n    const dispatchProfileFace = () => {\r\n        dispatch(profileFace(profile_face));\r\n    }\r\n\r\n    const getProfileFace = () => {\r\n        if (signUpFace.hasOwnProperty('data')) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <h5 className=\"heading\">\r\n                        {signUpFace.data.heading}\r\n                        <img src={logo} alt=\"Logo\" />\r\n                    </h5>\r\n                    <h6 className=\"subheading\">\r\n                        {signUpFace.data.subHeading}\r\n                    </h6>\r\n                    <h6 className=\"upload-heading\">\r\n                        {signUpFace.data.upload}\r\n                    </h6>\r\n                    <div className=\"d-flex\">\r\n                        {uploads(signUpFace.data)}\r\n                    </div>\r\n                    {getUploadedImages()}\r\n                    <div className=\"next-btn-wrapper\">\r\n                        <Button color=\"primary\" size=\"lg\" onClick={()=>routeTo(signUpFace.data.route)}>\r\n                            {signUpFace.data.btnText}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const routeTo=(data)=> {\r\n        dispatch(uploadFile(uploaded_image));\r\n        props.history.push(data);\r\n    }\r\n\r\n    const uploads=(data)=> {\r\n        let uploads = data.imageList.map((item, index)=> {\r\n            return(\r\n                <div className=\"uploads\" key={index}>\r\n                    <label htmlFor=\"fileUpload\">\r\n                        <span className=\"upload-icon-wrapper\" >\r\n                            <i className=\"icon-cloud\"></i>\r\n                        </span>\r\n                        <p>{item.label}</p>\r\n                    </label>\r\n                    <input hidden id=\"fileUpload\" type=\"file\" onChange={(e)=>uploadedFile(e)} />\r\n                </div>\r\n            )\r\n        });\r\n        return uploads;\r\n    }\r\n\r\n    // let uploaded_image;\r\n\r\n    // const uploadedFile=(event)=> {\r\n    //     uploaded_image = event.target.files[0];\r\n    // }\r\n\r\n\r\n    const getUploadedImages=()=> {\r\n        if(uploaded_image) {\r\n            let images = uploaded_image.map((data, index)=> {\r\n                return(\r\n                    <span key={index} >\r\n                        {data}\r\n                    </span>\r\n                );\r\n            });\r\n            return images;\r\n        }\r\n    }\r\n\r\n    const uploadedFile=(event)=> {\r\n        let image = URL.createObjectURL(event.target.files[0]);\r\n        setImage(uploaded_image=>[...uploaded_image, <img src={image} alt={image.name} style={{height: \"150px\"}}/>]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"signup-face\">\r\n            {getProfileFace()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Face);","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Signup\\CreateAccount.jsx",["533","534","535","536"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Row, Col, Form, FormGroup, Input, Button } from 'reactstrap';\r\n\r\nimport logo from '../../images/tunnin-logo.png';\r\n\r\n// Constants\r\nimport { connect_bank } from '../../constants/constants';\r\n\r\n// Style\r\nimport '../../styles/login.scss';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { updateModal } from '../../actions/updateModal';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction CreateAccount(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const modalState = useSelector(state => state.updateModal);\r\n\r\n    const route = (location) => {\r\n        props.history.push(location);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatchClose();\r\n    }, []);\r\n\r\n    const dispatchClose=()=> {\r\n        dispatch(updateModal('close'));\r\n    }\r\n\r\n\r\n    const getCreateAccount = () => {\r\n        if (Object.keys(modalState).length > 0) {\r\n            let loginForm = modalState.modalState;\r\n            return (\r\n                <div className=\"login-form\">\r\n                    <h2 className=\"login-form-heading\">\r\n                        {loginForm.welcomeText}\r\n                    </h2>\r\n                    <p className=\"login-form-note\">\r\n                        {loginForm.heading}\r\n                    </p>\r\n                    <Form className=\"get-started-wrapper\">\r\n                        <FormGroup className=\"text-center\">\r\n                            <Button color=\"primary\" size=\"lg\">\r\n                                {loginForm.btnText}\r\n                            </Button>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <div className=\"text-center\">\r\n                                <span className=\"already\">{loginForm.question}</span>\r\n                                <span className=\"signin\" onClick={() => route(loginForm.route)}>{loginForm.signIn}</span>\r\n                            </div>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <Row>\r\n                <Col md=\"6\" sm=\"4\" className=\"left-login\">\r\n                    <h1 className=\"login-logo\">\r\n                        <img src={logo} alt=\"Logo\" />\r\n                    </h1>\r\n                </Col>\r\n                <Col md=\"6\" sm=\"4\" className=\"right-login\">\r\n                    {getCreateAccount()}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(CreateAccount);","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Signup\\Profile.jsx",["537"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Row, Col, Label, Input, Button, FormGroup } from \"reactstrap\";\r\n\r\nimport Checkbox from \"react-custom-checkbox\";\r\n\r\nimport logo from \"../../images/tunnin-logo.png\";\r\n// Constants\r\nimport {\r\n    signup_profile,\r\n    categories_list,\r\n    signedup_profile,\r\n    reg_step_2,\r\n} from \"../../constants/constants\";\r\n\r\n// Style\r\nimport \"../../styles/signupprofile.scss\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { signUpProfile } from \"../../actions/signupProfile\";\r\nimport { getFetch } from \"../../actions/getFetch\";\r\nimport { postFetch } from \"../../actions/postFetch\";\r\n\r\n// Router\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { fine_res } from \"../../constants/api_env\";\r\n\r\nfunction Profile(props) {\r\n    const [routeLoc, setRouteLoc] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatchSignUpProfile();\r\n        dispatchCategories();\r\n    }, []);\r\n\r\n    const dispatchSignUpProfile = () => {\r\n        dispatch(signUpProfile(signup_profile, null));\r\n    };\r\n\r\n    const dispatchCategories = () => {\r\n        dispatch(getFetch(categories_list));\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const profile = useSelector((state) => state.signupProfile);\r\n    const categories = useSelector((state) => state.signupCategories);\r\n    const postApi = useSelector((state) => state.postFetch);\r\n\r\n    const getProfile = () => {\r\n        if (profile.hasOwnProperty(\"data\")) {\r\n            return (\r\n                <form onSubmit={handleSubmit} className=\"container-fluid\">\r\n                    <h3 className=\"heading\">\r\n                        {profile.data.heading}\r\n                        <img src={logo} alt=\"Logo\" />\r\n                    </h3>\r\n                    <h5 className=\"subheading\">{profile.data.subHeading}</h5>\r\n                    <Row className=\"signup-second-form-wrapper\">\r\n                        {formList(profile.data)}\r\n                        <Col className=\"pt-1\" xs=\"12\" sm=\"5\" md=\"6\" lg=\"6\">\r\n                            <Label className=\"formheading\">\r\n                                <p className=\"d-flex justify-content-between align-items-center\">\r\n                                    <span>{profile.data.categories}</span>\r\n                                    <span className=\"select-all\">\r\n                                        (select all that apply to your practice)\r\n                                    </span>\r\n                                </p>\r\n                            </Label>\r\n                            <div className=\"checkbox-wrapper\">\r\n                                {formChecks(categories)}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col\r\n                            className=\"d-flex justify-content-center mb-5 mt-2\"\r\n                            xs=\"12\"\r\n                        >\r\n                            <Button\r\n                                color=\"primary\"\r\n                                size=\"lg\"\r\n                                type=\"submit\"\r\n                                // onClick={() => routeTo(profile.data.route)}\r\n                            >\r\n                                {profile.data.btnText}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </form>\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (data) => {\r\n        dispatch(signUpProfile(signedup_profile, form));\r\n        if (postApi.hasOwnProperty(\"regStep1\")) {\r\n            let regStep1 = postApi.regStep1;\r\n            console.log(\":RegStep1:\", regStep1);\r\n            if (regStep1.hasOwnProperty(\"data\")) {\r\n                let regStep1Data = regStep1.data;\r\n                if (regStep1Data.hasOwnProperty(\"id\")) {\r\n                    let trainerId = regStep1Data.id;\r\n                    let userForm = {\r\n                        trainerId: trainerId,\r\n                        username: form[\"username\"],\r\n                        about: form[\"about\"],\r\n                        location: form[\"location\"],\r\n                        mobile: form[\"phone_num\"],\r\n                        trainer_Cat: form[\"trainer_cat\"],\r\n                        insta: form[\"insta_url\"],\r\n                        business: form[\"business_name\"],\r\n                    };\r\n\r\n                    dispatch(postFetch(reg_step_2, userForm));\r\n                    console.log(\"TrainerId: \", trainerId);\r\n                    console.log(\"Form: \", userForm);\r\n                }\r\n            }\r\n        }\r\n        setRouteLoc(profile.data.route);\r\n        console.log(profile.data.route);\r\n        props.history.push(profile.data.route);\r\n        //props.history.push(data);\r\n    };\r\n\r\n    if (postApi.hasOwnProperty(\"regStep2Status\")) {\r\n        let resStatus = postApi.regStep2Status;\r\n        if (resStatus === fine_res) {\r\n            props.history.push(routeLoc);\r\n        }\r\n    }\r\n\r\n    const formChecks = (categories) => {\r\n        if (categories.hasOwnProperty(\"data\")) {\r\n            let checks = categories.data.map((items, index) => {\r\n                return (\r\n                    <div className=\"checkboxes\" key={index}>\r\n                        <Checkbox\r\n                            value={items._id}\r\n                            key={items._id}\r\n                            name=\"subscription-checkbox\"\r\n                            checked={false}\r\n                            borderColor=\"#fff\"\r\n                            borderWidth={2}\r\n                            borderRadius={2}\r\n                            style={{ cursor: \"pointer\" }}\r\n                            labelStyle={{\r\n                                marginLeft: 5,\r\n                                userSelect: \"none\",\r\n                                color: \"#fff\",\r\n                            }}\r\n                            label={items.categoryName}\r\n                            onChange={(e) =>\r\n                                handleChangeCheck(\r\n                                    e,\r\n                                    items._id,\r\n                                    items.categoryName\r\n                                )\r\n                            }\r\n                        />\r\n                    </div>\r\n                );\r\n            });\r\n            return checks;\r\n        }\r\n    };\r\n\r\n    let selected_categories = [];\r\n\r\n    const handleChangeCheck = (event, value, name) => {\r\n        if (event) {\r\n            selected_categories.push(value);\r\n        } else {\r\n            selected_categories.pop(value);\r\n        }\r\n        form[\"trainer_cat\"] = selected_categories;\r\n    };\r\n\r\n    const formList = (data) => {\r\n        let formFields = data.formFields.map((item, index) => {\r\n            return (\r\n                <Col xs=\"12\" sm=\"5\" md=\"5\" lg=\"5\" key={index}>\r\n                    <FormGroup className=\"mb-4\">\r\n                        <Label className=\"formheading\">\r\n                            <p>{item.labelName}</p>\r\n                        </Label>\r\n                        {item.type === \"textarea\" ? (\r\n                            <Input\r\n                                required\r\n                                type={item.type}\r\n                                placeholder={item.placeholder}\r\n                                className=\"form-control\"\r\n                                sm={4}\r\n                                onChange={(e) =>\r\n                                    handleChange(item.key, e.target.value)\r\n                                }\r\n                            />\r\n                        ) : (\r\n                            <input\r\n                                required\r\n                                type={item.type}\r\n                                placeholder={item.placeholder}\r\n                                className=\"form-control\"\r\n                                onChange={(e) =>\r\n                                    handleChange(item.key, e.target.value)\r\n                                }\r\n                            />\r\n                        )}\r\n                    </FormGroup>\r\n                </Col>\r\n            );\r\n        });\r\n        return formFields;\r\n    };\r\n\r\n    let form = {};\r\n\r\n    const handleChange = (key, data) => {\r\n        form[key] = data;\r\n        console.log(form);\r\n    };\r\n\r\n    return <div className=\"profile\">{getProfile()}</div>;\r\n}\r\n\r\nexport default withRouter(Profile);\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Session\\CancelPolicy.jsx",["538","539"],"import React, { useEffect } from 'react';\r\n\r\n// ReactStrap\r\nimport { Row, Col } from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { cancelPolicy } from '../../actions/cancelPolicy';\r\nimport { getFetch } from '../../actions/getFetch';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { cancel_policy, pages } from '../../constants/constants';\r\n\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\n// Styles\r\nimport '../../styles/cancelpolicy.scss';\r\n\r\nimport dp from '../../images/dp.png';\r\n\r\nfunction CancelledPolicy(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchSessionPolicy();\r\n        dispatchCancelPolicy();\r\n    }, []);\r\n\r\n    const dispatchSessionPolicy = () => {\r\n        dispatch(cancelPolicy(cancel_policy));\r\n    }\r\n\r\n    const dispatchCancelPolicy=()=> {\r\n        dispatch(getFetch(pages));\r\n    }\r\n\r\n    const cancelationPolicy = useSelector(state => state.cancelPolicy);\r\n    console.log(\"Cons, \", cancelationPolicy);\r\n\r\n    const getApi = useSelector(state=>state.getApi);\r\n\r\n    const getCancelPolicyData = () => {\r\n        if(getApi.hasOwnProperty('pagesData')) {\r\n            let pages = getApi.pagesData;\r\n            if(pages.hasOwnProperty('cancelPolicy')) {\r\n                let cancelPolicy = pages.cancelPolicy;\r\n                return (\r\n                    <div>\r\n                        <div className=\"cancel\">\r\n                            <h6 className=\"title m-0\">\r\n                                <i className=\"icon-chevron-left\" onClick={()=>props.history.goBack()}></i>\r\n                                {cancelPolicy.title}\r\n                            </h6>\r\n                            <p className=\"cancel-policy-text\">\r\n                                {cancelPolicy.content}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"cancel-policy\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col className=\"mt-5\">\r\n                        <div className=\"cancel-policy-right-container\">\r\n                            {getCancelPolicyData()}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(CancelledPolicy);","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Signup\\ConnectBank.jsx",["540","541"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Label, Input, Button, FormGroup } from 'reactstrap';\r\n\r\nimport logo from '../../images/tunnin-logo.png';\r\n\r\n// Constants\r\nimport { connect_bank, account_number, create_user, get_auth, notification_route, stripe_account } from '../../constants/constants';\r\n\r\n// Style\r\nimport '../../styles/connectBank.scss';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { connectBank } from '../../actions/connectBank';\r\nimport { postFetch } from '../../actions/postFetch';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\nimport { fine_res } from '../../constants/api_env';\r\n\r\nfunction ConnectBank(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const [accountNumber, setAccount] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatchConnectBank();\r\n    }, []);\r\n\r\n    const dispatchConnectBank = () => {\r\n        dispatch(connectBank(connect_bank, null));\r\n    }\r\n\r\n    const connectbank = useSelector(state => state.connectBank);\r\n\r\n    const allStates = useSelector(state => state);\r\n\r\n    const routeTo=(location)=> {\r\n        dispatchStripe();\r\n        console.log(\"All States\", allStates);\r\n        // let bodyFormData = new FormData();\r\n        // bodyFormData.append(\"fullName\", allStates.signedup.f_name);\r\n        // bodyFormData.append(\"username\", allStates.signupProfile.signedUpProfile.username);\r\n        // bodyFormData.append(\"email\", allStates.signedup.email);\r\n        // bodyFormData.append(\"password\", allStates.signedup.c_pass);\r\n        // bodyFormData.append(\"userType\", \"trainer\");\r\n        // bodyFormData.append(\"dob\", allStates.signedup.dob);\r\n        // bodyFormData.append(\"trainer_Cat\", allStates.signupProfile.signedUpProfile.trainer_cat);\r\n        // bodyFormData.append(\"about\", allStates.signupProfile.signedUpProfile.about);\r\n        // dispatch(postFetch(create_user, bodyFormData));\r\n    }\r\n\r\n    const dispatchStripe=()=> {\r\n        //console.log(\"Value: \", accountNumber);\r\n        let stripeObj = {\r\n            \"stripeId\" : accountNumber\r\n        }\r\n        dispatch(postFetch(stripe_account, stripeObj));\r\n    }\r\n\r\n    const loginUser=()=> {\r\n        let form = {\r\n            \"username\": allStates.signupProfile.signedUpProfile.username,\r\n            \"password\": allStates.signedup.c_pass\r\n        }\r\n        dispatch(postFetch(get_auth, form));\r\n    }\r\n\r\n    const userInfo = useSelector(state => state.postFetch);\r\n    console.log(\"UserInfo: \", userInfo);\r\n    \r\n    if(userInfo.hasOwnProperty('userLogged')) {\r\n        props.history.push(notification_route);\r\n    }\r\n\r\n    if (allStates.postFetch.hasOwnProperty('regStep1Status')) {\r\n        let userCheck = allStates.postFetch;\r\n        console.log(\"UserCheck\", userCheck);\r\n        if (userCheck.regStep1Status === fine_res && userCheck.regStep2Status === fine_res) {\r\n            loginUser();\r\n        }\r\n        else {\r\n            console.log(\"Error: \", userCheck);\r\n        }\r\n    }\r\n\r\n    const getConnectBank = () => {\r\n        if (connectbank.hasOwnProperty('data')) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <h5 className=\"heading\">\r\n                        {connectbank.data.heading}\r\n                        <img src={logo} alt=\"Logo\" />\r\n                    </h5>\r\n                    <h6 className=\"subheading\">\r\n                        {connectbank.data.subHeading}\r\n                    </h6>\r\n                    <p>\r\n                    </p>\r\n                    <FormGroup className=\"connect-input-wrapper\">\r\n                        <Label className=\"label\" for=\"connect-bank\">{connectbank.data.label}</Label>\r\n                        <Input id=\"connect-bank\" type=\"text\" onChange={(event) => selectedValue(account_number, event.target.value)} />\r\n                    </FormGroup>\r\n                    <div className=\"next-btn-wrapper\">\r\n                        <Button color=\"primary\" size=\"lg\" onClick={() => routeTo(connectbank.data.route)}>\r\n                            {connectbank.data.btnText}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const selectedValue = (field, data) => {\r\n        dispatch(connectBank(field, data));\r\n        setAccount(data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"connect-bank\">\r\n            {getConnectBank()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ConnectBank);","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Payouts\\Payouts.jsx",["542","543","544","545"],"import React, { useEffect } from 'react';\r\nimport {\r\n    Table, Row, Col, Card, CardText, Input,\r\n    CardTitle\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { fetchPayout } from '../../actions/payouts';\r\nimport { getFetchParam } from '../../actions/getFetchParam';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { getPayouts, payments_api } from '../../constants/constants';\r\n\r\n// Moment\r\nimport moment from 'moment';\r\n\r\n// Styles\r\nimport '../../styles/payout.scss';\r\n\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nfunction Payouts(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchPayouts();\r\n        dispatchPayoutsDetails();\r\n    }, []);\r\n\r\n    const dispatchPayouts = () => {\r\n        dispatch(fetchPayout(getPayouts));\r\n    }\r\n\r\n    const payouts = useSelector(state => state.payouts);\r\n    const userLogged = useSelector(state => state.postFetch);\r\n    const trainerPayouts = useSelector(state => state.getApi);\r\n\r\n    const dispatchPayoutsDetails = () => {\r\n        if (userLogged.hasOwnProperty('userLogged')) {\r\n            let userId = userLogged.userLogged._id;\r\n            dispatch(getFetchParam(payments_api, userId));\r\n        }\r\n    }\r\n\r\n    const getUpperPart = () => {\r\n        if (payouts.hasOwnProperty('data')) {\r\n            let pays = payouts.data;\r\n            return (\r\n                <div>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"payouts-heading\">\r\n                                {pays.heading}\r\n                            </h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div className=\"payout-date-wrapper\">\r\n                                {getInputs(pays.inputs)}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const getInputs = (data) => {\r\n        let cards = data.map((items, index) => {\r\n            return (\r\n                <div className=\"payout-date-feilds\" key={index}>\r\n                    <span className=\"date-label\">{items.label}</span> <Input type={items.type} placeholder={items.placeholder} />\r\n                </div>\r\n            )\r\n        });\r\n        return cards;\r\n    }\r\n\r\n    const getTableHeaders = () => {\r\n        if (payouts.hasOwnProperty('data')) {\r\n            let tableHeaders = payouts.data.tableHeader.map((data, index) => {\r\n                return (\r\n                    <th key={index}>\r\n                        {data.title}\r\n                    </th>\r\n                )\r\n            });\r\n            return tableHeaders;\r\n        }\r\n    }\r\n\r\n    const getTableValues = () => {\r\n        console.log(\"Trainer Payouts: \", trainerPayouts);\r\n        if (trainerPayouts.hasOwnProperty('payouts')) {\r\n            let trainerpays = trainerPayouts.payouts;\r\n            if(trainerpays instanceof Array) {\r\n                let payouts = trainerPayouts.payouts.map((data, index) => {\r\n                    let payoutDate = moment(data.payoutDate, \"x\").format(\"MMMM DD, YYYY\");\r\n                    let payPeriod = moment(data.payPeriod, \"x\").format(\"MMMM DD, YYYY\");\r\n                    return (\r\n                        <tr key={index}>\r\n                            <td>\r\n                                {payoutDate}\r\n                            </td>\r\n                            <td>\r\n                                {payPeriod}\r\n                            </td>\r\n                            <td>\r\n                                ${data.earning}\r\n                            </td>\r\n                            <td>\r\n                                ${data.fee}\r\n                            </td>\r\n                            <td>\r\n                                ${data.total}\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                });\r\n                return payouts;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"payouts\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"payouts-right-container\">\r\n                            <div>\r\n                                {getUpperPart()}\r\n                            </div>\r\n                            <div>\r\n                                <Table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            {getTableHeaders()}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {getTableValues()}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Payouts);","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Ratings\\Ratings.jsx",["546","547","548","549","550","551","552","553","554","555","556","557","558","559"],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\MyEarnings\\Earnings.jsx",["560"],"import React, { useEffect } from 'react';\r\nimport { Table, Row, Col, Card, CardText, \r\n    CardTitle} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Moment\r\nimport moment from 'moment';\r\n\r\n// Action\r\nimport { fetchEarning } from '../../actions/earnings';\r\nimport { getFetchParam } from '../../actions/getFetchParam';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { getEarnings, total_earnings, earning_details_route } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/earnings.scss';\r\n\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nfunction Earnings(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=> {\r\n        dispatchEarnings();\r\n        dispatchTrainerEarning();\r\n    }, []);\r\n\r\n    const dispatchEarnings=()=> {\r\n        dispatch(fetchEarning(getEarnings));\r\n    }\r\n\r\n    const getEarn = useSelector(state => state.earnings);\r\n    const postFetch = useSelector(state=> state.postFetch);\r\n    const getApi = useSelector(state=> state.getApi);\r\n\r\n    console.log(\"Get API: \", getApi);\r\n\r\n    const dispatchTrainerEarning=()=> {\r\n        if(postFetch.hasOwnProperty('userLogged')) {\r\n            let trainerId = postFetch.userLogged._id;\r\n            dispatch(getFetchParam(total_earnings, trainerId));\r\n        }\r\n    }\r\n\r\n    const getUpperPart = () => {\r\n        if (getEarn.hasOwnProperty('data') && getApi.hasOwnProperty('trainerEarning')) {\r\n            let res = getApi.trainerEarning;\r\n            if (res.hasOwnProperty('gross') && res.hasOwnProperty('netIncome')) {\r\n                let earnings = getEarn.data;\r\n                return (\r\n                    <Row>\r\n                        <Col>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <h1 className=\"earning-heading\">\r\n                                    {earnings.heading}\r\n                                </h1>\r\n                                <div className=\"d-flex align-items-center earning-stats-wrapper\">\r\n                                    {getUpperCards(earnings.upperCards)}\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const getUpperCards=(data)=> {\r\n        if(getApi.hasOwnProperty('trainerEarning')) {\r\n            let res = getApi.trainerEarning;\r\n            if(res.hasOwnProperty('gross') && res.hasOwnProperty('netIncome')) {\r\n                let gross = res.gross;\r\n                let netIncome = res.netIncome;\r\n                data[0].price = gross;\r\n                data[1].price = netIncome;\r\n            }\r\n        }\r\n        let cards = data.map((items, index)=> {\r\n            return(\r\n                <Col key={index}>\r\n                    <Card body className=\"card-style\">\r\n                        <div className=\"card-content\">\r\n                            <div className=\"stock-icon-wrapper\">\r\n                                <i className=\"icon-stocks\"></i>\r\n                            </div>\r\n                            <div>\r\n                                <CardTitle tag=\"h5\">{items.price}</CardTitle>\r\n                                <CardText>{items.title}</CardText>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n            )\r\n        });\r\n        return cards;\r\n    }\r\n\r\n    const getTableHeaders=()=> {\r\n        if(getEarn.hasOwnProperty('data')) {\r\n            let tableHeaders = getEarn.data.tableHeader.map((data, index)=> {\r\n                return (\r\n                    <th key={index}>\r\n                        {data.title}\r\n                    </th>\r\n                )\r\n            });\r\n            return tableHeaders;\r\n        }\r\n    }\r\n\r\n    const detailEarning=(data)=> {\r\n        props.history.push({\r\n            pathname: earning_details_route,\r\n            res: data\r\n        });\r\n    }\r\n\r\n    const getTableValues=()=> {\r\n        if(getApi.hasOwnProperty('trainerEarning')) {\r\n            let res = getApi.trainerEarning;\r\n            if(res.hasOwnProperty('Data')) {\r\n                if(res.Data instanceof Array) {\r\n                    let getValues = res.Data.map((data, index)=>{\r\n                        let sessionDate = moment(data.SessionDate, \"x\").format(\"MMMM DD, YYYY\");\r\n                        let fromTime = moment(data.SessionFromTime,'HHmmss').format(\"hh:mm A\");\r\n                        let toTime = moment(data.SessionToTime,'HHmmss').format(\"hh:mm A\");\r\n                        return (\r\n                            <tr key={index} onClick={()=>{detailEarning(data)}}>\r\n                                <td>\r\n                                    {data.SessionName}\r\n                                </td>\r\n                                <td>\r\n                                    {sessionDate}\r\n                                </td>\r\n                                <td>\r\n                                    {fromTime} - {toTime}\r\n                                </td>\r\n                                <td>\r\n                                    {data.totalUsers}\r\n                                </td>\r\n                                <td>\r\n                                    {data.fee}\r\n                                </td>\r\n                                <td>\r\n                                    {data.grossEarning}\r\n                                </td>\r\n                                <td>\r\n                                    {data.netIncome}\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    });\r\n                    return getValues;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"earning\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"earnings-right-container\">\r\n                            <div className=\"mb-5\">\r\n                                {getUpperPart()}\r\n                            </div>\r\n                            <div>\r\n                                <Table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            {getTableHeaders()}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {getTableValues()}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div> \r\n                        </div>     \r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Earnings);","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\MyEarnings\\EarningDetails.jsx",["561","562","563","564","565"],"import React, { useEffect } from 'react';\r\nimport {\r\n    Table, Row, Col, Card, CardText,\r\n    CardTitle\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { fetchEarningDetail } from '../../actions/earningDetails';\r\nimport { getFetchParam } from '../../actions/getFetchParam';\r\n\r\n// Moment\r\nimport moment from 'moment';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { getEarningDetail, earning_details } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/earnings.scss';\r\n\r\nimport tdp from '../../images/table-dp.png';\r\nimport cc from '../../images/credit-card.png';\r\nimport bookings from '../../images/bookings.png';\r\nimport stocks from '../../images/stocks.png';\r\n\r\n// Components\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nfunction EarningDetails(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchEarningDetail();\r\n        dispatchSessionEarningDetails();\r\n    }, []);\r\n\r\n    const dispatchEarningDetail = () => {\r\n        dispatch(fetchEarningDetail(getEarningDetail));\r\n    }\r\n\r\n    const dispatchSessionEarningDetails=()=> {\r\n        let id = props.location.res.SessionID;\r\n        dispatch(getFetchParam(earning_details, id));\r\n    }\r\n\r\n    const getEarn = useSelector(state => state.earningDetails);\r\n\r\n    console.log(\"Props: \", props.location);\r\n\r\n    const getApi = useSelector(state=> state.getApi);\r\n\r\n    const getUpperPart = () => {\r\n        if (getEarn.hasOwnProperty('data') && getApi.hasOwnProperty('earningDetail')) {\r\n            let earnings = getEarn.data;\r\n            let detailEarning = getApi.earningDetail;\r\n            let sessionDate = moment(detailEarning.sessionDate, \"x\").format(\"MMMM DD, YYYY\");\r\n            let fromTime = moment(detailEarning.sessionFromTime,'HHmmss').format(\"hh:mm A\");\r\n            let toTime = moment(detailEarning.sessionToTime,'HHmmss').format(\"hh:mm A\");\r\n            return (\r\n                <div>\r\n                    <Row>\r\n                        <Col>\r\n                            <h6 className=\"title\">\r\n                                <i className=\"icon-chevron-left\" onClick={()=>props.history.goBack()}></i>\r\n                                {earnings.heading}\r\n                            </h6>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col sm=\"6\">\r\n                            <Card body className=\"card-style earning-info-card\">\r\n                                <div className=\"card-content\">\r\n                                    <div>\r\n                                        <CardTitle tag=\"h5\">{detailEarning.sessionName}</CardTitle>\r\n                                        <CardText className=\"date\">{sessionDate}</CardText>\r\n                                        <CardText className=\"time\">{fromTime} - {toTime}</CardText>\r\n                                    </div>\r\n                                    <div>\r\n                                        <CardText className=\"session-amount\">{earnings.leftSection.price}</CardText>\r\n                                        <CardText>{detailEarning.totalBooked} Users Booked</CardText>\r\n                                    </div>\r\n                                </div>\r\n                            </Card>\r\n                        </Col>\r\n                        {getUpperCards(earnings.upperCards)}\r\n                    </Row>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const getUpperCards = (data) => {\r\n        if(getApi.hasOwnProperty('earningDetail')) {\r\n            let details = getApi.earningDetail;\r\n            let cards = data.map((items, index) => {\r\n                data[0].price = details.totalBooked;\r\n                data[1].price = details.gross;\r\n                data[2].price = details.netIncome;\r\n                return (\r\n                    <Col key={index} sm=\"2\">\r\n                        <Card body className=\"card-style earning-stats\">\r\n                            <div className=\"card-content \">\r\n                                <div>\r\n                                    <img src={stocks} alt=\"icons\"/>\r\n                                </div>\r\n                                <div className=\"ml-4\">\r\n                                    <CardTitle className={items.textClass} tag=\"h5\">{items.price}</CardTitle>\r\n                                    <CardText>{items.title}</CardText>\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n            });\r\n            return cards;\r\n        }\r\n    }\r\n\r\n    const getTableHeaders = () => {\r\n        if (getEarn.hasOwnProperty('data')) {\r\n            let tableHeaders = getEarn.data.tableHeader.map((data, index) => {\r\n                return (\r\n                    <th key={index}>\r\n                        {data.title}\r\n                    </th>\r\n                )\r\n            });\r\n            return tableHeaders;\r\n        }\r\n    }\r\n\r\n    const getTableValues = () => {\r\n        if(getApi.hasOwnProperty('earningDetail')) {\r\n            let res = getApi.earningDetail;\r\n            if(res.hasOwnProperty('Data')) {\r\n                let earnDetails = res.Data.map((data, index)=> {\r\n                    let date = moment(data.receivingDate, \"x\").format(\"MMMM DD, YYYY\");\r\n                    return (\r\n                        <tr key={index}>\r\n                            <td>\r\n                                <img className=\"dp-img\" src={\"https://api.tunnin.io/uploads/\" + data.profilePic} alt=\"credit-card-picture\" />\r\n                                {data.fullName}\r\n                            </td>\r\n                            <td>\r\n                                {/* <img className=\"cc-img\" src={cc} alt=\"credit-card-picture\"/> */}\r\n                                {data.method}\r\n                            </td>\r\n                            <td>\r\n                                {date}\r\n                            </td>\r\n                        </tr>\r\n                    );\r\n                });\r\n                return earnDetails;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"earning\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                    <div className=\"earnings-right-container\">\r\n                        <div className=\"session-btn-wrapper\">\r\n                            {getUpperPart()}\r\n                        </div>\r\n                        <div className=\"session-details-table-wrapper\">\r\n                            <Table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        {getTableHeaders()}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {getTableValues()}\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(EarningDetails);","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Session\\NewSession.jsx",["566","567","568","569","570"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Row,\r\n    Col,\r\n    Card,\r\n} from \"reactstrap\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Cookies from \"universal-cookie\";\r\n\r\n//Date Formater\r\nimport dateFormat from \"dateformat\";\r\n\r\nimport moment from \"moment\";\r\n\r\n// Action\r\nimport { sessionModal } from \"../../actions/sessionModal\";\r\nimport { addSession } from \"../../actions/addSession\";\r\nimport { addedSession } from \"../../actions/addedSession\";\r\nimport { getFetch } from \"../../actions/getFetch\";\r\n\r\n// Router\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// Constants\r\nimport {\r\n    add_session,\r\n    add_session_modal,\r\n    edit_session_modal,\r\n    categories_list,\r\n    update_created_session_api,\r\n    user_profile_pic,\r\n    delete_profile_pic,\r\n} from \"../../constants/constants\";\r\n\r\n// Styles\r\nimport \"../../styles/newsession.scss\";\r\n\r\n// Action\r\n// import { postFetch } from \"../../actions/postFetch\";\r\nimport { postFetchParams } from \"../../actions/postFetchParam\";\r\n\r\n// Components\r\nimport Header from \"../Header/Header\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport Popup from \"./Popup\";\r\n\r\nfunction AddSession(props) {\r\n    const cookies = new Cookies();\r\n\r\n    let sessionForm = {};\r\n    let imageLengthSession = 0;\r\n\r\n    const dispatch = useDispatch();\r\n    const [uploaded_image, setImage] = useState([]);\r\n    const [uploadedImageFile, setUploadedFile] = useState([]);\r\n    // const [form, setform] = useState({});\r\n    const [editForm, setEditForm] = useState({});\r\n\r\n    const newSession = useSelector((state) => state.addSession);\r\n\r\n    const editSession = useSelector((state) => state.addedSession);\r\n\r\n    const categories = useSelector((state) => state.signupCategories);\r\n\r\n    const userFetch = useSelector((state) => state.postFetch);\r\n\r\n    const dispatchCategories = () => {\r\n        dispatch(getFetch(categories_list));\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatchNewSession();\r\n        dispatchEditSession();\r\n        dispatchCategories();\r\n        dispatchSetEditedImages();\r\n    }, []);\r\n\r\n    const dispatchSetEditedImages = () => {\r\n        if (props.location.hasOwnProperty(\"sessionDetailedId\")) {\r\n            let sessionId = props.location.sessionDetailedId;\r\n            if (sessionId.hasOwnProperty(\"images\")) {\r\n                setUploadedFile(sessionId.images);\r\n            }\r\n        }\r\n    };\r\n\r\n    const dispatchNewSession = () => {\r\n        dispatch(addSession(add_session));\r\n    };\r\n\r\n    const dispatchEditSession = () => {\r\n        if (Object.keys(editSession).length > 0) {\r\n            setEditForm(editSession.addedNewSession);\r\n        }\r\n    };\r\n\r\n    const getSessionTop = () => {\r\n        if (newSession.hasOwnProperty(\"data\")) {\r\n            return (\r\n                <Row className=\"mb-3\">\r\n                    <Col className=\"d-flex align-items-center col-sm-6\">\r\n                        <h6 className=\"title m-0\">\r\n                            <i\r\n                                className=\"icon-chevron-left\"\r\n                                onClick={() => props.history.goBack()}\r\n                            ></i>\r\n                            {props.history.location.pathname === \"/edit-session\"\r\n                                ? \"Edit Session\"\r\n                                : newSession.data.title}\r\n                        </h6>\r\n                    </Col>\r\n                    <Col className=\"add-btn-wrapper col-sm-6\">\r\n                        <Button\r\n                            className=\"addBtn\"\r\n                            type=\"submit\"\r\n                            // onClick={() => dispatchAction()}\r\n                        >\r\n                            {props.history.location.pathname === \"/edit-session\"\r\n                                ? \"SAVE\"\r\n                                : newSession.data.btnTitle}\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n    };\r\n\r\n    const dispatchAction = () => {\r\n        dispatch(addedSession(sessionForm));\r\n        if (props.history.location.pathname === \"/edit-session\") {\r\n            // dispatch(sessionModal(edit_session_modal));\r\n            props.history.push(\"/notification\");\r\n            dispatchEditCreatedSession();\r\n        } else {\r\n            dispatch(sessionModal(add_session_modal));\r\n            dispatchCreateSession();\r\n        }\r\n    };\r\n\r\n    const dispatchEditCreatedSession = () => {\r\n        let bodyFormData = new FormData();\r\n        if (props.location.hasOwnProperty(\"sessionDetailedId\")) {\r\n            let details = props.location.sessionDetailedId;\r\n            if (details.hasOwnProperty(\"_id\")) {\r\n                let sessionId = details._id;\r\n                if (userFetch.hasOwnProperty(\"userLogged\")) {\r\n                    bodyFormData.append(\"trainerId\", userFetch.userLogged._id);\r\n                    bodyFormData.append(\"catId\", cookies.get(\"category\"));\r\n                    bodyFormData.append(\"title\", cookies.get(\"name_of_class\"));\r\n                    bodyFormData.append(\r\n                        \"fromTime\",\r\n                        getEpochs(\r\n                            combineDateAndTime(\r\n                                cookies.get(\"start_date\"),\r\n                                cookies.get(\"s_time\")\r\n                            )\r\n                        )\r\n                    );\r\n                    bodyFormData.append(\r\n                        \"toTime\",\r\n                        getEpochs(\r\n                            combineDateAndTime(\r\n                                cookies.get(\"end_date\"),\r\n                                cookies.get(\"e_time\")\r\n                            )\r\n                        )\r\n                    );\r\n                    bodyFormData.append(\r\n                        \"fromDate\",\r\n                        getEpochs(\r\n                            combineDateAndTime(\r\n                                cookies.get(\"start_date\"),\r\n                                cookies.get(\"s_time\")\r\n                            )\r\n                        )\r\n                    );\r\n                    bodyFormData.append(\r\n                        \"toDate\",\r\n                        getEpochs(\r\n                            combineDateAndTime(\r\n                                cookies.get(\"end_date\"),\r\n                                cookies.get(\"e_time\")\r\n                            )\r\n                        )\r\n                    );\r\n                    bodyFormData.append(\r\n                        \"to\",\r\n                        combineDateAndTime(\r\n                            cookies.get(\"end_date\"),\r\n                            cookies.get(\"e_time\")\r\n                        )\r\n                    );\r\n                    bodyFormData.append(\r\n                        \"from\",\r\n                        combineDateAndTime(\r\n                            cookies.get(\"start_date\"),\r\n                            cookies.get(\"s_time\")\r\n                        )\r\n                    );\r\n\r\n                    bodyFormData.append(\"price\", cookies.get(\"session_price\"));\r\n                    bodyFormData.append(\"userLimit\", userFetch.userLogged._id);\r\n                    bodyFormData.append(\r\n                        \"requirements\",\r\n                        cookies.get(\"what_you_need\")\r\n                    );\r\n                    bodyFormData.append(\"detail\", cookies.get(\"about\"));\r\n                    bodyFormData.append(\"images\", uploadedImageFile);\r\n                }\r\n\r\n                console.log(\"Body Form Data: \", bodyFormData);\r\n\r\n                dispatch(\r\n                    postFetchParams(\r\n                        update_created_session_api,\r\n                        sessionId,\r\n                        bodyFormData\r\n                    )\r\n                );\r\n\r\n                // console.log(userFetch.userLogged._id);\r\n                // console.log(sessionForm.category);\r\n                // console.log(sessionForm.name_of_class);\r\n                // console.log(sessionForm.start_date);\r\n                // console.log(sessionForm.end_date);\r\n                // console.log(sessionForm.start_time);\r\n                // console.log(sessionForm.end_time);\r\n                // console.log(sessionForm.session_price);\r\n                // console.log(sessionForm.what_you_need);\r\n                // console.log(sessionForm.about);\r\n                // console.log(sessionForm.uploadedImageFile);\r\n\r\n                cookies.set(\"name_of_class\", \"\");\r\n                cookies.set(\"category\", \"\");\r\n                cookies.set(\"start_date\", \"\");\r\n                cookies.set(\"end_date\", \"\");\r\n                cookies.set(\"start_time\", \"\");\r\n                cookies.set(\"end_time\", \"\");\r\n                cookies.set(\"session_price\", \"\");\r\n                cookies.set(\"about\", \"\");\r\n                cookies.set(\"what_you_need\", \"\");\r\n                cookies.set(\"name_of_trainer\", \"\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const dispatchCreateSession = () => {\r\n        let bodyFormData = new FormData();\r\n        if (userFetch.hasOwnProperty(\"userLogged\")) {\r\n            console.log(\"Uploaded Image: \", uploadedImageFile);\r\n            bodyFormData.append(\"trainerId\", userFetch.userLogged._id);\r\n            bodyFormData.append(\"catId\", cookies.get(\"category\"));\r\n            bodyFormData.append(\"title\", cookies.get(\"name_of_class\"));\r\n            bodyFormData.append(\r\n                \"fromTime\",\r\n                getEpochs(\r\n                    combineDateAndTime(\r\n                        cookies.get(\"start_date\"),\r\n                        cookies.get(\"s_time\")\r\n                    )\r\n                )\r\n            );\r\n            bodyFormData.append(\r\n                \"toTime\",\r\n                getEpochs(\r\n                    combineDateAndTime(\r\n                        cookies.get(\"end_date\"),\r\n                        cookies.get(\"e_time\")\r\n                    )\r\n                )\r\n            );\r\n            bodyFormData.append(\r\n                \"fromDate\",\r\n                getEpochs(\r\n                    combineDateAndTime(\r\n                        cookies.get(\"start_date\"),\r\n                        cookies.get(\"s_time\")\r\n                    )\r\n                )\r\n            );\r\n            bodyFormData.append(\r\n                \"toDate\",\r\n                getEpochs(\r\n                    combineDateAndTime(\r\n                        cookies.get(\"end_date\"),\r\n                        cookies.get(\"e_time\")\r\n                    )\r\n                )\r\n            );\r\n            bodyFormData.append(\r\n                \"to\",\r\n                combineDateAndTime(\r\n                    cookies.get(\"end_date\"),\r\n                    cookies.get(\"e_time\")\r\n                )\r\n            );\r\n            bodyFormData.append(\r\n                \"from\",\r\n                combineDateAndTime(\r\n                    cookies.get(\"start_date\"),\r\n                    cookies.get(\"s_time\")\r\n                )\r\n            );\r\n\r\n            bodyFormData.append(\"price\", cookies.get(\"session_price\"));\r\n            bodyFormData.append(\"userLimit\", userFetch.userLogged._id);\r\n            bodyFormData.append(\"requirements\", cookies.get(\"what_you_need\"));\r\n            bodyFormData.append(\"detail\", cookies.get(\"about\"));\r\n            bodyFormData.append(\"images\", uploadedImageFile);\r\n        }\r\n\r\n        console.log(\"Body Form Data: \", bodyFormData);\r\n\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            body: bodyFormData,\r\n            redirect: \"follow\",\r\n        };\r\n\r\n        fetch(\"https://api.tunnin.io/session\", requestOptions)\r\n            .then((response) => response.text())\r\n            .then((result) => console.log(result))\r\n            .catch((error) => console.log(\"error\", error));\r\n\r\n        cookies.set(\"name_of_class\", \"\");\r\n        cookies.set(\"category\", \"\");\r\n        cookies.set(\"start_date\", \"\");\r\n        cookies.set(\"end_date\", \"\");\r\n        cookies.set(\"start_time\", \"\");\r\n        cookies.set(\"end_time\", \"\");\r\n        cookies.set(\"session_price\", \"\");\r\n        cookies.set(\"about\", \"\");\r\n        cookies.set(\"what_you_need\", \"\");\r\n        cookies.set(\"name_of_trainer\", \"\");\r\n    };\r\n\r\n    const popup = useSelector((state) => state.sessionModal);\r\n\r\n    const getImages = () => {\r\n        if (newSession.hasOwnProperty(\"data\")) {\r\n            return (\r\n                <Row>\r\n                    <Col sm=\"12\">\r\n                        <p className=\"upload-title\">{newSession.data.upload}</p>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Row>{getuploads()}</Row>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteImage = (data, index) => {\r\n        // console.log(\"Data: \", data);\r\n        // console.log(\"Index: \", index);\r\n        // console.log(\"Image: \", uploadedImageFile);\r\n        if (userFetch.hasOwnProperty(\"userLogged\")) {\r\n            let trainer_id = userFetch.userLogged._id;\r\n            let delete_image = uploadedImageFile.splice(index, 1);\r\n            dispatch(postFetchParams(delete_profile_pic, trainer_id, \"\"));\r\n            setUploadedFile(delete_image);\r\n        }\r\n    };\r\n\r\n    const getuploads = () => {\r\n        console.log(\"Props.location: \", props.location);\r\n        if (newSession.hasOwnProperty(\"data\")) {\r\n            let cards = newSession.data.cardList;\r\n            let cardList = cards.map((data, index) => {\r\n                return (\r\n                    <Col sm=\"3\" key={index}>\r\n                        <Card className=\"uploads\">\r\n                            <label htmlFor=\"fileUpload\">\r\n                                <div className=\"d-none upload-icon-wrapper\">\r\n                                    {data.icon}\r\n                                </div>\r\n                                {props.history.location.pathname ===\r\n                                \"/add-new-session\" ? (\r\n                                    <i className=\"icon-cloud\"></i>\r\n                                ) : (\r\n                                    <div>\r\n                                        {props.location.sessionDetailedId\r\n                                            ? getUploadedSessionImage(\r\n                                                  props.location\r\n                                                      .sessionDetailedId\r\n                                              )\r\n                                            : \"\"}\r\n                                        <span\r\n                                            className=\"delete-img-wrapper\"\r\n                                            onClick={() => {\r\n                                                deleteImage(data, index);\r\n                                            }}\r\n                                        >\r\n                                            <i className=\"icon-delete\"></i>\r\n                                        </span>\r\n                                    </div>\r\n                                )}\r\n                            </label>\r\n                            <input\r\n                                hidden\r\n                                id=\"fileUpload\"\r\n                                type=\"file\"\r\n                                onChange={(e) => uploadedFile(e)}\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                );\r\n            });\r\n            return cardList;\r\n        }\r\n    };\r\n\r\n    const getUploadedSessionImage = (data) => {\r\n        if (data.hasOwnProperty(\"images\")) {\r\n            let length = data.images.length;\r\n            // console.log(\"Length: \", length);\r\n            if (imageLengthSession < length) {\r\n                let image = data.images.map((item, index) => {\r\n                    imageLengthSession = imageLengthSession + 1;\r\n                    return (\r\n                        <img\r\n                            alt=\"session img\"\r\n                            src={\"https://api.tunnin.io/uploads/\" + item}\r\n                            height=\"120\"\r\n                            width=\"120\"\r\n                            key={index}\r\n                        />\r\n                    );\r\n                });\r\n                return image;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getUploadedImages = () => {\r\n        if (uploaded_image) {\r\n            let images = uploaded_image.map((data, index) => {\r\n                return <span key={index}>{data}</span>;\r\n            });\r\n            return images;\r\n        }\r\n    };\r\n\r\n    const ImageThumb = ({ image }) => {\r\n        return <img src={URL.createObjectURL(image)} alt={image.name} />;\r\n    };\r\n\r\n    const uploadedFile = (event) => {\r\n        let imageFile = event.target.files[0];\r\n        if (uploadedImageFile < 4) {\r\n            setUploadedFile(...uploadedImageFile, imageFile);\r\n            // if (userFetch.hasOwnProperty(\"userLogged\")) {\r\n            //     let trainerId = userFetch.userLogged._id;\r\n            //     let bodyFormData = new FormData();\r\n            //     bodyFormData.append(\"profilePic\", imageFile);\r\n            //     dispatch(\r\n            //         postFetchParams(user_profile_pic, trainerId, bodyFormData)\r\n            //     );\r\n            // }\r\n        }\r\n        let image = URL.createObjectURL(imageFile);\r\n        // console.log(\"Images: \", imageFile);\r\n        setImage((uploaded_image) => [\r\n            ...uploaded_image,\r\n            <img src={image} alt={image.name} style={{ height: \"150px\" }} />,\r\n        ]);\r\n        // console.log(\"Uploaded Image: \", uploaded_image);\r\n    };\r\n\r\n    const giveDate = (sec) => {\r\n        return dateFormat(Number(sec), \"isoDate\");\r\n    };\r\n\r\n    const getForm = () => {\r\n        if (newSession.hasOwnProperty(\"data\")) {\r\n            let form = newSession.data.sessionForm;\r\n            let details = props.location.sessionDetailedId;\r\n            let trainerAndCategory = props.location.trainerAndCategory;\r\n            let formList = form.map((data, index) => {\r\n                return (\r\n                    <Col key={index} sm={data.size}>\r\n                        {window.location.pathname === \"/edit-session\" ? (\r\n                            <FormGroup>\r\n                                <Label\r\n                                    className={\r\n                                        data.title !== \"\"\r\n                                            ? \"form-title\"\r\n                                            : \"form-empty-title\"\r\n                                    }\r\n                                >\r\n                                    {data.title}\r\n                                </Label>\r\n                                {data.type === \"select\" ? (\r\n                                    // <select className=\"form-control\" name={data.name} defaultValue={editSession.addedNewSession[data.name]} onChange={(e)=>{getNewSession(data.name, e.target.value)}} >\r\n                                    //     {getOptions(data.options)}\r\n                                    // </select>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name={data.name}\r\n                                        onChange={(e) => {\r\n                                            getNewSession(\r\n                                                data.name,\r\n                                                e.target.value\r\n                                            );\r\n                                        }}\r\n                                    >\r\n                                        {getOptions(categories.data)}\r\n                                    </select>\r\n                                ) : (\r\n                                    <Input\r\n                                        required\r\n                                        placeholder={data.placeholder}\r\n                                        type={data.type}\r\n                                        name={data.name}\r\n                                        defaultValue={\r\n                                            data.placeholder === \"Rolletser Fux\"\r\n                                                ? addEditSessionData(\r\n                                                      data.name,\r\n                                                      details.title\r\n                                                  )\r\n                                                : data.placeholder ===\r\n                                                  \"Lorem Ipsum\"\r\n                                                ? addEditSessionData(\r\n                                                      data.name,\r\n                                                      details.requirements\r\n                                                  )\r\n                                                : data.placeholder ===\r\n                                                  \"Brimbistram\"\r\n                                                ? addEditSessionData(\r\n                                                      data.name,\r\n                                                      trainerAndCategory.trainerName\r\n                                                  )\r\n                                                : data.title === \"About\"\r\n                                                ? addEditSessionData(\r\n                                                      data.name,\r\n                                                      details.detail\r\n                                                  )\r\n                                                : data.title === \"Session Price\"\r\n                                                ? addEditSessionData(\r\n                                                      data.name,\r\n                                                      details.price\r\n                                                  )\r\n                                                : data.placeholder === \"From\"\r\n                                                ? addEditSessionData(\r\n                                                      data.name,\r\n                                                      giveDate(details.fromDate)\r\n                                                  )\r\n                                                : data.placeholder === \"To\"\r\n                                                ? addEditSessionData(\r\n                                                      data.name,\r\n                                                      giveDate(details.toDate)\r\n                                                  )\r\n                                                : data.placeholder === \"Start\"\r\n                                                ? addEditSessionData(\r\n                                                      data.name,\r\n                                                      details.fromTime\r\n                                                  )\r\n                                                : data.placeholder === \"End\"\r\n                                                ? addEditSessionData(\r\n                                                      data.name,\r\n                                                      details.toTime\r\n                                                  )\r\n                                                : \"\"\r\n                                        }\r\n                                        // defaultValue={editSession.addedNewSession[data.name]}\r\n                                        onChange={(e) => {\r\n                                            getNewSession(\r\n                                                data.name,\r\n                                                e.target.value\r\n                                            );\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                            </FormGroup>\r\n                        ) : (\r\n                            <FormGroup>\r\n                                <Label\r\n                                    className={\r\n                                        data.title !== \"\"\r\n                                            ? \"form-title\"\r\n                                            : \"form-empty-title\"\r\n                                    }\r\n                                >\r\n                                    {data.title}\r\n                                </Label>\r\n                                {data.type === \"select\" ? (\r\n                                    // <select className=\"form-control\" name={data.name} defaultValue={editSession.addedNewSession[data.name]} onChange={(e)=>{getNewSession(data.name, e.target.value)}} >\r\n                                    //     {getOptions(data.options)}\r\n                                    // </select>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name={data.name}\r\n                                        onChange={(e) => {\r\n                                            getNewSession(\r\n                                                data.name,\r\n                                                e.target.value\r\n                                            );\r\n                                        }}\r\n                                    >\r\n                                        {getOptions(categories.data)}\r\n                                    </select>\r\n                                ) : (\r\n                                    <Input\r\n                                        required\r\n                                        placeholder={data.placeholder}\r\n                                        type={data.type}\r\n                                        name={data.name}\r\n                                        // defaultValue={\r\n                                        //     editSession.addedNewSession[\r\n                                        //         data.name\r\n                                        //     ]\r\n                                        // }\r\n                                        onChange={(e) => {\r\n                                            getNewSession(\r\n                                                data.name,\r\n                                                e.target.value\r\n                                            );\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                            </FormGroup>\r\n                        )}\r\n                    </Col>\r\n                );\r\n            });\r\n            return formList;\r\n        }\r\n    };\r\n\r\n    const addEditSessionData = (name, value) => {\r\n        // console.log(name + \" :0: \" + value);\r\n        getNewSession(name, value);\r\n        return value;\r\n    };\r\n\r\n    const getNewSession = (key, value) => {\r\n        var tempValue = value;\r\n        if (key === \"start_time\" || key === \"end_time\") {\r\n            var timedifference = new Date().getTimezoneOffset();\r\n            var timeAndDate = moment(\r\n                dateFormat(Number(Date.now()), \"isoDate\") + \" \" + value\r\n            );\r\n\r\n            var theTempTime = moment()\r\n                .hour(timeAndDate.hours())\r\n                .minute(timeAndDate.minutes())\r\n                .add(timedifference, \"minutes\");\r\n\r\n            var theFutureTime = moment()\r\n                .hour(timeAndDate.hours())\r\n                .minute(timeAndDate.minutes())\r\n                .add(timedifference, \"minutes\")\r\n                .format(\"hh:mm A\");\r\n\r\n            value = theFutureTime;\r\n\r\n            if (timedifference > 0) {\r\n                timeAndDate.hours() > theTempTime.hours()\r\n                    ? manageDate(key, +1)\r\n                    : manageDate(key, 0);\r\n            } else if (timedifference < 0) {\r\n                timeAndDate.hours() < theTempTime.hours()\r\n                    ? manageDate(key, -1)\r\n                    : manageDate(key, 0);\r\n            }\r\n        }\r\n\r\n        cookies.set(key, value, { path: \"/\" });\r\n        sessionForm[key] = value;\r\n\r\n        if (key === \"start_time\") {\r\n            cookies.set(\"s_time\", tempValue, { path: \"/\" });\r\n        }\r\n\r\n        if (key === \"end_time\") {\r\n            cookies.set(\"e_time\", tempValue, { path: \"/\" });\r\n        }\r\n        combineDateAndTime(cookies.get(\"start_date\"), cookies.get(\"s_time\"));\r\n    };\r\n\r\n    const manageDate = (type, value) => {\r\n        type === \"start_time\"\r\n            ? cookies.set(\"startDateDifference\", value)\r\n            : cookies.set(\"endDateDifference\", value);\r\n    };\r\n\r\n    const changeDate = (type, value) => {\r\n        var chooseDate = new Date(value);\r\n        chooseDate.setDate(\r\n            chooseDate.getDate() +\r\n                (type === \"start_date\"\r\n                    ? Number(cookies.get(\"startDateDifference\"))\r\n                    : Number(cookies.get(\"endDateDifference\")))\r\n        );\r\n        var futureDate =\r\n            chooseDate.getFullYear() +\r\n            \"-\" +\r\n            (\"0\" + (chooseDate.getMonth() + 1)).slice(-2) +\r\n            \"-\" +\r\n            (\"0\" + chooseDate.getDate()).slice(-2);\r\n        // console.log(\"******************************11223344\");\r\n        // console.log(futureDate);\r\n        // console.log(\"******************************11223344\");\r\n        return futureDate;\r\n    };\r\n\r\n    const combineDateAndTime = (date, time) => {\r\n        // console.log(date);\r\n        // console.log(time);\r\n\r\n        const timeAndDate = moment(date + \" \" + time)\r\n            .utcOffset(\"+00:00\")\r\n            .format();\r\n\r\n        // console.log(\"haha==========================haha\");\r\n        // console.log(moment(timeAndDate).valueOf());\r\n        // console.log(timeAndDate.unix());\r\n        // console.log(\"haha==========================haha\");\r\n\r\n        return timeAndDate;\r\n    };\r\n\r\n    const getEpochs = (timeAndDate) => {\r\n        return moment(timeAndDate).valueOf();\r\n    };\r\n\r\n    const getOptions = (data) => {\r\n        if (categories.hasOwnProperty(\"data\")) {\r\n            let options = data.map((data, index) => {\r\n                if (window.location.pathname === \"/edit-session\") {\r\n                    let trainerAndCategory = props.location.trainerAndCategory;\r\n                    let details = props.location.sessionDetailedId;\r\n\r\n                    if (trainerAndCategory.categoryName === data.categoryName) {\r\n                        addEditSessionData(\"category\", details.catId);\r\n                        return (\r\n                            // <option value={data._id} key={index}>\r\n                            <option selected value={data._id} key={index}>\r\n                                {data.categoryName}\r\n                            </option>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            // <option value={data._id} key={index}>\r\n                            <option value={data._id} key={index}>\r\n                                {data.categoryName}\r\n                            </option>\r\n                        );\r\n                    }\r\n                } else {\r\n                    return (\r\n                        <option value={data._id} key={index}>\r\n                            {data.categoryName}\r\n                        </option>\r\n                    );\r\n                }\r\n            });\r\n            return options;\r\n        }\r\n    };\r\n\r\n    // if (document.getElementById(\"session-form\")) {\r\n    //     // console.log(\"=========================================\");\r\n    //     // console.log(\"reseted\");\r\n    //     // console.log(\"=========================================\");\r\n    //     // document.getElementById(\"session-form\").reset();\r\n    // }\r\n\r\n    return (\r\n        <div className=\"new-session\">\r\n            {popup.popUp ? (\r\n                props.history.location.pathname === \"/edit-session\" ? (\r\n                    <Popup\r\n                        modalState={popup}\r\n                        action_type={edit_session_modal}\r\n                    />\r\n                ) : (\r\n                    <Popup modalState={popup} action_type={add_session_modal} />\r\n                )\r\n            ) : (\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"container-fluid\">\r\n                        <Row>\r\n                            <Col className=\"left-container\">\r\n                                <Sidebar />\r\n                            </Col>\r\n                            <Col className=\"mt-3\">\r\n                                <div\r\n                                    className=\"add-session-right-container\"\r\n                                    style={{ marginTop: \"-50px\" }}\r\n                                >\r\n                                    <Form\r\n                                        id=\"session-form\"\r\n                                        onSubmit={() => dispatchAction()}\r\n                                        className=\"tunnin-form mt-5\"\r\n                                    >\r\n                                        {getSessionTop()}\r\n                                        {getImages()}\r\n                                        {getUploadedImages()}\r\n                                        <Row style={{ marginTop: \"50px\" }}>\r\n                                            {getForm()}\r\n                                        </Row>\r\n                                    </Form>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(AddSession);\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Session\\SessionDetails.jsx",["571","572"],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Profile\\UserProfile.jsx",["573","574"],"import React, { useEffect } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from \"reactstrap\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { userProfile } from \"../../actions/userProfile\";\r\n\r\n// Router\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// Constants\r\nimport {\r\n    user_profile,\r\n    user_edit_profile,\r\n    get_profile,\r\n} from \"../../constants/constants\";\r\n\r\n// Styles\r\nimport \"../../styles/profile.scss\";\r\n\r\n// Actions\r\nimport { getFetchParam } from \"../../actions/getFetchParam\";\r\n\r\n// Components\r\nimport Header from \"../Header/Header\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\n\r\nimport profileCover from \"../../images/profile-cover.png\";\r\nimport profileDp from \"../../images/profile-dp.png\";\r\nfunction UserProfile(props) {\r\n    const dispatch = useDispatch();\r\n    const userInfo = useSelector((state) => state.postFetch);\r\n    // const [settedProfile, setUserProfile] = useState('');\r\n\r\n    let userId;\r\n\r\n    useEffect(() => {\r\n        getUserTrainerId();\r\n        dispatchUserProfile();\r\n    }, []);\r\n\r\n    const getUserTrainerId = () => {\r\n        if (userInfo.hasOwnProperty(\"userLogged\")) {\r\n            if (userInfo.userLogged) {\r\n                userId = userInfo.userLogged._id;\r\n            }\r\n        }\r\n    };\r\n\r\n    const dispatchUserProfile = () => {\r\n        if (props.history.location.pathname === \"/edit-user-profile\") {\r\n            dispatch(userProfile(user_edit_profile));\r\n        } else {\r\n            dispatch(getFetchParam(get_profile, userId));\r\n            dispatch(userProfile(user_profile));\r\n        }\r\n    };\r\n\r\n    const users = useSelector((state) => state.userProfile);\r\n\r\n    // User Profile\r\n    const usersProfile = useSelector((state) => state.getApi);\r\n\r\n    const getUpperPart = () => {\r\n        if (users.hasOwnProperty(\"data\")) {\r\n            let upper = users.data;\r\n            return (\r\n                <Row className=\"mb-3\">\r\n                    <Col className=\"d-flex align-items-center col-6\">\r\n                        <h6 className=\"title m-0\">\r\n                            <i\r\n                                className=\"icon-chevron-left\"\r\n                                onClick={() => props.history.goBack()}\r\n                            ></i>\r\n                            {upper.title}\r\n                        </h6>\r\n                    </Col>\r\n\r\n                    {getBtns(upper.btns)}\r\n                </Row>\r\n            );\r\n        }\r\n    };\r\n\r\n    const routeTo = (location) => {\r\n        props.history.push(location);\r\n    };\r\n\r\n    const getBtns = (data) => {\r\n        let btns = data.map((items, index) => {\r\n            return (\r\n                <Col className=\"add-btn-wrapper col-6\" key={index}>\r\n                    {items.flag ? (\r\n                        <Button\r\n                            className=\"addBtn\"\r\n                            onClick={() => routeTo(items.route)}\r\n                        >\r\n                            <i className={items.iconClass}></i>\r\n                            {items.title}\r\n                        </Button>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </Col>\r\n            );\r\n        });\r\n        return btns;\r\n    };\r\n\r\n    const getProfile = () => {\r\n        if (usersProfile.hasOwnProperty(\"userProfile\")) {\r\n            let profile = usersProfile.userProfile;\r\n            return (\r\n                <Col>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <span className=\"profile-img-wrapper position-relative\">\r\n                            <img\r\n                                alt=\"profile\"\r\n                                src={\"https://api.tunnin.io/uploads/\" + profile.profilePic}\r\n                            />\r\n\r\n                            {props.history.location.pathname ===\r\n                            \"/edit-user-profile\" ? (\r\n                                <span className=\"delete-overlay\">\r\n                                    <span className=\"delete-img-wrapper\">\r\n                                        <i className=\"icon-delete\"></i>\r\n                                    </span>\r\n                                </span>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n                        </span>\r\n                        <span className=\"profile-name-wrapper\">\r\n                            <span className=\"profile-name\">\r\n                                {profile.fullName}\r\n                            </span>\r\n                            <span className=\"username\">{profile.username}</span>\r\n                        </span>\r\n                    </div>\r\n                </Col>\r\n            );\r\n        }\r\n    };\r\n\r\n    const getProfileImages = () => {\r\n        if (users.hasOwnProperty(\"data\")) {\r\n            let profileDetail = users.data.userDetails.coverImages.map(\r\n                (data, index) => {\r\n                    return (\r\n                        <Col className=\"cover-images\" key={index}>\r\n                            <div className=\"position-relative\">\r\n                                <img src={profileCover} alt={data.alt} />\r\n                                {props.history.location.pathname ===\r\n                                \"/edit-user-profile\" ? (\r\n                                    <span className=\"delete-overlay\">\r\n                                        <span className=\"delete-img-wrapper\">\r\n                                            <i className=\"icon-delete\"></i>\r\n                                        </span>\r\n                                    </span>\r\n                                ) : (\r\n                                    \"\"\r\n                                )}\r\n                            </div>\r\n                        </Col>\r\n                    );\r\n                }\r\n            );\r\n            return profileDetail;\r\n        }\r\n    };\r\n\r\n    const getUserForm = () => {\r\n        if (usersProfile.hasOwnProperty(\"userProfile\")) {\r\n            let profile = usersProfile.userProfile;\r\n            return (\r\n                <Row\r\n                    className={\r\n                        props.history.location.pathname === \"/user-profile\"\r\n                            ? \"user-profile-form-read-only\"\r\n                            : \"user-profile-form-edit\"\r\n                    }\r\n                >\r\n                    <Col sm=\"4\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>About</Label>\r\n                            <Input\r\n                                placeholder={profile.about}\r\n                                type={\"textarea\"}\r\n                                name={profile.about}\r\n                                disabled\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"2\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>Category</Label>\r\n                            <Input\r\n                                placeholder={profile.userType}\r\n                                type={\"text\"}\r\n                                name={profile.userType}\r\n                                disabled\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"2\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>DOB</Label>\r\n                            <Input\r\n                                placeholder={profile.dob}\r\n                                type={\"text\"}\r\n                                name={profile.dob}\r\n                                disabled\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"2\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>Gender</Label>\r\n                            <Input\r\n                                placeholder={profile.gender}\r\n                                type={\"text\"}\r\n                                name={profile.gender}\r\n                                disabled\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"2\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>\r\n                                Email Address\r\n                            </Label>\r\n                            <Input\r\n                                placeholder={profile.email}\r\n                                type={\"text\"}\r\n                                name={profile.email}\r\n                                disabled\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"2\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>\r\n                                Business Name\r\n                            </Label>\r\n                            <Input\r\n                                placeholder={profile.business}\r\n                                type={\"text\"}\r\n                                name={profile.business}\r\n                                disabled\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"2\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>Location</Label>\r\n                            <Input\r\n                                placeholder={profile.location}\r\n                                type={\"text\"}\r\n                                name={profile.location}\r\n                                disabled\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"2\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>\r\n                                Instagram Profile URL\r\n                            </Label>\r\n                            <Input\r\n                                placeholder={profile.insta}\r\n                                type={\"text\"}\r\n                                name={profile.insta}\r\n                                disabled\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"profiles\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"profile-right-container\">\r\n                            <div className=\"profile-header mt-4\">\r\n                                {getUpperPart()}\r\n                            </div>\r\n                            <Row className=\"user-profile-wrapper\">\r\n                                {getProfile()}\r\n                            </Row>\r\n                            <Row className=\"profile-cover-wrapper\">\r\n                                {getProfileImages()}\r\n                            </Row>\r\n                            <Form className=\"tunnin-form\">{getUserForm()}</Form>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(UserProfile);\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Settings\\Contacts.jsx",["575"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button, Row, Col\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { settings } from '../../actions/settings';\r\nimport { getFetch } from '../../actions/getFetch';\r\nimport { postFetch } from '../../actions/postFetch';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { setting_contact, pages, user_contact_support } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/settings.scss';\r\n\r\n// Components\r\nimport SettingSidebar from './Sidebar';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nfunction Contacts(props) {\r\n\r\n    const [userQuery, setUserQuery] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector(state => state.postFetch);\r\n\r\n    useEffect(() => {\r\n        dispatchContact();\r\n        dispatchPages();\r\n    }, []);\r\n\r\n    const dispatchPages=()=> {\r\n        dispatch(getFetch(pages));\r\n    }\r\n\r\n    const dispatchContact = () => {\r\n        dispatch(settings(setting_contact));\r\n    }\r\n\r\n    const getSettings = useSelector(state => state.settings);\r\n\r\n    const getContacts = () => {\r\n        if (getSettings.hasOwnProperty('contact')) {\r\n            let contacts = getSettings.contact;\r\n            return (\r\n                <div className=\"contacts\">\r\n                   <div className=\"settings-container\">\r\n                        <h5 className=\"settings-heading\">\r\n                            <i className=\"icon-avatar\"></i>\r\n                            {contacts.title}\r\n                        </h5>\r\n                        <textarea className=\"contact-admin-textarea\" name=\"contact\" id=\"contactAdmin\" cols=\"30\" rows=\"10\" placeholder={contacts.description} onChange={(e)=>handleChange(e.target.value)}></textarea>\r\n                        <div className=\"text-center\">\r\n                            <Button color=\"primary\" className=\"action-btn\" onClick={()=>sendQuery()}>\r\n                                {contacts.btn}\r\n                            </Button>\r\n                        </div>\r\n                   </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const handleChange=(data)=> {\r\n        setUserQuery(data);\r\n    }\r\n\r\n    const sendQuery=()=> {\r\n        console.log(\"Query: \", userQuery);\r\n        if(userDetails.hasOwnProperty('userLogged')) {\r\n            let obj = {\r\n                \"name\" : userDetails.userLogged.fullName,\r\n                \"title\" : \"Query\",\r\n                \"query\" : userQuery,\r\n                \"email\" : userDetails.userLogged.email,\r\n                \"userId\" : userDetails.userLogged._id\r\n            }\r\n            console.log(\"Obj: \", obj);\r\n            dispatch(postFetch(user_contact_support,obj));\r\n        }\r\n    }\r\n\r\n    const getSettingSidebar = () => {\r\n        return (\r\n            <SettingSidebar />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <Row className=\"h-100\">\r\n                            <Col className=\"p-0 settings-sidebar-wrapper\">\r\n                                {getSettingSidebar()}\r\n                            </Col>\r\n                            <Col sm=\"9\">\r\n                                {getContacts()}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(Contacts);","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Settings\\Terms.jsx",["576","577","578","579"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button, Row, Col\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { settings } from '../../actions/settings';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { setting_terms } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/settings.scss';\r\n\r\n// Components\r\nimport SettingSidebar from './Sidebar';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nfunction Terms(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchContact();\r\n    }, []);\r\n\r\n    const dispatchContact = () => {\r\n        dispatch(settings(setting_terms));\r\n    }\r\n\r\n    const getSettings = useSelector(state => state.settings);\r\n    const getTermsCondition = useSelector(state => state.getApi);\r\n\r\n    const getTerms = () => {\r\n        if (getTermsCondition.hasOwnProperty('pagesData')) {\r\n            let termsCondition = getTermsCondition.pagesData.terms;\r\n            return (\r\n                <div className=\"terms\">\r\n                    <div className=\"settings-container\">\r\n                        <h5 className=\"settings-heading\">\r\n                            <i className=\"icon-portable-document-format\"></i>\r\n                            {termsCondition.title}\r\n                        </h5>\r\n                        <p>\r\n                            {/* {termsCondition.content} */}\r\n                            <p>\r\n                                GENERAL TERMS OF USE\r\n                            </p>\r\n                            <p>\r\n                                Last Updated: June 1, 2021\r\n                            </p>\r\n                            <p>\r\n                                BY VISITING OUR WEBSITE, CREATING AN ACCOUNT, OR USING THE PLATFORM,  YOU AGREE TO THESE GENERAL TERMS OF USE – PLEASE READ THEM CAREFULLY. THESE GENERAL TERMS OF USE GOVERN YOUR USE OF TUNNIN AND CONSTITUTES YOUR AGREEMENT WITH US.\r\n                            </p>\r\n                            <h2>\r\n                                Definitions:\r\n                            </h2>\r\n                            <p>\r\n                                - we refer to our website as \"Tunnin\" or the “Platform”, including when accessed via the URL www.tunnin.io, the iOS application, or via any web browser or mobile phone;\r\n                            </p>\r\n                            <p>\r\n                                - references to \"we\", \"our\", \"us\" are references to Tunnin, Inc., the operator of Tunnin;\r\n                            </p>\r\n                            <p>\r\n                                - \"Content\" means any material uploaded to Tunnin by any User (whether a Trainer or a Customer), including any photos, videos, audio, livestream material, data, text, metadata, images, interactive features, emojis, GIFs, memes, and any other material whatsoever;\r\n                            </p>  \r\n                            <p>\r\n                                - \"Trainer\" means a User who has set up their Tunnin account as a Trainer account to post Content on Tunnin to be viewed by other Users;\r\n                            </p>\r\n                            <p>\r\n                                - \"Customer\" means a User who chooses to view the Trainer's Content;\r\n                            </p>\r\n                            <p>\r\n                                - \"Payment\" means any and all payments made by a Customer to a Trainer, including payments for access to a Trainer's Content;\r\n                            </p>\r\n                            <p>\r\n                                - \"Platform \" means a User who participates in the Tunnin Referral Program;\r\n                            </p>\r\n                            <p>\r\n                                - \"General Terms of Use\" (also called \"your agreement with us\") means the legally binding agreement between you and us which consists of: (i) these General Terms of Use, (ii) Terms of Use for Customers, (iii) Terms of Use for Trainers, and (iv) Privacy Policy.\r\n                            </p>\r\n                            <p>\r\n                                - \"User\" means any user of Tunnin, whether a Trainer or a Customer or both (also referred to as \"you\" or \"your\").\r\n                            </p>\r\n                            Changes to the Terms of Use: We may change any part of the General Terms of Use without telling you beforehand in the following circumstances:\r\n                            to reflect changes in laws and regulatory requirements which apply to Tunnin and the services, features and programs of Tunnin where such changes require Tunnin to change its terms and conditions in a manner which does not allow us to give reasonable notice to you; and\r\n                            to address an unforeseen and imminent danger related to defending Tunnin, Customers or Trainers from fraud, malware, spam, data breaches or other cybersecurity risks.\r\n\r\n                            We may also make other changes to any part of the General Terms of Use, and we will give you reasonable notice of such changes by email or through Tunnin, and you may contact us to end your agreement with us before the changes take effect. Once any updated General Terms of Use are in effect, you will be bound by them if you continue to use Tunnin.\r\n\r\n                            Changes to Service: We may update and change Tunnin from time to time for any reason, including to reflect changes to our services, Users' needs and our business practices or to improve performance, enhance functionality or address security issues. We will try to give you reasonable notice of any major changes. We do not guarantee that Tunnin, or any Content on it, will always be available or accessible without interruption. We may suspend or withdraw or restrict the availability of all or any part of Tunnin for business or operational reasons. We will try to give you reasonable notice of any suspension or withdrawal if it affects you.\r\n\r\n                            Registering with Tunnin: To use Tunnin you must first register and create a User account on Tunnin. You must provide a valid email address, a username, and a password or authenticate using a valid Facebook, Apple or Google account. Your password should be unique (meaning that it is different to those you use for other websites) and must comply with the technical requirements of the Tunnin site for the composition of passwords. To register as a User:\r\n                            you must be at least 18 years old, and you may be required to confirm this; and\r\n                            if the laws of the country or State/Province where you live provide that you can only be legally bound by a contract with us at an age which is higher than 18 years old, then you must be old enough to be legally bound by a contract with us under the laws of the State/province where you live.\r\n\r\n                            If you do not meet the above requirements, you must not access or use Tunnin.\r\n\r\n                            User Responsibilities: When you register with and use Tunnin, you make the following commitments to us:\r\n                            If you previously had an account with Tunnin, you confirm that your old account was not terminated or suspended by us because you violated any of our terms or policies.\r\n                            You will make sure that all information which you submit to us is truthful, accurate and complete.\r\n                            You will update promptly any of your information you have submitted to us as and when it changes.\r\n                            You consent to receiving communications from us electronically, including by emails and messages posted to your Tunnin account, and to the processing of your personal data as more fully detailed in our Privacy Policy.\r\n                            You will keep your account/login details confidential and secure, including your user details, passwords and any other piece of information that forms part of our security procedures, and you will not disclose these to anyone else. You will contact admin@tunnin.io promptly if you believe someone has used or is using your account without your permission or if your account has been subject to any other breach of security.\r\n                            You are responsible for all activity on your account even if, contrary to the General Terms of Use, someone else uses your account.\r\n                            You will comply in full with these General Terms of Use\r\n\r\n                            Suspension of Services:\r\n                            We can but we are not obligated to moderate or review any of your Content to verify compliance with the General Terms of Use and/or any applicable law.\r\n                            It is our policy to suspend access to any Content you post on Tunnin which we become aware may not comply with the General Terms of Use and/or any applicable law whilst we investigate the suspected non-compliance or unlawfulness of such Content. Following our investigation of the suspected non-compliance or unlawfulness of the relevant Content, we may take any action we consider appropriate, including to reinstate access to the Content or to permanently remove or disable access to the relevant Content without needing to obtain any consent from you and without giving you prior notice. We will not be responsible for any loss suffered by you arising from the suspension of access to your Content or any other steps which we take in good faith to investigate any suspected non-compliance or unlawfulness of your Content under this section.\r\n                            If we suspend access to or delete any of your Content, we will notify you via email or electronic message to your Tunnin account, but we are not obligated to give you prior notice of such removal.\r\n                            We reserve the right in our sole discretion to terminate your agreement with us and your access to Tunnin for any reason by giving you 10 days’ notice by email or electronic message to your Tunnin account. We can also suspend access to your User account or terminate your agreement with us and your access to Tunnin immediately and without prior notice:\r\n                            if we think that you have or may have seriously or repeatedly breached any part of the General Terms of Use, or if you attempt or threaten to breach any part of the General Terms of Use in a way which has or could have serious consequences for us or another User; or\r\n                            if you take any action that in our opinion has caused or is reasonably likely to cause us to suffer a loss or that otherwise harms the reputation of Tunnin.\r\n\r\n                            Tunnin Responsibilities: We will use reasonable care and skill in providing Tunnin to you, but there are certain things which we are not responsible for, as follows:\r\n                            We do not authorize or approve Content on Tunnin, and views expressed by Trainers or Customers on Tunnin do not necessarily represent our views.\r\n                            We do not grant you any rights in relation to Content. Any such rights may only be granted to you by Trainers.\r\n                            All Content is created, selected and provided by Users and not by us. We are not responsible for reviewing or moderating Content, and we do not select or modify the Content that is stored or transmitted via Tunnin. We are under no obligation to monitor Content or to detect breaches of the General Terms of Use.\r\n                            We make no promises or guarantees of any kind that Trainers will make a particular sum of money (or any money) from their use of Tunnin.\r\n                            The materials which we make accessible on Tunnin for Users are for general information only. We make no promises or guarantees about the accuracy or otherwise of such materials, or that Users will achieve any particular result or outcome from using such materials.\r\n                            We do not promise that Tunnin is compatible with all devices and operating systems. You are responsible for configuring your information technology, device, and computer programs to access Tunnin. You should use your own virus protection software.\r\n                            We are not responsible for the availability of the internet, or any errors in your connections, device or other equipment, or software that may occur in relation to your use of Tunnin.\r\n                            While we try to make sure that Tunnin is secure and free from bugs and viruses, we cannot promise that it will be and have no control over the Content that is supplied by Trainers.\r\n                            We are not responsible for any lost, stolen, or compromised User accounts, passwords, email accounts, or any resulting unauthorized activities or resulting unauthorized payments or withdrawals of funds.\r\n\r\n                            Intellectual Property Rights:\r\n                            You confirm that you own all intellectual property rights (examples of which are copyright and trademarks) in your Content or that you have obtained all necessary rights to your Content which are required to grant licenses in respect of your Content to us and to other Users.\r\n                            You agree to grant us a license under all your Content to perform any act restricted by any intellectual property right (including copyright) in such Content, for any purpose reasonably related to the provision and operation of Tunnin.\r\n                            The license which you grant to us under sub-section 10(b) above is perpetual, non-exclusive, worldwide, royalty-free, sublicensable, assignable and transferable by us. This means that the license will continue even after your agreement with us ends and you stop using Tunnin, that we do not have to pay you for the license, and that we can grant a sub-license of your Content to someone else or assign or transfer the license to someone else. This license will allow us, for example, to add stickers, text, and watermarks to your Content, to make your Content available to other Users of Tunnin, as well as to use your Content for other normal operations of Tunnin.\r\n\r\n                            Liability: We won't be liable to you for any:\r\n                            loss of profits;\r\n                            loss of sales, business, or revenue;\r\n                            business interruption;\r\n                            loss of anticipated savings;\r\n                            loss of business opportunity, goodwill or reputation;\r\n                            loss of data or information, including any Content; or\r\n                            indirect or consequential loss or damage;\r\n\r\n                            We won't be liable to you for any loss or damage caused by a distributed virus, ransomware, or other technologically harmful material that may infect your computer equipment, computer programs, data, or other proprietary material due to your use of Tunnin or any of its services, features or programs, or due to your downloading of any material posted on it, or on any website linked to it. We won't be liable to you if your Content is copied, distributed, reposted elsewhere or its copyright is infringed by another User or any third party. Our total liability to you for any and all claims arising out of or related to your agreement with us, whether in contract, tort (including negligence), breach of statutory duty, or otherwise shall be limited to USD 5,000.\r\n\r\n                            General: You agree that:\r\n                            If any aspect of your agreement with us is unenforceable, the rest will remain in effect.\r\n                            If we fail to enforce any aspect of your agreement with us, it will not be a waiver;\r\n                            We reserve all rights not expressly granted to you.\r\n                            No implied licenses or other rights are granted to you in relation to any part of Tunnin, save as expressly set out in the General Terms of Use.\r\n                            You cannot transfer your rights or obligations under your agreement with us without our prior written consent.\r\n                            Our rights and obligations under your agreement with us can be assigned or transferred by us to others. For example, this could occur if our ownership changes (as in a merger, acquisition, or sale of assets) or by law. In addition, we may choose to delegate performance of any of our obligations under your agreement with us to any third party, but we will remain responsible to you for the performance of such obligations.\r\n                            The General Terms of Use form the entire agreement between us and you regarding your access to and use of Tunnin, and supersede any and all prior oral or written understandings or agreements between us and you.\r\n\r\n\r\n\r\n                            TERMS OF USE FOR CUSTOMERS\r\n\r\n                            Last Updated: June 1, 2021\r\n\r\n                            BY USING OUR WEBSITE AS A CUSTOMER YOU AGREE TO THESE TERMS OF USE FOR CUSTOMERS – PLEASE READ THEM CAREFULLY.\r\n\r\n                            Application: These Terms of Use for Customers are in addition to the General Terms of Use and apply if you use Tunnin as a Customer (also referred to as \"you\" and \"your\" in these Terms of Use for Customers). These Terms of Use for Customers form part of your agreement with us. Capitalize terms used herein and not defined have the meaning ascribed to them in the General Terms of Use.\r\n\r\n                            Customer Responsibilities: You warrant that:\r\n                            you are at least 18 years old; and\r\n                            if the laws of the country or State/Province where you live provide that you can only be legally bound by a contract with us at an age which is higher than 18 years old, then you are old enough to be legally bound by a contract with us under the laws of the country or State/province where you live.\r\n\r\n                            Content: In addition to the terms set out elsewhere in the General Terms of Use, the following terms apply to the Content posted, displayed, uploaded or published by you as a Customer on Tunnin:\r\n                            You warrant that for each item of Content which you post, display, upload or publish on Tunnin:\r\n                            the Content complies in full with the General Terms of Use;\r\n                            you either own your Content (and all intellectual property rights in it) or have a valid license to your Content; and\r\n                            if your Content includes or uses any third-party material, you have secured all rights, licenses, written consents and releases that are necessary for the use of such third-party property in your Content and for the subsequent use and exploitation of that Content on Tunnin.\r\n                            You agree that you will be liable to us and indemnify us if any of the warranties at section 3(a) is untrue. This means you will be responsible for any loss or damage we suffer as a result of any warranty being untrue.\r\n                            We are not responsible for and do not endorse any aspect of any Content posted by you or any other User of Tunnin. We do not have any obligation to monitor any Content and have no direct control over what your Content may comprise.\r\n\r\n                            Purchases: This section describes the terms which apply to transactions and interactions between Customers and Trainers:\r\n                            All transactions and interactions facilitated by Tunnin are contracts between Customers and Trainers. Although we facilitate transactions and interactions between Customers and Trainers by providing the Tunnin Platform, storing Content, and acting as a payment intermediary, we are not a party to any other contract which may exist between a Customer and Trainer, and are not responsible for any transactions or interactions between Customers and Trainers.\r\n                            Trainers are solely responsible for determining (within the parameters for pricing on Tunnin) the pricing applicable to transactions and interactions and the Content to which you may be given access. All prices appear in USD only.\r\n                            You authorize us to supply your payment card details to a third-party payment provider for the purpose of processing your purchases. All payments will be charged in USD. Your payment card provider may charge you currency conversion fees. We do not have control over currency exchange rates or charges imposed by your payment card provider or bank and we are not responsible for paying any charges or fees imposed by your payment card provider or bank.\r\n\r\n                            Refunds: TO BE UPDATED.\r\n\r\n                            Cancellations: TO BE UPDATED. You are able to cancel a booked session up until one (1) hour prior to the start of the class with no charge. The fees you paid to book the session will be automatically refunded to your method of payment. If you miss a session that you booked, you will not be entitled to a refund and any fees paid will be forfeited.\r\n\r\n\r\n                            TERMS OF USE FOR TRAINERS\r\n\r\n                            Last Updated: June 1, 2021\r\n\r\n                            BY USING OUR WEBSITE AS A TRAINER YOU AGREE TO THESE TERMS OF USE FOR TRAINERS – PLEASE READ THEM CAREFULLY.\r\n\r\n                            Application: These Terms of Use for Trainers are in addition to the General Terms of Use and apply if you use Tunnin as a Trainer (also referred to as \"you\" and \"your\" in these Terms of Use for Trainers). These Terms of Use for Trainers form part of your agreement with us. Capitalize terms used herein and not defined have the meaning ascribed to them in the General Terms of Use.\r\n\r\n                            Fees: We charge a fee to you of twenty-five per cent (25%) of all payments made to you by Customers (“Our Fee”). The remaining seventy-five per cent (75%) of the Customer payments (exclusive of other tax or service fees) is payable to you (\"Trainer Earnings\"). Our Fee includes our costs of providing, maintaining and operating Tunnin. Our Fee is deducted from the Customer payments, and Trainer Earnings are paid to you in the way described in the Payouts section below.\r\n\r\n                            Trainer Account: To set up your account as a Trainer account:\r\n                            You will need to create a User account on the Platform;\r\n                            You will need to link your Stripe account with your User account in order to facilitate payment of Trainer Earnings.\r\n                            We may ask you for additional age or identity verification information at any time. We may reject your application to set up a Trainer account for any reason.\r\n                            You will then be able to start adding Content and Users will be able to book sessions that make available on your account.\r\n                            If you lose access to your account, you can reset your password, but you will need to know the email address used to set up the account to do so. If you do not recall the email address used to set up the account, we may require you to provide identification documents and photos and any additional evidence we may reasonably require to prove your identity.\r\n                            All transactions and interactions facilitated by Tunnin are contracts between Customers and Trainers. Although we facilitate transactions and interactions between Customers and Trainers by providing the Platform and acting as a payment intermediary, we are not a party to any other contract which may exist between a Customer and Trainer, and are not responsible for any transactions or interactions between Customers and Trainers.\r\n\r\n                            Content: In addition to the terms set out elsewhere in the General Terms of Service, the following terms apply to the Content posted, displayed, uploaded or broadcasted by you as a Trainer on Tunnin:\r\n                            Your Content is not confidential, and you authorize your Customers to access and view your Content on Tunnin for their own lawful and personal use.\r\n                            You warrant (which means that you make a legally enforceable promise to us) that for each item of Content which you post, display, upload or publish on OnlyFans:\r\n                            the Content complies in full with the General Terms of Use;\r\n                            you hold all rights necessary to license and deal in your Content on OnlyFans, including in each territory where you have Fans and in the United Kingdom;\r\n                            you either own your Content (and all intellectual property rights in it) or have a valid license to offer and supply your Content to your Fans;\r\n                            if your Content includes or uses any third-party material, you have secured all rights, licenses, written consents and releases that are necessary for the use of such third-party property in your Content and for the subsequent use and exploitation of that Content on OnlyFans; and\r\n                            the Content is:\r\n                            of satisfactory quality, taking account of any description of the Content, the price, and all other relevant circumstances including any statement or representation which you make about the nature of the Content on your account or in any advertising; and\r\n                            as described by you.\r\n\r\n                            You agree that you will be liable to us and indemnify us if any of the warranties at section 4(c) is untrue. We are not responsible for and do not endorse any aspect of any Content posted by you or any other User of Tunnin. We do not have any obligation to monitor any Content and have no direct control over what your Content may comprise.\r\n\r\n                            Payouts to Trainers: TO BE UPDATED.\r\n\r\n                            Refunds: TO BE UPDTAED.\r\n\r\n                            Cancellations: TO BE UPDATED. You are able to cancel a class that you are hosting up until one (1) hour prior to the start of the session with no charge (“Cut-Off Time”). If you cancel a class after the Cut-Off Time, you will be subject to a service fee of $50 USD that will be deducted from your Trainer Earnings. Customers that paid for the cancelled session will be automatically refunded.\r\n\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getSettingSidebar = () => {\r\n        return (\r\n            <SettingSidebar />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <Row className=\"h-100\">\r\n                            <Col className=\"p-0 settings-sidebar-wrapper\">\r\n                                {getSettingSidebar()}\r\n                            </Col>\r\n                            <Col sm=\"9\">\r\n                                {getTerms()}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(Terms);","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Profile\\EditUserProfile.jsx",["580","581","582","583","584","585"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, FormGroup, Label, Input, Row, Col } from \"reactstrap\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { userProfile } from \"../../actions/userProfile\";\r\n\r\n// Router\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// Constants\r\nimport {\r\n    user_profile,\r\n    user_edit_profile,\r\n    get_profile,\r\n} from \"../../constants/constants\";\r\n\r\n// Styles\r\nimport \"../../styles/profile.scss\";\r\n\r\n// Actions\r\nimport { getFetchParam } from \"../../actions/getFetchParam\";\r\n\r\n// Components\r\nimport Header from \"../Header/Header\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\n\r\nimport profileCover from \"../../images/profile-cover.png\";\r\nimport profileDp from \"../../images/profile-dp.png\";\r\nfunction UserProfile(props) {\r\n    const dispatch = useDispatch();\r\n    const userInfo = useSelector((state) => state.postFetch);\r\n    const [settedProfile, setUserProfile] = useState(\"\");\r\n\r\n    const [userId2, setUserId] = useState();\r\n    const [fullName, setFullyName] = useState(\"\");\r\n    const [usrname, setUsrname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [gender, setGender] = useState(\"\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [about, setAbout] = useState(\"\");\r\n    const [business, setBusiness] = useState(\"\");\r\n    const [dob, setDob] = useState(\"\");\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n\r\n    let userId;\r\n\r\n    useEffect(() => {\r\n        getUserTrainerId();\r\n        dispatchUserProfile();\r\n    }, []);\r\n\r\n    const getUserTrainerId = () => {\r\n        if (userInfo.hasOwnProperty(\"userLogged\")) {\r\n            if (userInfo.userLogged) {\r\n                userId = userInfo.userLogged._id;\r\n            }\r\n        }\r\n    };\r\n\r\n    const dispatchUserProfile = () => {\r\n        console.log(userId);\r\n        setUserId(userId);\r\n        if (props.history.location.pathname === \"/edit-user-profile\") {\r\n            dispatch(userProfile(user_edit_profile));\r\n        } else {\r\n            dispatch(getFetchParam(get_profile, userId));\r\n            dispatch(userProfile(user_profile));\r\n        }\r\n    };\r\n\r\n    const users = useSelector((state) => state.userProfile);\r\n\r\n    // User Profile\r\n    const usersProfile = useSelector((state) => state.getApi);\r\n\r\n    const getUpperPart = () => {\r\n        if (users.hasOwnProperty(\"data\")) {\r\n            let upper = users.data;\r\n            return (\r\n                <Row className=\"mb-3\">\r\n                    <Col className=\"d-flex align-items-center col-6\">\r\n                        <h6 className=\"title m-0\">\r\n                            <i\r\n                                className=\"icon-chevron-left\"\r\n                                onClick={() => props.history.goBack()}\r\n                            ></i>\r\n                            {upper.title}\r\n                        </h6>\r\n                    </Col>\r\n\r\n                    {getBtns(upper.btns)}\r\n                </Row>\r\n            );\r\n        }\r\n    };\r\n\r\n    const routeTo = (location) => {\r\n        props.history.push(location);\r\n    };\r\n\r\n    const postEditedData = () => {\r\n        var formdata = new FormData();\r\n        formdata.append(\r\n            \"fullName\",\r\n            fullName === \"\" ? usersProfile.userProfile.fullName : fullName\r\n        );\r\n        formdata.append(\r\n            \"usrname\",\r\n            usrname === \"\" ? usersProfile.userProfile.username : usrname\r\n        );\r\n        formdata.append(\r\n            \"email\",\r\n            email === \"\" ? usersProfile.userProfile.email : email\r\n        );\r\n        formdata.append(\r\n            \"gender\",\r\n            gender === \"\" ? usersProfile.userProfile.gender : gender\r\n        );\r\n        formdata.append(\r\n            \"location\",\r\n            location === \"\" ? usersProfile.userProfile.location : location\r\n        );\r\n        formdata.append(\r\n            \"about\",\r\n            about === \"\" ? usersProfile.userProfile.about : about\r\n        );\r\n        formdata.append(\r\n            \"business\",\r\n            business === \"\" ? usersProfile.userProfile.business : business\r\n        );\r\n        formdata.append(\"dob\", dob === \"\" ? usersProfile.userProfile.dob : dob);\r\n        formdata.append(\r\n            \"profilePic\",\r\n            \"C:/Users/moham/Desktop/tunnin/tunnin-frontend-dev/src/images/done.png\"\r\n        );\r\n\r\n        console.log(\r\n            fullName === \"\" ? usersProfile.userProfile.fullName : fullName\r\n        );\r\n        console.log(\r\n            usrname === \"\" ? usersProfile.userProfile.username : usrname\r\n        );\r\n        console.log(email === \"\" ? usersProfile.userProfile.email : email);\r\n        console.log(dob === \"\" ? usersProfile.userProfile.dob : dob);\r\n        console.log(gender === \"\" ? usersProfile.userProfile.gender : gender);\r\n        console.log(about === \"\" ? usersProfile.userProfile.about : about);\r\n        console.log(\r\n            business === \"\" ? usersProfile.userProfile.business : business\r\n        );\r\n\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            body: formdata,\r\n            redirect: \"follow\",\r\n        };\r\n        fetch(\r\n            \"https://api.tunnin.io/users/update_trainer_profile/\" + userId2,\r\n            requestOptions\r\n        )\r\n            .then((response) => response.text())\r\n            .then((result) => console.log(result))\r\n            .catch((error) => console.log(\"error\", error));\r\n    };\r\n\r\n    const getBtns = (data) => {\r\n        let btns = data.map((items, index) => {\r\n            return (\r\n                <Col className=\"add-btn-wrapper col-6\" key={index}>\r\n                    {items.flag ? (\r\n                        <Button\r\n                            type=\"submit\"\r\n                            className=\"addBtn\"\r\n                            onClick={() => {\r\n                                postEditedData();\r\n                                routeTo(items.route);\r\n                            }}\r\n                        >\r\n                            <i className={items.iconClass}></i>\r\n                            {items.title}\r\n                        </Button>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </Col>\r\n            );\r\n        });\r\n        return btns;\r\n    };\r\n\r\n    const getProfile = () => {\r\n        if (usersProfile.hasOwnProperty(\"userProfile\")) {\r\n            let profile = usersProfile.userProfile;\r\n            return (\r\n                <Col>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <span className=\"profile-img-wrapper position-relative\">\r\n                            <img\r\n                                alt=\"profile\"\r\n                                src={\"https://api.tunnin.io/uploads/\" + profile.profilePic}\r\n                            />\r\n\r\n                            {props.history.location.pathname ===\r\n                            \"/edit-user-profile\" ? (\r\n                                <span className=\"delete-overlay\">\r\n                                    <span className=\"delete-img-wrapper\">\r\n                                        <i className=\"icon-delete\"></i>\r\n                                    </span>\r\n                                </span>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n                        </span>\r\n                        <span className=\"profile-name-wrapper\">\r\n                            <span className=\"profile-name\">\r\n                                {profile.fullName}\r\n                            </span>\r\n                            <span className=\"username\">{profile.username}</span>\r\n                        </span>\r\n                    </div>\r\n                </Col>\r\n            );\r\n        }\r\n    };\r\n\r\n    const getProfileImages = () => {\r\n        if (users.hasOwnProperty(\"data\")) {\r\n            let profileDetail = users.data.userDetails.coverImages.map(\r\n                (data, index) => {\r\n                    return (\r\n                        <Col className=\"cover-images\" key={index}>\r\n                            <div className=\"position-relative\">\r\n                                <img src={profileCover} alt={data.alt} />\r\n                                {props.history.location.pathname ===\r\n                                \"/edit-user-profile\" ? (\r\n                                    <span className=\"delete-overlay\">\r\n                                        <span className=\"delete-img-wrapper\">\r\n                                            <i className=\"icon-delete\"></i>\r\n                                        </span>\r\n                                    </span>\r\n                                ) : (\r\n                                    \"\"\r\n                                )}\r\n                            </div>\r\n                        </Col>\r\n                    );\r\n                }\r\n            );\r\n            return profileDetail;\r\n        }\r\n    };\r\n\r\n    const getUserForm = () => {\r\n        if (usersProfile.hasOwnProperty(\"userProfile\")) {\r\n            let profile = usersProfile.userProfile;\r\n            return (\r\n                <Row className={\"user-profile-form-edit\"}>\r\n                    <Col sm=\"4\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>Name</Label>\r\n                            <Input\r\n                                required\r\n                                onChange={(e) => setFullyName(e.target.value)}\r\n                                defaultValue={profile.fullName}\r\n                                type={\"text\"}\r\n                                name={profile.fullName}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col sm=\"4\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>Email</Label>\r\n                            <Input\r\n                                required\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                defaultValue={profile.email}\r\n                                type={\"email\"}\r\n                                name={profile.email}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"4\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>Category</Label>\r\n                            <Input\r\n                                required\r\n                                defaultValue={profile.userType}\r\n                                type={\"text\"}\r\n                                name={profile.userType}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col sm=\"4\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>\r\n                                Instagram Profile URL\r\n                            </Label>\r\n                            <Input\r\n                                required\r\n                                defaultValue={profile.insta}\r\n                                type={\"text\"}\r\n                                name={profile.insta}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"4\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>Username</Label>\r\n                            <Input\r\n                                required\r\n                                onChange={(e) => setUsrname(e.target.value)}\r\n                                defaultValue={profile.username}\r\n                                type={\"text\"}\r\n                                name={profile.username}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"4\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>Gender</Label>\r\n                            <Input\r\n                                required\r\n                                onChange={(e) => setGender(e.target.value)}\r\n                                defaultValue={profile.gender}\r\n                                type={\"text\"}\r\n                                name={profile.gender}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"4\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>Location</Label>\r\n                            <Input\r\n                                required\r\n                                onChange={(e) => setLocation(e.target.value)}\r\n                                defaultValue={profile.location}\r\n                                type={\"text\"}\r\n                                name={profile.location}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"4\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>DOB</Label>\r\n                            <Input\r\n                                required\r\n                                onChange={(e) => setDob(e.target.value)}\r\n                                defaultValue={profile.dob}\r\n                                type={\"text\"}\r\n                                name={profile.dob}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col sm=\"4\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>About</Label>\r\n                            <Input\r\n                                required\r\n                                onChange={(e) => setAbout(e.target.value)}\r\n                                defaultValue={profile.about}\r\n                                type={\"textarea\"}\r\n                                name={profile.about}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"4\">\r\n                        <FormGroup>\r\n                            <Label className={\"form-title\"}>\r\n                                Business Name\r\n                            </Label>\r\n                            <Input\r\n                                required\r\n                                onChange={(e) => setBusiness(e.target.value)}\r\n                                defaultValue={profile.business}\r\n                                type={\"text\"}\r\n                                name={profile.business}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"profiles\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"profile-right-container\">\r\n                            <div className=\"profile-header mt-4\">\r\n                                {getUpperPart()}\r\n                            </div>\r\n                            <Row className=\"user-profile-wrapper\">\r\n                                {getProfile()}\r\n                            </Row>\r\n                            <Row className=\"profile-cover-wrapper\">\r\n                                {getProfileImages()}\r\n                            </Row>\r\n                            <form\r\n                                onSubmit={() => console.log(\"sumited\")}\r\n                                className=\"tunnin-form\"\r\n                            >\r\n                                {getUserForm()}\r\n                            </form>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(UserProfile);\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Settings\\About.jsx",["586"],"import React, { useEffect } from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { settings } from \"../../actions/settings\";\r\n\r\n// Router\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// Constants\r\nimport { setting_about } from \"../../constants/constants\";\r\n\r\n// Styles\r\nimport \"../../styles/settings.scss\";\r\n\r\n// Components\r\nimport SettingSidebar from \"./Sidebar\";\r\nimport Header from \"../Header/Header\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\n\r\nfunction About(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchContact();\r\n    }, []);\r\n\r\n    const dispatchContact = () => {\r\n        dispatch(settings(setting_about));\r\n    };\r\n\r\n    const getSettings = useSelector((state) => state.settings);\r\n\r\n    const getAbout = () => {\r\n        if (getSettings.hasOwnProperty(\"about\")) {\r\n            let about = getSettings.about;\r\n            return (\r\n                <div className=\"about\">\r\n                    <div className=\"settings-container\">\r\n                        <h5 className=\"settings-heading\">\r\n                            <i className=\"icon-info\"></i>\r\n                            {about.title}\r\n                        </h5>\r\n                        <p>{about.description}</p>\r\n                        <p>\r\n                            <ul>\r\n                                {about.detailTitle}\r\n                                {getPoints(about)}\r\n                            </ul>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    const getPoints = (data) => {\r\n        let details = data.details.map((item, index) => {\r\n            return <li key={index}>{item.content}</li>;\r\n        });\r\n        return details;\r\n    };\r\n\r\n    const getSettingSidebar = () => {\r\n        return <SettingSidebar />;\r\n    };\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <Row className=\"h-100\">\r\n                            <Col className=\"p-0 settings-sidebar-wrapper\">\r\n                                {getSettingSidebar()}\r\n                            </Col>\r\n                            <Col sm=\"9\">{getAbout()}</Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(About);\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Settings\\Privacy.jsx",["587","588","589","590"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button, Row, Col\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { settings } from '../../actions/settings';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { setting_privacy } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/settings.scss';\r\n\r\n// Components\r\nimport SettingSidebar from './Sidebar';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nfunction Privacy(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchContact();\r\n    }, []);\r\n\r\n    const dispatchContact = () => {\r\n        dispatch(settings(setting_privacy));\r\n    }\r\n\r\n    const getSettings = useSelector(state => state.settings);\r\n    const getTermsCondition = useSelector(state => state.getApi);\r\n\r\n    console.log(\"Get Settings: \", getSettings);\r\n\r\n    const getPrivacy = () => {\r\n        if(getSettings.hasOwnProperty('privacy')) {\r\n            let privacy = getSettings.privacy;\r\n            return (\r\n                <div className=\"privacy\">\r\n                    <div className=\"settings-container\">\r\n                        <h5 className=\"settings-heading\">\r\n                        <i className=\"icon-shield\"></i>\r\n                            {privacy.title}\r\n                        </h5>\r\n                        <p>\r\n                            {privacy.lastUpdated}\r\n                        </p>\r\n                        <p>\r\n                            <ul>\r\n                                {getOverView(privacy)}\r\n                                {getPersonalData(privacy)}\r\n                                {getCategories(privacy)}\r\n                            </ul>    \r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getCategories=(data)=> {\r\n        return(\r\n            <p>\r\n                <li>\r\n                    {data.categoriesDataCollectHeading}\r\n                </li>\r\n                {data.categoriesDescription}\r\n                {getCategoriesList(data.categoriesDescriptionList)}\r\n                {data.finalCategories}\r\n            </p>\r\n        )\r\n    }\r\n\r\n    const getCategoriesList=(data) => {\r\n        let list = data.map((item, index)=> {\r\n            return(\r\n                <li key={index}>\r\n                    {item.list}\r\n                </li>\r\n            );\r\n        });\r\n        return list;\r\n    }\r\n\r\n    const getPersonalData=(data)=> {\r\n        return(\r\n            <p>\r\n                <li>\r\n                    {data.personalDataHeading}\r\n                </li>\r\n                {data.personalDataList[0].personalData}\r\n            </p>\r\n        )\r\n    }\r\n\r\n    const getOverView=(data)=> {\r\n        let privacy = data;\r\n        return(\r\n            <p>\r\n                <li>\r\n                    {privacy.overviewHeading}\r\n                </li>\r\n                {getOverViewList(privacy)}\r\n            </p>\r\n        );\r\n    }\r\n\r\n    const getOverViewList=(data)=> {\r\n        let list = data.overviewList.map((item, index)=> {\r\n            return(\r\n                <p key={index}>{item.overView}</p>\r\n            )\r\n        });\r\n        return list;\r\n    }\r\n\r\n    const getSettingSidebar = () => {\r\n        return (\r\n            <SettingSidebar />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <Row className=\"h-100\">\r\n                            <Col className=\"p-0 settings-sidebar-wrapper\">\r\n                                {getSettingSidebar()}\r\n                            </Col>\r\n                            <Col sm=\"9\">\r\n                                {getPrivacy()}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(Privacy);","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Settings\\BankDetails.jsx",["591","592","593","594","595"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from \"reactstrap\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { settings } from \"../../actions/settings\";\r\nimport { postFetch } from \"../../actions/postFetch\";\r\n\r\nimport Cookies from \"universal-cookie\";\r\n\r\n// Router\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// Constants\r\nimport { setting_bank, bank_details_api } from \"../../constants/constants\";\r\n\r\n// Styles\r\nimport \"../../styles/settings.scss\";\r\n\r\n// Components\r\nimport SettingSidebar from \"./Sidebar\";\r\nimport Header from \"../Header/Header\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\n\r\nfunction BankDetails(props) {\r\n  const cookies = new Cookies();\r\n\r\n  let bankDetailForm = {};\r\n  const [bankName, setBankName] = useState(\"\");\r\n  const [accountHolder, setAccountHolder] = useState(\"\");\r\n  const [accountNumber, setAccountNumber] = useState(\"\");\r\n  const [routingNumber, setRoutingNumber] = useState(\"\");\r\n  const [ssn, setSsn] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [address1, setAddress1] = useState(\"\");\r\n  const [address2, setAddress2] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [dob, setDob] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n\r\n  const [uploadedImageFile, setUploadedFile] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  let postApi = useSelector((state) => state.postFetch);\r\n\r\n  const initialValue = () => {\r\n    const res = fetch(\r\n      \"https://api.tunnin.io/bank/getDetails/\" + postApi.userLogged._id\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.status == 200) {\r\n          console.log(data);\r\n          setBankName(data.data.bankName);\r\n          setAccountHolder(cookies.get(\"username\"));\r\n          setAccountNumber(data.data.accountNumber);\r\n          setRoutingNumber(data.data.routingNumber);\r\n          setSsn(data.data.ssn);\r\n          setPostalCode(data.data.postalCode);\r\n          setCountry(data.data.country);\r\n          setAddress1(data.data.address1);\r\n          setAddress2(data.data.address2);\r\n          setCity(data.data.city);\r\n          setDob(data.data.dob);\r\n          setGender(data.data.gender);\r\n          setEmail(data.data.email);\r\n          setState(data.data.state);\r\n        } else {\r\n          console.log(data);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatchContact();\r\n    initialValue();\r\n  }, [postApi]);\r\n\r\n  const dispatchContact = () => {\r\n    dispatch(settings(setting_bank));\r\n  };\r\n\r\n  const getSettings = useSelector((state) => state.settings);\r\n\r\n  const getBankDetails = () => {\r\n    if (getSettings.hasOwnProperty(\"bank\")) {\r\n      let bankDetail = getSettings.bank;\r\n      return (\r\n        <div className=\"banks\">\r\n          <div className=\"settings-container\">\r\n            <h5 className=\"settings-heading\">\r\n              <i className=\"icon-info\"></i>\r\n              {bankDetail.title}\r\n            </h5>\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                saveDetails();\r\n                props.history.push(\"/settings-bank-details\");\r\n              }}\r\n              className=\"tunnin-form\"\r\n            >\r\n              <Row>{getBankForm()}</Row>\r\n              <div>\r\n                <label> Verification Images</label>\r\n                <div className=\"uploads-btn-wrapper\">\r\n                  <span className=\"uploads-btn\">\r\n                    <label htmlFor=\"fileUpload\">\r\n                      <i className=\"icon-cloud\"></i>\r\n                    </label>\r\n                    <input\r\n                      hidden\r\n                      id=\"fileUpload\"\r\n                      type=\"file\"\r\n                      onChange={(e) => uploadedFile(e)}\r\n                    />\r\n                  </span>\r\n                  <span className=\"uploads-btn\">\r\n                    <label htmlFor=\"fileUpload\">\r\n                      <i className=\"icon-cloud\"></i>\r\n                    </label>\r\n                    <input\r\n                      hidden\r\n                      id=\"fileUpload\"\r\n                      type=\"file\"\r\n                      onChange={(e) => uploadedFile(e)}\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Button type=\"submit\" color=\"primary\" className=\"action-btn\">\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const uploadedFile = (event) => {\r\n    let imageFile = event.target.files[0];\r\n    if (uploadedImageFile < 2) {\r\n      setUploadedFile(...uploadedImageFile, imageFile);\r\n    }\r\n  };\r\n\r\n  const getBankForm = () => {\r\n    // if (getSettings.hasOwnProperty(\"bank\")) {\r\n    //   let form = getSettings.bank.bankform.map((data, index) => {\r\n    return (\r\n      <>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"formheading\">Bank Name</Label>\r\n            <Input\r\n              required\r\n              type=\"text\"\r\n              size=\"6\"\r\n              defaultValue={bankName}\r\n              onChange={(e) => {\r\n                setBankName(e.target.value);\r\n              }}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"formheading\">Address Line 1</Label>\r\n            <Input\r\n              required\r\n              type=\"text\"\r\n              size=\"6\"\r\n              defaultValue={address1}\r\n              onChange={(e) => {\r\n                setAddress1(e.target.value);\r\n              }}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"formheading\">Account Holder Name</Label>\r\n            <Input\r\n              required\r\n              type=\"text\"\r\n              size=\"6\"\r\n              defaultValue={accountHolder}\r\n\r\n              //   onChange={(e) => {\r\n              //     setA( e.target.value);\r\n              //   }}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"formheading\">Address Line 2</Label>\r\n            <Input\r\n              required\r\n              type=\"text\"\r\n              size=\"6\"\r\n              defaultValue={address2}\r\n              onChange={(e) => {\r\n                setAddress2(e.target.value);\r\n              }}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"formheading\">Account Number</Label>\r\n            <Input\r\n              required\r\n              type=\"text\"\r\n              size=\"6\"\r\n              defaultValue={accountNumber}\r\n              onChange={(e) => {\r\n                setAccountNumber(e.target.value);\r\n              }}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"formheading\">City</Label>\r\n            <Input\r\n              required\r\n              type=\"text\"\r\n              size=\"6\"\r\n              defaultValue={city}\r\n              onChange={(e) => {\r\n                setCity(e.target.value);\r\n              }}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"formheading\">Routing Number</Label>\r\n            <Input\r\n              required\r\n              type=\"text\"\r\n              size=\"6\"\r\n              defaultValue={routingNumber}\r\n              onChange={(e) => {\r\n                setRoutingNumber(e.target.value);\r\n              }}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"formheading\">State</Label>\r\n            <Input\r\n              required\r\n              type=\"text\"\r\n              size=\"6\"\r\n              defaultValue={state}\r\n              onChange={(e) => {\r\n                setState(e.target.value);\r\n              }}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"formheading\">SSN (Last Four Digits)</Label>\r\n            <Input\r\n              required\r\n              type=\"text\"\r\n              size=\"6\"\r\n              defaultValue={ssn}\r\n              onChange={(e) => {\r\n                setSsn(e.target.value);\r\n              }}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"formheading\">Gender</Label>\r\n            <Input\r\n              required\r\n              type=\"text\"\r\n              size=\"6\"\r\n              defaultValue={gender}\r\n              onChange={(e) => {\r\n                setGender(e.target.value);\r\n              }}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"formheading\">Postal Code</Label>\r\n            <Input\r\n              required\r\n              type=\"text\"\r\n              size=\"6\"\r\n              defaultValue={postalCode}\r\n              onChange={(e) => {\r\n                setPostalCode(e.target.value);\r\n              }}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"formheading\">Email</Label>\r\n            <Input\r\n              required\r\n              type=\"email\"\r\n              size=\"6\"\r\n              defaultValue={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"formheading\">Country</Label>\r\n            <Input\r\n              required\r\n              type=\"text\"\r\n              size=\"6\"\r\n              defaultValue={country}\r\n              onChange={(e) => {\r\n                setCountry(e.target.value);\r\n              }}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm=\"6\">\r\n          <FormGroup>\r\n            <Label className=\"formheading\">Date Of Birth</Label>\r\n            <Input\r\n              required\r\n              type=\"text\"\r\n              size=\"6\"\r\n              defaultValue={dob}\r\n              onChange={(e) => {\r\n                setDob(e.target.value);\r\n              }}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n      </>\r\n    );\r\n\r\n    //   return form;\r\n    // }\r\n  };\r\n\r\n  //   const getBankDetailsField = (field, data) => {\r\n  //     console.log(field, data);\r\n  //     bankDetailForm[field] = data;\r\n  //   };\r\n\r\n  const saveDetails = () => {\r\n    let bodyFormData = new FormData();\r\n    if (postApi.hasOwnProperty(\"userLogged\")) {\r\n      bodyFormData.append(\"userId\", postApi.userLogged._id);\r\n      console.log(postApi.userLogged._id);\r\n      bodyFormData.append(\"bankName\", bankName);\r\n      bodyFormData.append(\"accountHolder\", accountHolder);\r\n      bodyFormData.append(\"accountNumber\", accountNumber);\r\n      bodyFormData.append(\"routingNumber\", routingNumber);\r\n      bodyFormData.append(\"ssn\", ssn);\r\n      bodyFormData.append(\"postalCode\", postalCode);\r\n      bodyFormData.append(\"country\", country);\r\n      bodyFormData.append(\"address1\", address1);\r\n      bodyFormData.append(\"address2\", address2);\r\n      bodyFormData.append(\"city\", city);\r\n      bodyFormData.append(\"dob\", dob);\r\n      bodyFormData.append(\"email\", email);\r\n      bodyFormData.append(\"gender\", gender);\r\n      bodyFormData.append(\"state\", state);\r\n      bodyFormData.append(\"images\", uploadedImageFile);\r\n    }\r\n\r\n    // const postObj = {\r\n    //   userId: postApi.userLogged._id,\r\n    //   bankName: bankName,\r\n\r\n    //   accountHolder: accountHolder,\r\n    //   accountNumber: accountNumber,\r\n    //   routingNumber: routingNumber,\r\n    //   ssn: ssn,\r\n    //   postalCode: postalCode,\r\n    //   country: country,\r\n    //   address1: address1,\r\n    //   address2: address2,\r\n    //   city: city,\r\n    //   dob: dob,\r\n    //   email: email,\r\n    //   gender: gender,\r\n    //   state: state,\r\n    //   images: uploadedImageFile,\r\n    // };\r\n\r\n    console.log(\"#################\");\r\n    console.log(postApi.userLogged._id);\r\n    console.log(bankName);\r\n    console.log(accountHolder);\r\n    console.log(accountNumber);\r\n    console.log(routingNumber);\r\n    console.log(ssn);\r\n    console.log(postalCode);\r\n    console.log(country);\r\n    console.log(address1);\r\n    console.log(address2);\r\n    console.log(dob);\r\n    console.log(email);\r\n    console.log(gender);\r\n    console.log(state);\r\n    console.log(uploadedImageFile);\r\n\r\n    // var requestOptions = {\r\n    //   method: \"POST\",\r\n    //   body: postObj,\r\n    //   redirect: \"follow\",\r\n    // };\r\n\r\n    // console.log(\"#################\");\r\n    // console.log(postObj);\r\n    // console.log(\"#################\");\r\n\r\n    // fetch(\"https://api.tunnin.io/bank\", requestOptions)\r\n    //   .then((response) => response.text())\r\n\r\n    //   .then((result) => console.log(result))\r\n    //   .catch((error) => console.log(\"error\", error));\r\n\r\n    // console.log(\"Body Form Data: \", bodyFormData);\r\n    // console.log(\"#################\");\r\n    dispatch(postFetch(bank_details_api, bodyFormData));\r\n    // console.log(\"Bank Form: \", bankDetailForm);\r\n  };\r\n\r\n  const getSettingSidebar = () => {\r\n    return <SettingSidebar />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"notifications\">\r\n      <Header />\r\n      <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col className=\"left-container\">\r\n            <Sidebar />\r\n          </Col>\r\n          <Col>\r\n            <Row className=\"h-100\">\r\n              <Col className=\"p-0 settings-sidebar-wrapper\">\r\n                {getSettingSidebar()}\r\n              </Col>\r\n              <Col sm=\"9\">{getBankDetails()}</Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(BankDetails);\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Settings\\Faqs.jsx",["596","597","598"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button, Row, Col, Collapse, CardBody, Card, CardHeader\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { settings } from '../../actions/settings';\r\nimport { getFetch } from '../../actions/getFetch';\r\nimport { toggleCollapse } from '../../actions/toggleCollapse';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { setting_faqs, all_faqs } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/settings.scss';\r\n\r\n// Components\r\nimport SettingSidebar from './Sidebar';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nfunction Faqs(props) {\r\n\r\n    const toggle=(allFaqs, data, index)=>{\r\n        dispatch(toggleCollapse(allFaqs, data, index));\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchContact();\r\n    }, []);\r\n\r\n    const dispatchContact = () => {\r\n        dispatch(settings(setting_faqs));\r\n        dispatch(getFetch(all_faqs));\r\n    }\r\n\r\n    const getSettings = useSelector(state => state.settings);\r\n    const getApi = useSelector(state=>state.getApi);\r\n\r\n    const getFaqs = () => {\r\n        if (getSettings.hasOwnProperty('faqs')) {\r\n            let faqs = getSettings.faqs;\r\n            return (\r\n                <div className=\"faqs\">\r\n                    <div className=\"settings-container\">\r\n                        <h5 className=\"settings-heading\">\r\n                            <i className=\"icon-communications\"></i>\r\n                            {faqs.title}\r\n                        </h5>\r\n                        <div className=\"faq-accordion\">\r\n                            {getQuestions()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getQuestions=()=> {\r\n        if(getApi.hasOwnProperty('allFaqs')) {\r\n            let allFaqs = getApi.allFaqs;\r\n            if(allFaqs instanceof Array) {\r\n                let ques = allFaqs.map((data, index)=> {\r\n                    return(\r\n                        <Card key={index} onClick={()=>toggle(allFaqs, data, index)}>\r\n                            <CardHeader>\r\n                                {data.question}\r\n                                <i className=\"icon-chevron-down\"></i>\r\n                            </CardHeader>\r\n                            <Collapse isOpen={data.flag}>\r\n                                <CardBody>\r\n                                    {data.answer}\r\n                                </CardBody>\r\n                            </Collapse>                    \r\n                        </Card>\r\n                    );\r\n                });\r\n                return ques;\r\n            }\r\n        }\r\n    }\r\n\r\n    const getSettingSidebar = () => {\r\n        return (\r\n            <SettingSidebar />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notifications\">\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row>\r\n                    <Col className=\"left-container\">\r\n                        <Sidebar />\r\n                    </Col>\r\n                    <Col>\r\n                        <Row className=\"h-100\">\r\n                            <Col className=\"p-0 settings-sidebar-wrapper\">\r\n                                {getSettingSidebar()}\r\n                            </Col>\r\n                            <Col sm=\"9\">\r\n                                {getFaqs()}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(Faqs);","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\sessionDetailUserPop.js",["599","600"],"import localData from '../Data/Data.json';\r\n\r\n// Constants\r\nimport { cancel_session, cancelled_session, close_modal } from '../constants/constants';\r\n\r\nexport const sessionPopup=(type)=> {\r\n    if(type == cancel_session) {\r\n        return {\r\n            type: cancel_session,\r\n            payload: localData.sessionNotificationPop.cancelSession\r\n        }\r\n    }\r\n    else if(type == cancelled_session) {\r\n        return {\r\n            type: cancelled_session,\r\n            payload: localData.sessionNotificationPop.cancelled\r\n        }\r\n    }\r\n    else {\r\n        return {\r\n            type: close_modal\r\n        }\r\n    }\r\n}\r\n\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\constants\\constants.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Notifications\\Sliders.jsx",["601","602","603"],"import React, { Component } from 'react';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport userSlider from '../../images/user-slider-image.png';\r\n\r\nclass Sliders extends Component {\r\n    render() {\r\n        return (\r\n            <Carousel>\r\n                <div>\r\n                    <img src={userSlider} />\r\n                </div>\r\n                <div>\r\n                    <img src={userSlider} />\r\n                </div>\r\n                <div>\r\n                    <img src={userSlider} />\r\n                </div>\r\n            </Carousel>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sliders;","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Notifications\\Popup.jsx",["604","605","606","607","608"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { sessionPopup } from '../../actions/sessionDetailUserPop';\r\n\r\n// Constants\r\nimport { cancel_session, close_modal, cancelled_session } from '../../constants/constants';\r\n\r\nconst Popup = (props) => {\r\n\r\n    console.log(\"Props: \", props);\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const dispatch = useDispatch();\r\n    const [popUpData, setPopupData] = useState({});\r\n\r\n    useEffect(() => {\r\n        dispatchCancelPop();\r\n    }, []);\r\n\r\n    const dispatchCancelPop = () => {\r\n        dispatch(sessionPopup(cancel_session));\r\n    }\r\n\r\n    const sessionClose = useSelector(state => state.sessionDetailUserPop);\r\n    console.log(\"New Session\", sessionClose);\r\n\r\n    const getBtns = (btns) => {\r\n        let btn = btns.map((data, index) => {\r\n            return (\r\n                <Button className={data.btnClass} color=\"primary\" key={index} onClick={()=>getAction(data, index)}>\r\n                    {data.title}\r\n                </Button>\r\n            )\r\n        });\r\n        return btn;\r\n    }\r\n\r\n    const getAction=(data, index)=> {\r\n        if(data.action === \"close\") {\r\n            dispatch(sessionPopup(close_modal));\r\n        }\r\n        else {\r\n            dispatch(sessionPopup(cancelled_session));\r\n        }     \r\n    }\r\n\r\n    const getModal = () => {\r\n        let state = sessionClose.modalState;\r\n        console.log(\"Session CLose: \", sessionClose);\r\n        if (state.hasOwnProperty('content')) {\r\n            return (\r\n                <Modal className={sessionClose.modalState.popupClass+\" tunnin-popup modal-dialog-centered\"} isOpen={sessionClose.popUp}>\r\n                    <ModalBody className=\"justify-content-center\" >\r\n                        <p className=\"text-center opacity-69\">\r\n                            {state.content}\r\n                        </p>\r\n                    </ModalBody>\r\n                    <ModalFooter className=\"border-0 justify-content-center\">\r\n                        {getBtns(state.btns)}\r\n                    </ModalFooter>\r\n                </Modal>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {getModal()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Popup;","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Header\\Header.jsx",["609","610"],"import React, { useState, useEffect } from \"react\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// import moment from \"moment\";\r\nimport timeago from \"time-ago\";\r\n\r\n// Styles\r\nimport \"../../styles/ratings.scss\";\r\nimport {\r\n    Dropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n} from \"reactstrap\";\r\n\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\n// Action\r\nimport { fetchHeader } from \"../../actions/header\";\r\nimport { getFetch } from \"../../actions/getFetch\";\r\n\r\n// Constants\r\nimport {\r\n    getHeader,\r\n    trainer_user_type,\r\n    user_logout,\r\n} from \"../../constants/constants\";\r\nimport { fine_res } from \"../../constants/api_env\";\r\n\r\n// Router\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Cookies from \"universal-cookie\";\r\n\r\nfunction Header(props) {\r\n    const cookies = new Cookies();\r\n\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const [notificationDropdownOpen, setNotificationDropdownOpen] =\r\n        useState(false);\r\n    const [userType, setUserType] = useState({});\r\n    const [Data, setData] = useState([]);\r\n    const [userLoggedDetails, setUserLogged] = useState({});\r\n    const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userInfo = useSelector((state) => state.postFetch);\r\n\r\n    const dispatchCheckUser = () => {\r\n        if (userInfo.hasOwnProperty(\"userLogged\")) {\r\n            setUserLogged(userInfo.userLogged);\r\n            setUserType(userInfo.userLogged.userType);\r\n        } else {\r\n            setUserType(trainer_user_type);\r\n        }\r\n    };\r\n\r\n    //   const data = new Date;\r\n\r\n    const notificationImporter = () => {\r\n        // console.log(\"001122check=========================001122\");\r\n        // console.log(localStorage.getItem(\"userId\"));\r\n        // console.log(\"001122check=========================001122\");\r\n        fetch(\r\n            `https://api.tunnin.io/notifications/getAll/${localStorage.getItem(\"userId\")}/5`\r\n        )\r\n            .then((res) => res.json())\r\n            .then((data) => setData(data));\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatchHead();\r\n        dispatchCheckUser();\r\n        notificationImporter();\r\n    }, [userInfo.hasOwnProperty(\"userLogged\"), Data.length]);\r\n\r\n    const dispatchHead = () => {\r\n        dispatch(fetchHeader(getHeader));\r\n    };\r\n\r\n    const getHead = useSelector((state) => state.header);\r\n\r\n    const getPaths = () => {\r\n        if (getHead.hasOwnProperty(\"data\")) {\r\n            let paths = getHead.data.paths.map((data, index) => {\r\n                return <span className={data.class} key={index}></span>;\r\n            });\r\n            return paths;\r\n        }\r\n    };\r\n\r\n    const getCredentials = () => {\r\n        // console.log(\"User Logged Details: \", userLoggedDetails);\r\n        if (userLoggedDetails) {\r\n            return (\r\n                <span>\r\n                    <span className=\"name\">{userLoggedDetails.fullName}</span>\r\n                    <span className=\"email\">{userLoggedDetails.email}</span>\r\n                </span>\r\n            );\r\n        }\r\n    };\r\n\r\n    const getUserImage = () => {\r\n        if (userLoggedDetails) {\r\n            return (\r\n                <img\r\n                    src={\r\n                        \"https://api.tunnin.io/uploads/\" +\r\n                        userLoggedDetails.profilePic\r\n                    }\r\n                    alt=\"user-dp\"\r\n                    width=\"55\"\r\n                    height=\"55\"\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    const removeCookiesOrLogout = () => {\r\n        cookies.remove(\"username\");\r\n        cookies.remove(\"password\");\r\n    };\r\n    const getDropDownItems = () => {\r\n        if (getHead.hasOwnProperty(\"data\")) {\r\n            let drops = getHead.data.dropdown.map((data, index) => {\r\n                if (data.title === \"Log out\") {\r\n                    return (\r\n                        <a href=\"/\">\r\n                            <DropdownItem\r\n                                key={index}\r\n                                onClick={() => {\r\n                                    removeCookiesOrLogout();\r\n                                    // routeTo(data.route);\r\n                                }}\r\n                            >\r\n                                <i className={data.iconClass}></i>\r\n                                {data.title}\r\n                            </DropdownItem>\r\n                        </a>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <DropdownItem\r\n                            key={index}\r\n                            onClick={() => {\r\n                                routeTo(data.route);\r\n                            }}\r\n                        >\r\n                            <i className={data.iconClass}></i>\r\n                            {data.title}\r\n                        </DropdownItem>\r\n                    );\r\n                }\r\n            });\r\n            return drops;\r\n        }\r\n    };\r\n\r\n    const getDropDownNotifications = () => {\r\n        // if (getHead.hasOwnProperty(\"data\")) {\r\n        let drops = Data.map((data, index) => {\r\n            return (\r\n                <>\r\n                    <DropdownItem\r\n                        style={{\r\n                            fontSize: \"small\",\r\n                            borderBottom: \"1px dotted #333\",\r\n                        }}\r\n                        key={index}\r\n                    >\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <Avatar\r\n                                style={{\r\n                                    marginRight: \"10px\",\r\n                                    alignSelf: \"center\",\r\n                                }}\r\n                            >\r\n                                <img src={data.image} alt=\"profile pic\"></img>\r\n                            </Avatar>\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"column\",\r\n                                }}\r\n                            >\r\n                                <p style={{ marginTop: 0, marginBottom: 0 }}>\r\n                                    {data.body.slice(0, 40)}...\r\n                                </p>\r\n                                <p style={{ marginTop: 0, marginBottom: 0 }}>\r\n                                    {timeAgoFunction(data.datetime)}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </DropdownItem>\r\n                    {/* <NotificationDropdown/> */}\r\n                </>\r\n            );\r\n        });\r\n        return drops;\r\n        // }\r\n    };\r\n\r\n    const timeAgoFunction = (time) => {\r\n        var epoch = +time + new Date().getTimezoneOffset() * -1; //for timeZone\r\n\r\n        var t = new Date(+epoch);\r\n\r\n        return timeago.ago(t);\r\n    };\r\n\r\n    const routeTo = (location) => {\r\n        props.history.push(location);\r\n    };\r\n\r\n    const logout = () => {\r\n        dispatch(getFetch(user_logout));\r\n    };\r\n\r\n    const logUser = useSelector((state) => state.getApi);\r\n\r\n    if (logUser.hasOwnProperty(\"logout\")) {\r\n        if (logUser.logout.status === fine_res) {\r\n            console.log(\"Fine\");\r\n            props.history.push(\"/signup\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile-actions d-flex align-items-center justify-content-end\">\r\n            {userType === trainer_user_type ? (\r\n                <Dropdown\r\n                    className=\"profile-dropdown\"\r\n                    isOpen={notificationDropdownOpen}\r\n                    size=\"xs\"\r\n                    toggle={() =>\r\n                        setNotificationDropdownOpen(!notificationDropdownOpen)\r\n                    }\r\n                >\r\n                    <DropdownToggle>\r\n                        <div className=\"user-notification-wrapper\">\r\n                            <span className=\"icon-Group-22380\">\r\n                                {getPaths()}\r\n                            </span>\r\n                            {/* {getDropDownItems()} */}\r\n                        </div>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>{getDropDownNotifications()}</DropdownMenu>\r\n                </Dropdown>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n            <Dropdown\r\n                className=\"profile-dropdown\"\r\n                isOpen={dropdownOpen}\r\n                size=\"sm\"\r\n                toggle={toggle}\r\n            >\r\n                <DropdownToggle>\r\n                    <div className=\"user-profile\">\r\n                        <span className=\"dp-wrapper\">{getUserImage()}</span>\r\n                        <span className=\"credentials\">{getCredentials()}</span>\r\n                        {userType === trainer_user_type ? (\r\n                            <i className=\"icon-chevron-down\"></i>\r\n                        ) : (\r\n                            \"\"\r\n                        )}\r\n                    </div>\r\n                </DropdownToggle>\r\n                <DropdownMenu>{getDropDownItems()}</DropdownMenu>\r\n            </Dropdown>\r\n            {userType === trainer_user_type ? (\r\n                \"\"\r\n            ) : (\r\n                <a href=\"/\">\r\n                    <span\r\n                        className=\"name user-logout\"\r\n                        style={{ color: \"#fff\" }}\r\n                        onClick={() => logout()}\r\n                    >\r\n                        <i className=\"icon-logout name\" />\r\n                        LogOut\r\n                    </span>\r\n                </a>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\Components.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\earnings.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\getFetchParam.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\App.js",["611","612","613"],"import React, { useEffect, useState } from \"react\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { getFetchParam } from \"../../actions/getFetchParam\";\r\n\r\n// Constant\r\nimport { agora_key, upcoming_session } from \"../../constants/constants\";\r\n\r\nimport Call from \"./Call\";\r\n\r\nfunction App(props) {\r\n    const [status, setStatus] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const channel = useSelector((state) => state.postFetch);\r\n\r\n    console.log(\"Channel\", channel);\r\n\r\n    let sessionId = props.sessionId;\r\n\r\n    console.log(\"************************\");\r\n    console.log(\"************************\");\r\n    console.log(sessionId);\r\n    console.log(\"************************\");\r\n    console.log(\"************************\");\r\n\r\n    useEffect(() => {\r\n        getChannel();\r\n    });\r\n\r\n    const getChannel = () => {\r\n        dispatch(getFetchParam(agora_key, sessionId));\r\n    };\r\n\r\n    console.log(\"Props: \", props);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Call disableVideo={props.videoStatus} />\r\n            <h1>Hello</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\patchApi.js",["614"],"// Constants\r\nimport { url, fine_res } from '../constants/api_env';\r\nimport { agora_key } from '../constants/constants';\r\n// axios\r\nimport axios from 'axios';\r\n\r\nexport const patchFetch=(apiType, params)=> {\r\n    return async (dispatch) => {     \r\n        try {\r\n            console.log(\"Complete Url: \",(url+apiType),params);\r\n            let res = await axios.patch((url+apiType), params);     \r\n            console.log(\"Res of Patch Agora: \", res);\r\n            if(res.status === fine_res) {\r\n                let { data } = res.data;\r\n                console.log(\"Res of Patch Agora: \", res);\r\n                dispatch({\r\n                    type: apiType,\r\n                    payload: data,\r\n                });\r\n            }\r\n        }\r\n        catch(error) {\r\n            console.log(\"Complete Err: \", error.response);\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\notification.js",["615","616"],"import localData from '../Data/Data.json';\r\n\r\n// Constants\r\nimport { listed_notification, trainer_user_type, get_sidebar_list } from '../constants/constants';\r\n\r\nexport const ListNotification=(type, userType)=> {\r\n    if(type == get_sidebar_list) {\r\n        let data = JSON.parse(JSON.stringify(localData.notification));\r\n        console.log(\"Here User\", userType);\r\n        console.log(\"Data:,\", data);\r\n        let sideList = data.sideList;\r\n        for(let i=0; i<sideList.length; i++) {\r\n            sideList[i].active = false;\r\n            if(userType.route === sideList[i].route) {\r\n                sideList[i].active = true;\r\n            }\r\n        }\r\n        data.sideList = sideList;\r\n        console.log(\"Data: \", data);\r\n        return {\r\n            type: listed_notification,\r\n            payload: data,\r\n        }\r\n    }\r\n    if(type == \"past\") {\r\n        let cards;\r\n        let data = JSON.parse(JSON.stringify(localData.notification));\r\n        if(userType === trainer_user_type) {\r\n            cards = data.cards;\r\n            for(let i=0; i<cards.length; i++) {\r\n                cards[i].golive = cards[i].past;\r\n            }\r\n        }\r\n        else {\r\n            cards = data.userCards;\r\n            for(let i=0; i<cards.length; i++) {\r\n                cards[i].golive = cards[i].past;\r\n            }\r\n            data.cards = data.userCards;\r\n        }\r\n        return {\r\n            type: listed_notification,\r\n            payload: data,\r\n        }\r\n    }\r\n    else {\r\n        let cards;\r\n        let data = JSON.parse(JSON.stringify(localData.notification));\r\n        if(userType !== trainer_user_type) {\r\n            cards = data.userCards;\r\n            console.log(\"Users: \", cards);\r\n            for(let i=0; i<cards.length; i++) {\r\n                cards[i].golive = cards[i].past;\r\n                cards[i].status=\"Booked\";\r\n                cards[i].statusDetail = \"Booked\";\r\n            }\r\n            data.cards = data.userCards;\r\n        }\r\n        return {\r\n            type: listed_notification,\r\n            payload: data,\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\postFetch.js",["617","618"],"// Constants\r\nimport { url, fine_res } from '../constants/api_env';\r\nimport { user_logged_in, delete_profile_pic, reg_step_1, reg_step_2 } from '../constants/constants';\r\n// axios\r\nimport axios from 'axios';\r\n\r\n// Toastify\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\n\r\nexport const postFetch = (dataType, params) => {\r\n    return async (dispatch) => {\r\n        console.log(\"DataType: \", dataType);\r\n        console.log(\"Params: \", params);\r\n        try {\r\n            let res = await axios.post((url+dataType), params);\r\n            console.log(\"Res: \", res);\r\n            if (res.status === fine_res) {\r\n                let data;\r\n                if(dataType === reg_step_1 || dataType === reg_step_2) {\r\n                    data = res;\r\n                }\r\n                else {\r\n                    data = res.data.data;\r\n                }\r\n                toast.success('Success', {position: toast.POSITION.BOTTOM_RIGHT});\r\n                dispatch({\r\n                    type: dataType,\r\n                    payload: data,\r\n                    status: res.status\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(\"Complete Err: \", error.response);\r\n            toast.error(error.response.data.message, {position: toast.POSITION.BOTTOM_RIGHT, autoClose: false});\r\n            dispatch({\r\n                type: dataType,\r\n                payload: error.response,\r\n            });\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\verify.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\signedUp.js",["619"],"// Constants\r\nimport { signed_up } from '../constants/constants';\r\n\r\nexport const SignedUp=(action_type, data)=> {\r\n    return {\r\n        type: action_type,\r\n        payload: data,\r\n    }\r\n}","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\getFetch.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\settings.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\toggleCollapse.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\WebCam.jsx",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\Mic.jsx",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Login\\LoginForm.jsx",["620","621","622"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\n\r\nimport Cookies from \"universal-cookie\";\r\n\r\nimport ModalPopup from \"./ModalPopup\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { updateModal } from \"../../actions/updateModal\";\r\nimport { postFetch } from \"../../actions/postFetch\";\r\n\r\n// Constants\r\nimport { get_auth, notification_route } from \"../../constants/constants\";\r\n\r\n// Router\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// Toaster\r\n// import toast, { Toaster } from 'react-hot-toast';\r\n\r\n// Style\r\nimport \"../../styles/login.scss\";\r\n\r\nimport { fine_res } from \"../../constants/api_env\";\r\n\r\nfunction LoginForm(props) {\r\n    const cookies = new Cookies();\r\n    const [loginForm, setForm] = useState({});\r\n    // const [modalData, setModalData] = useState({});\r\n\r\n    useEffect(() => {\r\n        setFormData();\r\n    }, []);\r\n\r\n    const setFormData = () => {\r\n        setForm(props.formData);\r\n    };\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [viewPass, setViewPass] = useState(false);\r\n\r\n    const [datacall, setDataCall] = useState({});\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const toggle = () => {\r\n        setModal(!modal);\r\n        dispatch(updateModal(\"forgot\"));\r\n    };\r\n\r\n    const togglePass = () => {\r\n        setViewPass(!viewPass);\r\n    };\r\n\r\n    const modalState = useSelector((state) => state.updateModal);\r\n\r\n    const getDataFromChild = (val) => {\r\n        callAgain(val);\r\n    };\r\n\r\n    const callAgain = (data) => {\r\n        setDataCall(data);\r\n        console.log(datacall);\r\n    };\r\n\r\n    const routeSignUp = () => {\r\n        props.history.push(\"/signup\");\r\n    };\r\n\r\n    const getFormData = () => {\r\n        if (Object.keys(loginForm).length > 0) {\r\n            return (\r\n                <div className=\"login-form\">\r\n                    <h2 className=\"login-form-heading\">\r\n                        {loginForm.welcomeText}\r\n                    </h2>\r\n                    <p className=\"login-form-note\">{loginForm.loginNote}</p>\r\n                    <Form>\r\n                        <FormGroup className=\"custom-input-wrapper\">\r\n                            <Label for=\"exampleEmail\">{loginForm.email}</Label>\r\n                            <Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"exampleEmail\"\r\n                                placeholder=\"dodgeui2020@gmail.com\"\r\n                                onChange={(e) =>\r\n                                    handleChange(\"username\", e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-icons\">\r\n                                <i className=\"icon-mail\"></i>\r\n                            </span>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"custom-input-wrapper\">\r\n                            <Label for=\"examplePassword\">\r\n                                {loginForm.password}\r\n                            </Label>\r\n                            <Input\r\n                                type={viewPass ? \"text\" : \"password\"}\r\n                                name=\"password\"\r\n                                id=\"examplePassword\"\r\n                                placeholder=\"***************\"\r\n                                onChange={(e) =>\r\n                                    handleChange(\"password\", e.target.value)\r\n                                }\r\n                            />\r\n                            <span className=\"input-icons\">\r\n                                <i className=\"icon-lock-unlock\"></i>\r\n                            </span>\r\n                            <span\r\n                                className=\"input-icons password\"\r\n                                onClick={() => togglePass()}\r\n                            >\r\n                                <i className=\"icon-outline-visibility_off-24px\"></i>\r\n                            </span>\r\n                        </FormGroup>\r\n                        <FormGroup\r\n                            className=\"d-flex justify-content-between align-items-center mb-5\"\r\n                            check\r\n                        >\r\n                            <Label className=\"tunnin-checkbox\" check>\r\n                                <Input type=\"checkbox\" /> {loginForm.remember}\r\n                            </Label>\r\n                            <Label check>\r\n                                <a\r\n                                    className=\"tunnin-link\"\r\n                                    href=\"#\"\r\n                                    onClick={() => toggle()}\r\n                                >\r\n                                    {loginForm.forgot}\r\n                                </a>\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"text-center\">\r\n                            <Button\r\n                                color=\"primary\"\r\n                                size=\"lg\"\r\n                                onClick={() => userLogin()}\r\n                            >\r\n                                {loginForm.loginBtn}\r\n                            </Button>\r\n                            <p className=\"text-grey mt-3\">\r\n                                Don’t have an account?{\" \"}\r\n                                <a\r\n                                    href=\"#\"\r\n                                    className=\"tunnin-link\"\r\n                                    onClick={() => routeSignUp()}\r\n                                >\r\n                                    SIGNUP\r\n                                </a>\r\n                            </p>\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <ModalPopup\r\n                        isOpen={modal}\r\n                        loginData={modalState}\r\n                        sendData={getDataFromChild}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    let form = {};\r\n\r\n    const handleChange = (field, data) => {\r\n        form[field] = data;\r\n    };\r\n\r\n    const userLogin = () => {\r\n        if (Object.keys(form).length === 2) {\r\n            dispatch(postFetch(get_auth, form));\r\n            cookies.set(\"username\", form[\"username\"], { path: \"/\" });\r\n            cookies.set(\"password\", form[\"password\"], { path: \"/\" });\r\n        }\r\n    };\r\n\r\n    const userInfo = useSelector((state) => state.postFetch);\r\n\r\n    if (userInfo.hasOwnProperty(\"userLogged\")) {\r\n        if (userInfo.userLoginStatus === fine_res) {\r\n            localStorage.setItem(\"userId\", userInfo.userLogged._id);\r\n            props.history.push(notification_route);\r\n        }\r\n\r\n        // cookies.set(\"_id\", userInfo[\"userLogged\"]._id, { path: \"/\" });\r\n        // console.log(userInfo[\"userLogged\"]._id);\r\n    }\r\n\r\n    return <div>{getFormData()}</div>;\r\n}\r\n\r\nexport default withRouter(LoginForm);\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Settings\\Sidebar.jsx",["623","624","625","626","627","628","629","630","631","632","633","634","635","636","637"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Row, Col, Card, CardText, CardBody, CardLink,\r\n    CardTitle, CardSubtitle } from 'reactstrap';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { settingsSidebar } from '../../actions/settingSidebar';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { setting_sidebar } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/notifications.scss';\r\n\r\nfunction SettingSidebar(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatchSidebar();\r\n    }, []);\r\n\r\n\r\n    const dispatchSidebar = () => {\r\n        dispatch(settingsSidebar(setting_sidebar));\r\n    }\r\n\r\n    const getSideList = useSelector(state => state.SettingsSidebar);\r\n    \r\n    const getList=()=> {\r\n        if(getSideList.hasOwnProperty('sidebar')) {\r\n            let sideList = getSideList.sidebar.map((data, index)=> {\r\n                return(\r\n                    <li key={index} className=\"list\" onClick={()=>routeTo(data.route)}>\r\n                        <i className={data.iconClass}></i>{data.title}\r\n                    </li>\r\n                )\r\n            });\r\n            return sideList;\r\n        }\r\n    }\r\n\r\n    const routeTo=(location)=> {\r\n        props.history.push(location);\r\n    }\r\n\r\n    return(\r\n        <div className=\"settings-left-container\">\r\n            <ul>\r\n                {getList()}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(SettingSidebar);","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\userProfile.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Sidebar\\Sidebar.jsx",["638","639","640"],"import React, { useEffect, useState } from 'react';\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { ListNotification } from '../../actions/notification';\r\nimport { getSideBarList } from '../../actions/sidebarList';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Constants\r\nimport { listed_notification, get_sidebar_list } from '../../constants/constants';\r\n\r\n// Styles\r\nimport '../../styles/notifications.scss';\r\n\r\nfunction Sidebar(props) {\r\n\r\n    const [userType, setUserType] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const getNotification = useSelector(state => state.notification);\r\n    const userInfo = useSelector(state => state.postFetch);\r\n\r\n    useEffect(() => {\r\n        dispatchNotification();\r\n        dispatchCheckUser();\r\n    }, []);\r\n\r\n    const dispatchNotification=()=> {\r\n        dispatch(ListNotification(listed_notification));\r\n    }\r\n\r\n    const dispatchCheckUser=()=> {\r\n        if (userInfo.hasOwnProperty('userLogged')) {\r\n            setUserType(userInfo.userLogged.userType);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const routeTo=(location, data)=> {\r\n        props.history.push(location);\r\n    }\r\n\r\n\r\n    if(getNotification.hasOwnProperty('data')) {\r\n        let lists = getNotification.data.sideList;\r\n        if(props.location.pathname === \"/my-earnings\") {\r\n            lists[1].active = true;\r\n        } \r\n        else\r\n        if(props.location.pathname === \"/notification\" || props.location.pathname.includes(\"session\")) {\r\n            lists[0].active = true;\r\n        }\r\n        else \r\n        if(props.location.pathname === \"/payouts\") {\r\n            lists[2].active = true;\r\n        } \r\n        else\r\n        if(props.location.pathname === \"/ratings\") {\r\n            lists[3].active = true;\r\n        }\r\n        else {\r\n            lists[4].active = true;\r\n        }\r\n    }\r\n\r\n    const getSidebar=()=> {\r\n        if(getNotification.hasOwnProperty('data')) {\r\n            let lists = getNotification.data.sideList;\r\n            let sidebar = lists.map((data, index)=> {\r\n                return(\r\n                    <li key={index} className={data.active ? \"list active\": \"list\"} onClick={()=>routeTo(data.route, data)}>\r\n                        <i className={data.icon}></i>{data.name}\r\n                    </li>\r\n                )\r\n            })\r\n            return sidebar;\r\n        }       \r\n    }\r\n\r\n    return(\r\n        <ul>\r\n            {userType === \"user\" ?\r\n                        '' :\r\n                getSidebar()\r\n            }\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(Sidebar);","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\sessionModal.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\addedSession.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\postFetchParam.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\addSession.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\sessionDetail.js",["641"],"import localData from '../Data/Data.json';\r\n\r\n// Constants\r\nimport { session_details, session_past_details } from '../constants/constants';\r\n\r\nexport const sessionDetails=(type)=> {\r\n    if(type === session_details) {\r\n        return {\r\n            type: session_details,\r\n            payload: localData.sessionDetails,\r\n        }\r\n    }\r\n    else {\r\n        let pastData = JSON.parse(JSON.stringify(localData.sessionDetails));\r\n        let btns = pastData.btns;\r\n        for(let i=0; i<btns.length; i++) {\r\n            btns[i].flag = !btns[i].flag;\r\n        }\r\n        return {\r\n            type: session_details,\r\n            payload: pastData\r\n        }\r\n    }\r\n}","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\Card.js",["642","643","644","645","646","647","648","649","650","651","652","653","654","655"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: \"transparent\",\r\n    color: \"#E6E6E6\",\r\n    border: \"none\",\r\n    boxShadow: \"none\",\r\n    borderBottom: \"1px dotted #51527c\",\r\n    borderRadius: \"0\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  sub: {\r\n    color: \"#E6E6E6\",\r\n  },\r\n}));\r\n\r\nexport default function Comment({ title, subTitle, img }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        className={classes.sub}\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {img}\r\n          </Avatar>\r\n        }\r\n        title={title}\r\n        subheader={\r\n          <span style={{ color: \"#b9b9b9e0\" }}>\r\n            {subTitle}\r\n          </span>\r\n        }\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\Toogle.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\header.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\constants\\api_env.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Session\\Popup.jsx",["656"],"import React, { useState } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { sessionModal } from \"../../actions/sessionModal\";\r\nimport { postFetchParams } from \"../../actions/postFetchParam\";\r\n\r\n// Router\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// Constants\r\nimport {\r\n    close_modal,\r\n    add_session_modal,\r\n    edit_session_modal,\r\n    cancelled_session_modal,\r\n    cancel_session_api,\r\n} from \"../../constants/constants\";\r\n\r\nimport done from \"../../images/done.png\";\r\n\r\nfunction Popup(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [cancelAction, cancelled] = useState(\"\");\r\n\r\n    const modalOperate = (item) => {\r\n        if (item.hasOwnProperty(\"action\")) {\r\n            if (item.action === \"yes\") {\r\n                dispatch(sessionModal(close_modal));\r\n                cancelled(\"yes\");\r\n                dispatch(sessionModal(cancelled_session_modal));\r\n                let ids = props.ids;\r\n                let sessionId = ids._id;\r\n                let trainerId = ids.trainerId;\r\n                console.log(\"Props................................: \", props);\r\n                dispatch(\r\n                    postFetchParams(\r\n                        cancel_session_api,\r\n                        sessionId + \"/\" + trainerId\r\n                    )\r\n                );\r\n            } else {\r\n                dispatch(sessionModal(close_modal));\r\n            }\r\n        } else if (item.hasOwnProperty(\"route\")) {\r\n            dispatch(sessionModal(close_modal));\r\n            props.history.push(item.route);\r\n        } else {\r\n            dispatch(sessionModal(close_modal));\r\n            if (\r\n                props.action_type === add_session_modal ||\r\n                props.action_type === edit_session_modal\r\n            ) {\r\n                let routeTo = item.route;\r\n                console.log(\"Route TPO: \", routeTo);\r\n                props.history.push(routeTo);\r\n            }\r\n        }\r\n    };\r\n\r\n    const getButton = (data) => {\r\n        let btn = data.btn.map((item, index) => {\r\n            return (\r\n                <Button\r\n                    color=\"primary\"\r\n                    key={index}\r\n                    onClick={() => modalOperate(item)}\r\n                >\r\n                    {item.title}\r\n                </Button>\r\n            );\r\n        });\r\n        return btn;\r\n    };\r\n\r\n    const popup = useSelector((state) => state.sessionModal);\r\n\r\n    const getModal = () => {\r\n        return (\r\n            <Modal\r\n                className=\"tunnin-popup modal-dialog-centered\"\r\n                isOpen={\r\n                    popup.hasOwnProperty(\"popUp\")\r\n                        ? popup.popUp\r\n                        : props.modalState.popUp\r\n                }\r\n            >\r\n                <div className=\"text-center\">\r\n                    <img src={done} alt=\"Reset Password\" />\r\n                </div>\r\n                <ModalHeader className=\"border-0 justify-content-center pb-0\">\r\n                    {popup.hasOwnProperty(\"title\")\r\n                        ? popup.title\r\n                        : props.modalState.modalState.title}\r\n                </ModalHeader>\r\n                <ModalBody className=\"justify-content-center\">\r\n                    <p className=\"text-center opacity-69\">\r\n                        {popup.hasOwnProperty(\"content\")\r\n                            ? popup.content\r\n                            : props.modalState.modalState.content}\r\n                    </p>\r\n                </ModalBody>\r\n                <ModalFooter className=\"border-0 justify-content-center\">\r\n                    {getButton(\r\n                        popup.hasOwnProperty(\"btn\")\r\n                            ? popup.btn\r\n                            : props.modalState.modalState\r\n                    )}\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n    return <div>{getModal()}</div>;\r\n}\r\n\r\nexport default withRouter(Popup);\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\earningDetails.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\ratingReview.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\connectBank.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\payouts.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Agora\\Call.js",["657","658","659","660","661","662"],"import React, { useEffect, useState } from 'react';\r\nimport AgoraRTC from \"agora-rtc-sdk\";\r\n\r\nimport {\r\n    Button\r\n} from 'reactstrap';\r\n\r\n// Redux\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// Constants\r\nimport { agora_app_id, audience_type, host_type, trainer_user_type } from '../../constants/constants';\r\n\r\nvar rtc = {\r\n    client: null,\r\n    joined: false,\r\n    published: false,\r\n    localStream: null,\r\n    remoteStreams: [],\r\n    params: {}\r\n};\r\n\r\n// Options for joining a channel\r\nvar option = {\r\n    appID: agora_app_id,\r\n    //channel: \"test\",\r\n    uid: null,\r\n    //token: \"0062aded76d082d42acb12eb2918e3c1e74IAAOA5c5BYWXYPtNBhUNVTMtmMWcFsNdJXIkMiSb5rneUQx+f9gAAAAAEAAeXT+ce3ZrYAEAAQB9dmtg\",\r\n    //key: \"0061c3aa8a838d14cd99bd626ab94291542IACP66wCBtKScftiDPTVJjwl85q+wUM3vwwQ5XYIu8bNpg5g9dIAAAAAIgDnqtWtQc5oYAQAAQDRimdgAgDRimdgAwDRimdgBADRimdg\",\r\n    //secret: \"65af3512430e4ae795ef022d2459aff1\"\r\n}\r\n\r\nfunction leaveEventHost(params) {\r\n    rtc.client.unpublish(rtc.localStream, function (err) {\r\n        console.log(\"publish failed\");\r\n        console.error(err);\r\n    })\r\n    rtc.client.leave(function (ev) {\r\n        console.log(ev)\r\n    })\r\n}\r\n\r\nfunction leaveEventAudience(params) {\r\n    rtc.client.leave(function () {\r\n        console.log(\"client leaves channel\");\r\n        //……\r\n    }, function (err) {\r\n        console.log(\"client leave failed \", err);\r\n        //error handling\r\n    })\r\n}\r\n\r\nfunction Call(props) {\r\n\r\n    const [videoStatus, setVideoStatus] = useState(true);\r\n\r\n    console.log(\"Call Props: \", props);\r\n\r\n    useEffect(()=>{\r\n        setVideoStatus(props.videoStatus);\r\n    }, []);\r\n\r\n    const agora = useSelector(state => state.getApi);\r\n\r\n    const userLogged = useSelector(state => state.postFetch);\r\n\r\n    const joinChannel = (role) => {\r\n        // Create a client\r\n        rtc.client = AgoraRTC.createClient({ mode: \"live\", codec: \"h264\" });\r\n        rtc.client.setLowStreamParameter({\r\n            width: 3840,\r\n            height: 2160,\r\n            framerate: 60,\r\n            bitrate: 6500,\r\n        });\r\n        //rtc.client.setEncoderConfiguration({ width: 1280, height: 720 }).then(() => { /** ... **/ })\r\n        console.log(\"Role: \", role);\r\n        // Initialize the client\r\n        rtc.client.init(option.appID, function () {\r\n            console.log(\"init success\");\r\n\r\n            // Join a channel\r\n            rtc.client.join(option.token ?\r\n                option.token : null,\r\n                option.channel, option.uid ? +option.uid : null, function (uid) {\r\n                    console.log(\"join channel: \" + option.channel + \" success, uid: \" + uid);\r\n                    rtc.params.uid = uid;\r\n                    if (role === host_type) {\r\n                        rtc.client.setClientRole(host_type);\r\n                        \r\n                        if(props.disableVideo === false) {\r\n                            AgoraRTC.createStream({\r\n                                streamID: rtc.params.uid,\r\n                                audio: true,\r\n                                video: false,\r\n                                screen: false,\r\n                                width: 3840,\r\n                                height: 2160,\r\n                                framerate: 60,\r\n                                bitrate: 6500,\r\n                            })\r\n                        }\r\n\r\n                        // Create a local stream\r\n                        rtc.localStream = AgoraRTC.createStream({\r\n                            streamID: rtc.params.uid,\r\n                            audio: true,\r\n                            video: props.disableVideo,\r\n                            screen: false,\r\n                            width: 3840,\r\n                            height: 2160,\r\n                            framerate: 60,\r\n                            bitrate: 6500,\r\n                        });\r\n\r\n                        console.log(\"rtc.stream: \", rtc.localStream.video);\r\n\r\n                        //rtc.localStream.setEncoderConfiguration({ width: 1280, height: 720 }).then(() => { /** ... **/ })\r\n\r\n                        // Initialize the local stream\r\n                        rtc.localStream.init(function () {\r\n                            console.log(\"init local stream success\");\r\n                            rtc.localStream.play(\"local_stream\");\r\n                            rtc.client.publish(rtc.localStream, function (err) {\r\n                                console.log(\"publish failed\");\r\n                                console.error(err);\r\n                            })\r\n                        }, function (err) {\r\n                            console.error(\"init local stream failed \", err);\r\n                        });\r\n\r\n                        rtc.client.on(\"connection-state-change\", function (evt) {\r\n                            console.log(\"audience\", evt)\r\n                        })\r\n\r\n\r\n                    }\r\n                    if (role === audience_type) {\r\n\r\n                        rtc.client.on(\"connection-state-change\", function (evt) {\r\n                            console.log(\"audience\", evt)\r\n                        })\r\n\r\n                        rtc.client.on(\"stream-added\", function (evt) {\r\n                            var remoteStream = evt.stream;\r\n                            var id = remoteStream.getId();\r\n                            if (id !== rtc.params.uid) {\r\n                                rtc.client.subscribe(remoteStream, function (err) {\r\n                                    console.log(\"stream subscribe failed\", err);\r\n                                })\r\n                            }\r\n                            console.log('stream-added remote-uid: ', id);\r\n                        });\r\n\r\n                        rtc.client.on(\"stream-removed\", function (evt) {\r\n                            var remoteStream = evt.stream;\r\n                            var id = remoteStream.getId();\r\n                            console.log('stream-removed remote-uid: ', id);\r\n                        });\r\n\r\n                        rtc.client.on(\"stream-subscribed\", function (evt) {\r\n                            var remoteStream = evt.stream;\r\n                            var id = remoteStream.getId();\r\n                            remoteStream.play(\"remote_video_\");\r\n                            console.log('stream-subscribed remote-uid: ', id);\r\n                        })\r\n\r\n                        rtc.client.on(\"stream-unsubscribed\", function (evt) {\r\n                            var remoteStream = evt.stream;\r\n                            var id = remoteStream.getId();\r\n                            remoteStream.pause(\"remote_video_\");\r\n                            console.log('stream-unsubscribed remote-uid: ', id);\r\n                        })\r\n                    }\r\n                }, function (err) {\r\n                    console.error(\"client join failed\", err)\r\n                })\r\n\r\n        }, (err) => {\r\n            console.error(err);\r\n        });\r\n    }\r\n\r\n    const checkUserType = () => {\r\n        if (userLogged.hasOwnProperty('userLogged')) {\r\n            let { userType } = userLogged.userLogged;\r\n            console.log(\"User Logged:\", userType);\r\n            if (userType === trainer_user_type) {\r\n                joinChannel(host_type);\r\n            }\r\n            else {\r\n                joinChannel(host_type)\r\n            }\r\n        }\r\n    }\r\n\r\n    if (agora.hasOwnProperty('agoraObj')) {\r\n        let { data } = agora.agoraObj;\r\n        option.token = data.Token;\r\n        option.channel = data.ChannelName;\r\n        checkUserType();\r\n    }\r\n\r\n    const disableVideo=()=> {\r\n        AgoraRTC.createStream({\r\n            streamID: rtc.params.uid,\r\n            audio: true,\r\n            video: false,\r\n            screen: false,\r\n            width: 3840,\r\n            height: 2160,\r\n            framerate: 60,\r\n            bitrate: 6500,\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"local_stream\" className=\"local_stream\" style={{ width: \"1080px\", height: \"720px\" }}></div>\r\n            {/* <h1>Hell</h1> */}\r\n            {/* <div\r\n                id=\"remote_video_\"\r\n                style={{ width: \"400px\", height: \"400px\" }}\r\n            /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Call;","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\cancelPolicy.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\signupProfile.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\updateModal.js",["663","664","665","666"],"import axios from 'axios';\r\nimport localData from '../Data/Data.json';\r\n\r\nexport const updateModal = (typeModal) => {\r\n    if(typeModal == 'forgot') {\r\n        console.log(\"Working: \", typeModal);\r\n        return {\r\n            type: 'forgotPassword',\r\n            payload: localData.forgotPassword\r\n        }\r\n    }\r\n    else if(typeModal == 'reset') {\r\n        return {\r\n            type: 'resetPassword',\r\n            payload: localData.resetPassword\r\n        }\r\n    }\r\n    else if(typeModal == 'close') {\r\n        return {\r\n            type: 'closeModal',\r\n            payload: localData.signUp\r\n        }\r\n    }\r\n}","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\uploadedFile.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\profileFace.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\Signup.js",["667"],"import localData from '../Data/Data.json';\r\n\r\n// Constants\r\nimport { sign_up, toggle_pass } from '../constants/constants';\r\n\r\nexport const Signup=(type, data)=> {\r\n    if(type === sign_up) {\r\n        return {\r\n            type: sign_up,\r\n            payload: localData.createAccount\r\n        }\r\n    }\r\n    else {\r\n        console.log(\"Will Toggle\");\r\n    }\r\n}","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\signupBank.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\settingSidebar.js",[],"C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\actions\\sidebarList.js",["668"],"import localData from '../Data/Data.json';\r\n\r\n// Constants\r\nimport { trainer_user_type } from '../constants/constants';\r\n\r\nexport const getSideBarList=(type)=> {\r\n    if(type == trainer_user_type) {        \r\n        let data = JSON.parse(JSON.stringify(localData.sideBarList));\r\n        console.log(\"Type: \", type);\r\n        return {\r\n            type: trainer_user_type,\r\n            payload: data,\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\moham\\Desktop\\tunnin\\tunnin-frontend\\src\\components\\Login\\ModalPopup.jsx",["669","670"],"import React from 'react';\r\nimport { Form, FormGroup, Label, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport verify from '../../images/verify-email.png';\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Action\r\nimport { updateModal } from '../../actions/updateModal';\r\n\r\n// Router\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Style\r\nimport '../../styles/login.scss';\r\n\r\n\r\nfunction ModalPopup(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const updateData = () => {\r\n        dispatch(updateModal('reset'));\r\n    }\r\n\r\n    const modalState = useSelector(state => state.updateModal);\r\n\r\n    const closeModal=()=> {\r\n        dispatch(updateModal('close'));\r\n        props.history.push('/create-account');\r\n    }\r\n\r\n    \r\n\r\n    const handleChange=(data)=> {\r\n        props.sendData(data);\r\n    }\r\n\r\n    const getModal = () => {\r\n        if (Object.keys(props.loginData).length > 0) {\r\n            let data = props.loginData.modalState;\r\n            if(props.loginData.popUp == false) {\r\n                //props.onChange(props.loginData);\r\n                handleChange(props.loginData);\r\n            }\r\n            return (\r\n                <Modal className=\"forgot-password-popup modal-dialog-centered\" isOpen={props.loginData.popUp} onChange={handleChange}>\r\n                    {data.hasOwnProperty('text') ?\r\n                    <div className=\"text-center\">\r\n                        <img src={verify} alt=\"Reset Password\" />\r\n                    </div>\r\n                    :\r\n                    <div></div>\r\n                    }\r\n                    <ModalHeader className=\"border-0 justify-content-center pb-0\" >{data.heading}</ModalHeader>\r\n                    <ModalBody className=\"pt-1\">\r\n                        <Form>\r\n                            {data.hasOwnProperty('text') ?\r\n                                <FormGroup>\r\n                                    <p className=\"text-center verify-text\">\r\n                                        {data.text}\r\n                                    </p>\r\n                                </FormGroup>\r\n                                :\r\n                                <FormGroup className=\"custom-input-wrapper\">\r\n                                    <p className=\"text-center mb-5\">Please enter your email address</p>\r\n                                    <Label for=\"exampleEmail\">{data.email}</Label>\r\n                                    <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"dodgeui2020@gmail.com\" />\r\n                                    <span className=\"input-icons\"><i className=\"icon-mail\"></i></span>\r\n                                </FormGroup>\r\n\r\n                            }\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter className=\"border-0 justify-content-center\">\r\n                        {data.hasOwnProperty('text') ?\r\n                            <Button color=\"primary\" onClick={() => closeModal()}>Ok</Button>\r\n                            :\r\n                            <Button color=\"primary\" onClick={() => updateData()}>Send</Button>\r\n                        }\r\n                    </ModalFooter>\r\n                </Modal>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {getModal()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ModalPopup);",{"ruleId":"671","replacedBy":"672"},{"ruleId":"673","replacedBy":"674"},{"ruleId":"675","severity":1,"message":"676","line":4,"column":8,"nodeType":"677","messageId":"678","endLine":4,"endColumn":12},{"ruleId":"675","severity":1,"message":"679","line":1,"column":17,"nodeType":"677","messageId":"678","endLine":1,"endColumn":26},{"ruleId":"675","severity":1,"message":"680","line":3,"column":23,"nodeType":"677","messageId":"678","endLine":3,"endColumn":27},{"ruleId":"675","severity":1,"message":"681","line":3,"column":29,"nodeType":"677","messageId":"678","endLine":3,"endColumn":37},{"ruleId":"675","severity":1,"message":"682","line":3,"column":39,"nodeType":"677","messageId":"678","endLine":3,"endColumn":48},{"ruleId":"675","severity":1,"message":"683","line":7,"column":23,"nodeType":"677","messageId":"678","endLine":7,"endColumn":34},{"ruleId":"675","severity":1,"message":"684","line":10,"column":10,"nodeType":"677","messageId":"678","endLine":10,"endColumn":22},{"ruleId":"675","severity":1,"message":"685","line":24,"column":8,"nodeType":"677","messageId":"678","endLine":24,"endColumn":23},{"ruleId":"675","severity":1,"message":"686","line":32,"column":11,"nodeType":"677","messageId":"678","endLine":32,"endColumn":19},{"ruleId":"675","severity":1,"message":"687","line":33,"column":12,"nodeType":"677","messageId":"678","endLine":33,"endColumn":21},{"ruleId":"675","severity":1,"message":"688","line":33,"column":23,"nodeType":"677","messageId":"678","endLine":33,"endColumn":35},{"ruleId":"675","severity":1,"message":"689","line":1,"column":8,"nodeType":"677","messageId":"678","endLine":1,"endColumn":13},{"ruleId":"675","severity":1,"message":"690","line":11,"column":10,"nodeType":"677","messageId":"678","endLine":11,"endColumn":22},{"ruleId":"675","severity":1,"message":"691","line":12,"column":10,"nodeType":"677","messageId":"678","endLine":12,"endColumn":20},{"ruleId":"675","severity":1,"message":"692","line":28,"column":8,"nodeType":"677","messageId":"678","endLine":28,"endColumn":25},{"ruleId":"675","severity":1,"message":"693","line":94,"column":11,"nodeType":"677","messageId":"678","endLine":94,"endColumn":25},{"ruleId":"675","severity":1,"message":"694","line":48,"column":10,"nodeType":"677","messageId":"678","endLine":48,"endColumn":15},{"ruleId":"675","severity":1,"message":"695","line":58,"column":21,"nodeType":"677","messageId":"678","endLine":58,"endColumn":29},{"ruleId":"696","severity":1,"message":"697","line":111,"column":6,"nodeType":"698","endLine":111,"endColumn":52,"suggestions":"699"},{"ruleId":"696","severity":1,"message":"700","line":111,"column":14,"nodeType":"701","endLine":111,"endColumn":51},{"ruleId":"675","severity":1,"message":"702","line":274,"column":9,"nodeType":"677","messageId":"678","endLine":274,"endColumn":18},{"ruleId":"675","severity":1,"message":"703","line":283,"column":9,"nodeType":"677","messageId":"678","endLine":283,"endColumn":22},{"ruleId":"675","severity":1,"message":"704","line":10,"column":12,"nodeType":"677","messageId":"678","endLine":10,"endColumn":19},{"ruleId":"696","severity":1,"message":"705","line":16,"column":8,"nodeType":"698","endLine":16,"endColumn":10,"suggestions":"706"},{"ruleId":"696","severity":1,"message":"707","line":42,"column":6,"nodeType":"698","endLine":42,"endColumn":8,"suggestions":"708"},{"ruleId":"709","severity":1,"message":"710","line":68,"column":11,"nodeType":"677","messageId":"711","endLine":68,"endColumn":25},{"ruleId":"675","severity":1,"message":"712","line":1,"column":17,"nodeType":"677","messageId":"678","endLine":1,"endColumn":25},{"ruleId":"675","severity":1,"message":"713","line":3,"column":10,"nodeType":"677","messageId":"678","endLine":3,"endColumn":13},{"ruleId":"675","severity":1,"message":"714","line":3,"column":15,"nodeType":"677","messageId":"678","endLine":3,"endColumn":18},{"ruleId":"675","severity":1,"message":"715","line":3,"column":27,"nodeType":"677","messageId":"678","endLine":3,"endColumn":32},{"ruleId":"696","severity":1,"message":"716","line":28,"column":8,"nodeType":"698","endLine":28,"endColumn":10,"suggestions":"717"},{"ruleId":"675","severity":1,"message":"718","line":14,"column":10,"nodeType":"677","messageId":"678","endLine":14,"endColumn":19},{"ruleId":"675","severity":1,"message":"719","line":33,"column":10,"nodeType":"677","messageId":"678","endLine":33,"endColumn":17},{"ruleId":"696","severity":1,"message":"720","line":46,"column":6,"nodeType":"698","endLine":46,"endColumn":8,"suggestions":"721"},{"ruleId":"696","severity":1,"message":"722","line":31,"column":8,"nodeType":"698","endLine":31,"endColumn":10,"suggestions":"723"},{"ruleId":"675","severity":1,"message":"712","line":1,"column":17,"nodeType":"677","messageId":"678","endLine":1,"endColumn":25},{"ruleId":"675","severity":1,"message":"715","line":3,"column":37,"nodeType":"677","messageId":"678","endLine":3,"endColumn":42},{"ruleId":"675","severity":1,"message":"724","line":8,"column":10,"nodeType":"677","messageId":"678","endLine":8,"endColumn":22},{"ruleId":"696","severity":1,"message":"725","line":34,"column":8,"nodeType":"698","endLine":34,"endColumn":10,"suggestions":"726"},{"ruleId":"696","severity":1,"message":"727","line":37,"column":8,"nodeType":"698","endLine":37,"endColumn":10,"suggestions":"728"},{"ruleId":"675","severity":1,"message":"729","line":26,"column":8,"nodeType":"677","messageId":"678","endLine":26,"endColumn":10},{"ruleId":"696","severity":1,"message":"730","line":35,"column":8,"nodeType":"698","endLine":35,"endColumn":10,"suggestions":"731"},{"ruleId":"675","severity":1,"message":"732","line":8,"column":40,"nodeType":"677","messageId":"678","endLine":8,"endColumn":51},{"ruleId":"696","severity":1,"message":"733","line":31,"column":8,"nodeType":"698","endLine":31,"endColumn":10,"suggestions":"734"},{"ruleId":"675","severity":1,"message":"680","line":3,"column":22,"nodeType":"677","messageId":"678","endLine":3,"endColumn":26},{"ruleId":"675","severity":1,"message":"681","line":3,"column":28,"nodeType":"677","messageId":"678","endLine":3,"endColumn":36},{"ruleId":"675","severity":1,"message":"682","line":4,"column":5,"nodeType":"677","messageId":"678","endLine":4,"endColumn":14},{"ruleId":"696","severity":1,"message":"735","line":37,"column":8,"nodeType":"698","endLine":37,"endColumn":10,"suggestions":"736"},{"ruleId":"675","severity":1,"message":"712","line":1,"column":17,"nodeType":"677","messageId":"678","endLine":1,"endColumn":25},{"ruleId":"675","severity":1,"message":"737","line":3,"column":5,"nodeType":"677","messageId":"678","endLine":3,"endColumn":11},{"ruleId":"675","severity":1,"message":"738","line":3,"column":13,"nodeType":"677","messageId":"678","endLine":3,"endColumn":17},{"ruleId":"675","severity":1,"message":"739","line":3,"column":19,"nodeType":"677","messageId":"678","endLine":3,"endColumn":28},{"ruleId":"675","severity":1,"message":"740","line":3,"column":30,"nodeType":"677","messageId":"678","endLine":3,"endColumn":35},{"ruleId":"675","severity":1,"message":"715","line":3,"column":37,"nodeType":"677","messageId":"678","endLine":3,"endColumn":42},{"ruleId":"675","severity":1,"message":"741","line":3,"column":70,"nodeType":"677","messageId":"678","endLine":3,"endColumn":78},{"ruleId":"675","severity":1,"message":"742","line":3,"column":80,"nodeType":"677","messageId":"678","endLine":3,"endColumn":88},{"ruleId":"675","severity":1,"message":"743","line":4,"column":16,"nodeType":"677","messageId":"678","endLine":4,"endColumn":28},{"ruleId":"675","severity":1,"message":"729","line":27,"column":8,"nodeType":"677","messageId":"678","endLine":27,"endColumn":10},{"ruleId":"696","severity":1,"message":"744","line":37,"column":8,"nodeType":"698","endLine":37,"endColumn":10,"suggestions":"745"},{"ruleId":"675","severity":1,"message":"746","line":54,"column":17,"nodeType":"677","messageId":"678","endLine":54,"endColumn":28},{"ruleId":"747","severity":1,"message":"748","line":189,"column":66,"nodeType":"749","messageId":"750","endLine":189,"endColumn":68},{"ruleId":"747","severity":1,"message":"751","line":200,"column":66,"nodeType":"749","messageId":"750","endLine":200,"endColumn":68},{"ruleId":"696","severity":1,"message":"752","line":35,"column":8,"nodeType":"698","endLine":35,"endColumn":10,"suggestions":"753"},{"ruleId":"675","severity":1,"message":"754","line":26,"column":8,"nodeType":"677","messageId":"678","endLine":26,"endColumn":11},{"ruleId":"675","severity":1,"message":"755","line":27,"column":8,"nodeType":"677","messageId":"678","endLine":27,"endColumn":10},{"ruleId":"675","severity":1,"message":"756","line":28,"column":8,"nodeType":"677","messageId":"678","endLine":28,"endColumn":16},{"ruleId":"696","severity":1,"message":"757","line":42,"column":8,"nodeType":"698","endLine":42,"endColumn":10,"suggestions":"758"},{"ruleId":"759","severity":1,"message":"760","line":148,"column":33,"nodeType":"761","endLine":148,"endColumn":142},{"ruleId":"675","severity":1,"message":"762","line":39,"column":5,"nodeType":"677","messageId":"678","endLine":39,"endColumn":21},{"ruleId":"675","severity":1,"message":"763","line":65,"column":12,"nodeType":"677","messageId":"678","endLine":65,"endColumn":20},{"ruleId":"696","severity":1,"message":"764","line":84,"column":8,"nodeType":"698","endLine":84,"endColumn":10,"suggestions":"765"},{"ruleId":"675","severity":1,"message":"766","line":453,"column":11,"nodeType":"677","messageId":"678","endLine":453,"endColumn":21},{"ruleId":"675","severity":1,"message":"767","line":696,"column":11,"nodeType":"677","messageId":"678","endLine":696,"endColumn":21},{"ruleId":"696","severity":1,"message":"768","line":57,"column":8,"nodeType":"698","endLine":57,"endColumn":10,"suggestions":"769"},{"ruleId":"675","severity":1,"message":"770","line":363,"column":13,"nodeType":"677","messageId":"678","endLine":363,"endColumn":29},{"ruleId":"675","severity":1,"message":"771","line":31,"column":8,"nodeType":"677","messageId":"678","endLine":31,"endColumn":17},{"ruleId":"696","severity":1,"message":"772","line":42,"column":8,"nodeType":"698","endLine":42,"endColumn":10,"suggestions":"773"},{"ruleId":"696","severity":1,"message":"774","line":39,"column":8,"nodeType":"698","endLine":39,"endColumn":10,"suggestions":"775"},{"ruleId":"675","severity":1,"message":"712","line":1,"column":17,"nodeType":"677","messageId":"678","endLine":1,"endColumn":25},{"ruleId":"675","severity":1,"message":"737","line":3,"column":5,"nodeType":"677","messageId":"678","endLine":3,"endColumn":11},{"ruleId":"696","severity":1,"message":"776","line":32,"column":8,"nodeType":"698","endLine":32,"endColumn":10,"suggestions":"777"},{"ruleId":"675","severity":1,"message":"778","line":38,"column":11,"nodeType":"677","messageId":"678","endLine":38,"endColumn":22},{"ruleId":"675","severity":1,"message":"771","line":31,"column":8,"nodeType":"677","messageId":"678","endLine":31,"endColumn":17},{"ruleId":"675","severity":1,"message":"779","line":35,"column":12,"nodeType":"677","messageId":"678","endLine":35,"endColumn":25},{"ruleId":"675","severity":1,"message":"780","line":35,"column":27,"nodeType":"677","messageId":"678","endLine":35,"endColumn":41},{"ruleId":"675","severity":1,"message":"781","line":46,"column":12,"nodeType":"677","messageId":"678","endLine":46,"endColumn":22},{"ruleId":"675","severity":1,"message":"782","line":46,"column":24,"nodeType":"677","messageId":"678","endLine":46,"endColumn":37},{"ruleId":"696","severity":1,"message":"772","line":53,"column":8,"nodeType":"698","endLine":53,"endColumn":10,"suggestions":"783"},{"ruleId":"696","severity":1,"message":"776","line":29,"column":8,"nodeType":"698","endLine":29,"endColumn":10,"suggestions":"784"},{"ruleId":"675","severity":1,"message":"712","line":1,"column":17,"nodeType":"677","messageId":"678","endLine":1,"endColumn":25},{"ruleId":"675","severity":1,"message":"737","line":3,"column":5,"nodeType":"677","messageId":"678","endLine":3,"endColumn":11},{"ruleId":"696","severity":1,"message":"776","line":32,"column":8,"nodeType":"698","endLine":32,"endColumn":10,"suggestions":"785"},{"ruleId":"675","severity":1,"message":"786","line":39,"column":11,"nodeType":"677","messageId":"678","endLine":39,"endColumn":28},{"ruleId":"675","severity":1,"message":"738","line":2,"column":18,"nodeType":"677","messageId":"678","endLine":2,"endColumn":22},{"ruleId":"675","severity":1,"message":"787","line":30,"column":7,"nodeType":"677","messageId":"678","endLine":30,"endColumn":21},{"ruleId":"675","severity":1,"message":"788","line":52,"column":11,"nodeType":"677","messageId":"678","endLine":52,"endColumn":14},{"ruleId":"747","severity":1,"message":"751","line":57,"column":25,"nodeType":"749","messageId":"750","endLine":57,"endColumn":27},{"ruleId":"696","severity":1,"message":"789","line":82,"column":6,"nodeType":"698","endLine":82,"endColumn":15,"suggestions":"790"},{"ruleId":"675","severity":1,"message":"712","line":1,"column":17,"nodeType":"677","messageId":"678","endLine":1,"endColumn":25},{"ruleId":"675","severity":1,"message":"737","line":3,"column":5,"nodeType":"677","messageId":"678","endLine":3,"endColumn":11},{"ruleId":"696","severity":1,"message":"776","line":38,"column":8,"nodeType":"698","endLine":38,"endColumn":10,"suggestions":"791"},{"ruleId":"747","severity":1,"message":"751","line":7,"column":13,"nodeType":"749","messageId":"750","endLine":7,"endColumn":15},{"ruleId":"747","severity":1,"message":"751","line":13,"column":18,"nodeType":"749","messageId":"750","endLine":13,"endColumn":20},{"ruleId":"792","severity":1,"message":"793","line":11,"column":21,"nodeType":"761","endLine":11,"endColumn":45},{"ruleId":"792","severity":1,"message":"793","line":14,"column":21,"nodeType":"761","endLine":14,"endColumn":45},{"ruleId":"792","severity":1,"message":"793","line":17,"column":21,"nodeType":"761","endLine":17,"endColumn":45},{"ruleId":"675","severity":1,"message":"794","line":2,"column":25,"nodeType":"677","messageId":"678","endLine":2,"endColumn":36},{"ruleId":"675","severity":1,"message":"795","line":18,"column":11,"nodeType":"677","messageId":"678","endLine":18,"endColumn":17},{"ruleId":"675","severity":1,"message":"687","line":21,"column":12,"nodeType":"677","messageId":"678","endLine":21,"endColumn":21},{"ruleId":"675","severity":1,"message":"688","line":21,"column":23,"nodeType":"677","messageId":"678","endLine":21,"endColumn":35},{"ruleId":"696","severity":1,"message":"796","line":25,"column":8,"nodeType":"698","endLine":25,"endColumn":10,"suggestions":"797"},{"ruleId":"696","severity":1,"message":"798","line":78,"column":8,"nodeType":"698","endLine":78,"endColumn":60,"suggestions":"799"},{"ruleId":"696","severity":1,"message":"700","line":78,"column":9,"nodeType":"701","endLine":78,"endColumn":46},{"ruleId":"675","severity":1,"message":"800","line":10,"column":21,"nodeType":"677","messageId":"678","endLine":10,"endColumn":37},{"ruleId":"675","severity":1,"message":"801","line":15,"column":12,"nodeType":"677","messageId":"678","endLine":15,"endColumn":18},{"ruleId":"675","severity":1,"message":"802","line":15,"column":20,"nodeType":"677","messageId":"678","endLine":15,"endColumn":29},{"ruleId":"675","severity":1,"message":"803","line":3,"column":10,"nodeType":"677","messageId":"678","endLine":3,"endColumn":19},{"ruleId":"747","severity":1,"message":"751","line":7,"column":13,"nodeType":"749","messageId":"750","endLine":7,"endColumn":15},{"ruleId":"747","severity":1,"message":"751","line":25,"column":13,"nodeType":"749","messageId":"750","endLine":25,"endColumn":15},{"ruleId":"675","severity":1,"message":"804","line":3,"column":10,"nodeType":"677","messageId":"678","endLine":3,"endColumn":24},{"ruleId":"675","severity":1,"message":"805","line":3,"column":26,"nodeType":"677","messageId":"678","endLine":3,"endColumn":44},{"ruleId":"675","severity":1,"message":"806","line":2,"column":10,"nodeType":"677","messageId":"678","endLine":2,"endColumn":19},{"ruleId":"696","severity":1,"message":"807","line":36,"column":8,"nodeType":"698","endLine":36,"endColumn":10,"suggestions":"808"},{"ruleId":"809","severity":1,"message":"810","line":128,"column":33,"nodeType":"761","endLine":132,"endColumn":34},{"ruleId":"809","severity":1,"message":"810","line":147,"column":33,"nodeType":"761","endLine":151,"endColumn":34},{"ruleId":"675","severity":1,"message":"712","line":1,"column":17,"nodeType":"677","messageId":"678","endLine":1,"endColumn":25},{"ruleId":"675","severity":1,"message":"737","line":2,"column":10,"nodeType":"677","messageId":"678","endLine":2,"endColumn":16},{"ruleId":"675","severity":1,"message":"738","line":2,"column":18,"nodeType":"677","messageId":"678","endLine":2,"endColumn":22},{"ruleId":"675","severity":1,"message":"739","line":2,"column":24,"nodeType":"677","messageId":"678","endLine":2,"endColumn":33},{"ruleId":"675","severity":1,"message":"740","line":2,"column":35,"nodeType":"677","messageId":"678","endLine":2,"endColumn":40},{"ruleId":"675","severity":1,"message":"715","line":2,"column":42,"nodeType":"677","messageId":"678","endLine":2,"endColumn":47},{"ruleId":"675","severity":1,"message":"713","line":2,"column":49,"nodeType":"677","messageId":"678","endLine":2,"endColumn":52},{"ruleId":"675","severity":1,"message":"714","line":2,"column":54,"nodeType":"677","messageId":"678","endLine":2,"endColumn":57},{"ruleId":"675","severity":1,"message":"680","line":2,"column":59,"nodeType":"677","messageId":"678","endLine":2,"endColumn":63},{"ruleId":"675","severity":1,"message":"681","line":2,"column":65,"nodeType":"677","messageId":"678","endLine":2,"endColumn":73},{"ruleId":"675","severity":1,"message":"741","line":2,"column":75,"nodeType":"677","messageId":"678","endLine":2,"endColumn":83},{"ruleId":"675","severity":1,"message":"742","line":2,"column":85,"nodeType":"677","messageId":"678","endLine":2,"endColumn":93},{"ruleId":"675","severity":1,"message":"682","line":3,"column":5,"nodeType":"677","messageId":"678","endLine":3,"endColumn":14},{"ruleId":"675","severity":1,"message":"743","line":3,"column":16,"nodeType":"677","messageId":"678","endLine":3,"endColumn":28},{"ruleId":"696","severity":1,"message":"811","line":26,"column":8,"nodeType":"698","endLine":26,"endColumn":10,"suggestions":"812"},{"ruleId":"675","severity":1,"message":"813","line":8,"column":10,"nodeType":"677","messageId":"678","endLine":8,"endColumn":24},{"ruleId":"675","severity":1,"message":"814","line":14,"column":31,"nodeType":"677","messageId":"678","endLine":14,"endColumn":47},{"ruleId":"696","severity":1,"message":"815","line":30,"column":8,"nodeType":"698","endLine":30,"endColumn":10,"suggestions":"816"},{"ruleId":"675","severity":1,"message":"817","line":4,"column":27,"nodeType":"677","messageId":"678","endLine":4,"endColumn":47},{"ruleId":"675","severity":1,"message":"818","line":3,"column":8,"nodeType":"677","messageId":"678","endLine":3,"endColumn":12},{"ruleId":"675","severity":1,"message":"819","line":6,"column":8,"nodeType":"677","messageId":"678","endLine":6,"endColumn":17},{"ruleId":"675","severity":1,"message":"820","line":7,"column":8,"nodeType":"677","messageId":"678","endLine":7,"endColumn":19},{"ruleId":"675","severity":1,"message":"821","line":8,"column":8,"nodeType":"677","messageId":"678","endLine":8,"endColumn":19},{"ruleId":"675","severity":1,"message":"822","line":9,"column":8,"nodeType":"677","messageId":"678","endLine":9,"endColumn":16},{"ruleId":"675","severity":1,"message":"823","line":11,"column":8,"nodeType":"677","messageId":"678","endLine":11,"endColumn":18},{"ruleId":"675","severity":1,"message":"824","line":12,"column":8,"nodeType":"677","messageId":"678","endLine":12,"endColumn":18},{"ruleId":"675","severity":1,"message":"825","line":13,"column":10,"nodeType":"677","messageId":"678","endLine":13,"endColumn":13},{"ruleId":"675","severity":1,"message":"826","line":14,"column":8,"nodeType":"677","messageId":"678","endLine":14,"endColumn":20},{"ruleId":"675","severity":1,"message":"827","line":15,"column":8,"nodeType":"677","messageId":"678","endLine":15,"endColumn":17},{"ruleId":"675","severity":1,"message":"828","line":16,"column":8,"nodeType":"677","messageId":"678","endLine":16,"endColumn":22},{"ruleId":"675","severity":1,"message":"829","line":17,"column":8,"nodeType":"677","messageId":"678","endLine":17,"endColumn":20},{"ruleId":"675","severity":1,"message":"830","line":40,"column":10,"nodeType":"677","messageId":"678","endLine":40,"endColumn":18},{"ruleId":"675","severity":1,"message":"831","line":40,"column":20,"nodeType":"677","messageId":"678","endLine":40,"endColumn":31},{"ruleId":"675","severity":1,"message":"832","line":27,"column":12,"nodeType":"677","messageId":"678","endLine":27,"endColumn":24},{"ruleId":"675","severity":1,"message":"737","line":5,"column":5,"nodeType":"677","messageId":"678","endLine":5,"endColumn":11},{"ruleId":"675","severity":1,"message":"833","line":33,"column":10,"nodeType":"677","messageId":"678","endLine":33,"endColumn":24},{"ruleId":"675","severity":1,"message":"834","line":43,"column":10,"nodeType":"677","messageId":"678","endLine":43,"endColumn":28},{"ruleId":"675","severity":1,"message":"835","line":55,"column":12,"nodeType":"677","messageId":"678","endLine":55,"endColumn":23},{"ruleId":"696","severity":1,"message":"836","line":61,"column":8,"nodeType":"698","endLine":61,"endColumn":10,"suggestions":"837"},{"ruleId":"675","severity":1,"message":"838","line":204,"column":11,"nodeType":"677","messageId":"678","endLine":204,"endColumn":23},{"ruleId":"675","severity":1,"message":"689","line":1,"column":8,"nodeType":"677","messageId":"678","endLine":1,"endColumn":13},{"ruleId":"747","severity":1,"message":"751","line":5,"column":18,"nodeType":"749","messageId":"750","endLine":5,"endColumn":20},{"ruleId":"747","severity":1,"message":"751","line":12,"column":23,"nodeType":"749","messageId":"750","endLine":12,"endColumn":25},{"ruleId":"747","severity":1,"message":"751","line":18,"column":23,"nodeType":"749","messageId":"750","endLine":18,"endColumn":25},{"ruleId":"675","severity":1,"message":"839","line":4,"column":19,"nodeType":"677","messageId":"678","endLine":4,"endColumn":30},{"ruleId":"747","severity":1,"message":"751","line":7,"column":13,"nodeType":"749","messageId":"750","endLine":7,"endColumn":15},{"ruleId":"675","severity":1,"message":"840","line":25,"column":11,"nodeType":"677","messageId":"678","endLine":25,"endColumn":21},{"ruleId":"747","severity":1,"message":"751","line":41,"column":38,"nodeType":"749","messageId":"750","endLine":41,"endColumn":40},"no-native-reassign",["841"],"no-negated-in-lhs",["842"],"no-unused-vars","'Main' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Card' is defined but never used.","'CardText' is defined but never used.","'CardTitle' is defined but never used.","'useSelector' is defined but never used.","'sessionPopup' is defined but never used.","'CancelledPolicy' is defined but never used.","'dispatch' is assigned a value but never used.","'popUpData' is assigned a value but never used.","'setPopupData' is assigned a value but never used.","'axios' is defined but never used.","'fetchEarning' is defined but never used.","'patchFetch' is defined but never used.","'start_session_img' is defined but never used.","'disableSession' is assigned a value but never used.","'value' is assigned a value but never used.","'setAgora' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookies', 'dipatchGetCards', 'dispatch', 'dispatchCheckUser', 'dispatchNotification', 'props.history', and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["843"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'cardRoute' is assigned a value but never used.","'cardRouteUser' is assigned a value but never used.","'heading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setHeading' and 'setLoginForm'. Either include them or remove the dependency array.",["844"],"React Hook useEffect has missing dependencies: 'authenticator', 'dispatchSignedupAction', and 'dispatchVerify'. Either include them or remove the dependency array.",["845"],"no-redeclare","'requestOptions' is already defined.","redeclared","'useState' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Input' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatchSignupBank'. Either include it or remove the dependency array.",["846"],"'TextField' is defined but never used.","'formVal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatchSignupAction'. Either include it or remove the dependency array.",["847"],"React Hook useEffect has a missing dependency: 'dispatchProfileFace'. Either include it or remove the dependency array.",["848"],"'connect_bank' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatchClose'. Either include it or remove the dependency array.",["849"],"React Hook useEffect has missing dependencies: 'dispatchCategories' and 'dispatchSignUpProfile'. Either include them or remove the dependency array.",["850"],"'dp' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatchCancelPolicy' and 'dispatchSessionPolicy'. Either include them or remove the dependency array.",["851"],"'create_user' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatchConnectBank'. Either include it or remove the dependency array.",["852"],"React Hook useEffect has missing dependencies: 'dispatchPayouts' and 'dispatchPayoutsDetails'. Either include them or remove the dependency array.",["853"],"'Button' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'CardBody' is defined but never used.","'CardLink' is defined but never used.","'CardSubtitle' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatchRatings'. Either include it or remove the dependency array.",["854"],"'trainerData' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'dispatchEarnings' and 'dispatchTrainerEarning'. Either include them or remove the dependency array.",["855"],"'tdp' is defined but never used.","'cc' is defined but never used.","'bookings' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatchEarningDetail' and 'dispatchSessionEarningDetails'. Either include them or remove the dependency array.",["856"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'user_profile_pic' is defined but never used.","'editForm' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatchCategories', 'dispatchEditSession', 'dispatchNewSession', and 'dispatchSetEditedImages'. Either include them or remove the dependency array.",["857"],"'ImageThumb' is assigned a value but never used.","'changeDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatchGetBookedUsers', 'dispatchSessionById', and 'dispatchSessionDetails'. Either include them or remove the dependency array.",["858"],"'totalBookedUsers' is assigned a value but never used.","'profileDp' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatchUserProfile' and 'getUserTrainerId'. Either include them or remove the dependency array.",["859"],"React Hook useEffect has missing dependencies: 'dispatchContact' and 'dispatchPages'. Either include them or remove the dependency array.",["860"],"React Hook useEffect has a missing dependency: 'dispatchContact'. Either include it or remove the dependency array.",["861"],"'getSettings' is assigned a value but never used.","'settedProfile' is assigned a value but never used.","'setUserProfile' is assigned a value but never used.","'profilePic' is assigned a value but never used.","'setProfilePic' is assigned a value but never used.",["862"],["863"],["864"],"'getTermsCondition' is assigned a value but never used.","'bankDetailForm' is assigned a value but never used.","'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatchContact' and 'initialValue'. Either include them or remove the dependency array.",["865"],["866"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ModalHeader' is defined but never used.","'toggle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatchCancelPop'. Either include it or remove the dependency array.",["867"],"React Hook useEffect has missing dependencies: 'dispatchCheckUser' and 'dispatchHead'. Either include them or remove the dependency array.",["868"],"'upcoming_session' is defined but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'agora_key' is defined but never used.","'user_logged_in' is defined but never used.","'delete_profile_pic' is defined but never used.","'signed_up' is defined but never used.","React Hook useEffect has a missing dependency: 'setFormData'. Either include it or remove the dependency array.",["869"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'dispatchSidebar'. Either include it or remove the dependency array.",["870"],"'getSideBarList' is defined but never used.","'get_sidebar_list' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatchCheckUser' and 'dispatchNotification'. Either include them or remove the dependency array.",["871"],"'session_past_details' is defined but never used.","'clsx' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'Collapse' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'red' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'cancelAction' is assigned a value but never used.","'leaveEventHost' is defined but never used.","'leaveEventAudience' is defined but never used.","'videoStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.videoStatus'. Either include it or remove the dependency array. If 'setVideoStatus' needs the current value of 'props.videoStatus', you can also switch to useReducer instead of useState and read 'props.videoStatus' in the reducer.",["872"],"'disableVideo' is assigned a value but never used.","'toggle_pass' is defined but never used.","'modalState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"873","fix":"874"},{"desc":"875","fix":"876"},{"desc":"877","fix":"878"},{"desc":"879","fix":"880"},{"desc":"881","fix":"882"},{"desc":"883","fix":"884"},{"desc":"885","fix":"886"},{"desc":"887","fix":"888"},{"desc":"889","fix":"890"},{"desc":"891","fix":"892"},{"desc":"893","fix":"894"},{"desc":"895","fix":"896"},{"desc":"897","fix":"898"},{"desc":"899","fix":"900"},{"desc":"901","fix":"902"},{"desc":"903","fix":"904"},{"desc":"905","fix":"906"},{"desc":"907","fix":"908"},{"desc":"909","fix":"910"},{"desc":"905","fix":"911"},{"desc":"909","fix":"912"},{"desc":"909","fix":"913"},{"desc":"914","fix":"915"},{"desc":"909","fix":"916"},{"desc":"917","fix":"918"},{"desc":"919","fix":"920"},{"desc":"921","fix":"922"},{"desc":"923","fix":"924"},{"desc":"925","fix":"926"},{"desc":"927","fix":"928"},"Update the dependencies array to be: [cookies, dipatchGetCards, dispatch, dispatchCheckUser, dispatchNotification, lists, props.history, userInfo]",{"range":"929","text":"930"},"Update the dependencies array to be: [setHeading, setLoginForm]",{"range":"931","text":"932"},"Update the dependencies array to be: [authenticator, dispatchSignedupAction, dispatchVerify]",{"range":"933","text":"934"},"Update the dependencies array to be: [dispatchSignupBank]",{"range":"935","text":"936"},"Update the dependencies array to be: [dispatchSignupAction]",{"range":"937","text":"938"},"Update the dependencies array to be: [dispatchProfileFace]",{"range":"939","text":"940"},"Update the dependencies array to be: [dispatchClose]",{"range":"941","text":"942"},"Update the dependencies array to be: [dispatchCategories, dispatchSignUpProfile]",{"range":"943","text":"944"},"Update the dependencies array to be: [dispatchCancelPolicy, dispatchSessionPolicy]",{"range":"945","text":"946"},"Update the dependencies array to be: [dispatchConnectBank]",{"range":"947","text":"948"},"Update the dependencies array to be: [dispatchPayouts, dispatchPayoutsDetails]",{"range":"949","text":"950"},"Update the dependencies array to be: [dispatchRatings]",{"range":"951","text":"952"},"Update the dependencies array to be: [dispatchEarnings, dispatchTrainerEarning]",{"range":"953","text":"954"},"Update the dependencies array to be: [dispatchEarningDetail, dispatchSessionEarningDetails]",{"range":"955","text":"956"},"Update the dependencies array to be: [dispatchCategories, dispatchEditSession, dispatchNewSession, dispatchSetEditedImages]",{"range":"957","text":"958"},"Update the dependencies array to be: [dispatchGetBookedUsers, dispatchSessionById, dispatchSessionDetails]",{"range":"959","text":"960"},"Update the dependencies array to be: [dispatchUserProfile, getUserTrainerId]",{"range":"961","text":"962"},"Update the dependencies array to be: [dispatchContact, dispatchPages]",{"range":"963","text":"964"},"Update the dependencies array to be: [dispatchContact]",{"range":"965","text":"966"},{"range":"967","text":"962"},{"range":"968","text":"966"},{"range":"969","text":"966"},"Update the dependencies array to be: [dispatchContact, initialValue, postApi]",{"range":"970","text":"971"},{"range":"972","text":"966"},"Update the dependencies array to be: [dispatchCancelPop]",{"range":"973","text":"974"},"Update the dependencies array to be: [Data.length, dispatchCheckUser, dispatchHead]",{"range":"975","text":"976"},"Update the dependencies array to be: [setFormData]",{"range":"977","text":"978"},"Update the dependencies array to be: [dispatchSidebar]",{"range":"979","text":"980"},"Update the dependencies array to be: [dispatchCheckUser, dispatchNotification]",{"range":"981","text":"982"},"Update the dependencies array to be: [props.videoStatus]",{"range":"983","text":"984"},[3258,3304],"[cookies, dipatchGetCards, dispatch, dispatchCheckUser, dispatchNotification, lists, props.history, userInfo]",[441,443],"[setHeading, setLoginForm]",[1085,1087],"[authenticator, dispatchSignedupAction, dispatchVerify]",[635,637],"[dispatchSignupBank]",[1482,1484],"[dispatchSignupAction]",[782,784],"[dispatchProfileFace]",[784,786],"[dispatchClose]",[969,971],"[dispatchCategories, dispatchSignUpProfile]",[809,811],"[dispatchCancelPolicy, dispatchSessionPolicy]",[872,874],"[dispatchConnectBank]",[836,838],"[dispatchPayouts, dispatchPayoutsDetails]",[941,943],"[dispatchRatings]",[854,856],"[dispatchEarnings, dispatchTrainerEarning]",[1068,1070],"[dispatchEarningDetail, dispatchSessionEarningDetails]",[2155,2157],"[dispatchCategories, dispatchEditSession, dispatchNewSession, dispatchSetEditedImages]",[1349,1351],"[dispatchGetBookedUsers, dispatchSessionById, dispatchSessionDetails]",[1094,1096],"[dispatchUserProfile, getUserTrainerId]",[983,985],"[dispatchContact, dispatchPages]",[696,698],"[dispatchContact]",[1579,1581],[670,672],[700,702],[2654,2663],"[dispatchContact, initialValue, postApi]",[968,970],[710,712],"[dispatchCancelPop]",[2236,2288],"[Data.length, dispatchCheckUser, dispatchHead]",[950,952],"[setFormData]",[675,677],"[dispatchSidebar]",[825,827],"[dispatchCheckUser, dispatchNotification]",[1621,1623],"[props.videoStatus]"]